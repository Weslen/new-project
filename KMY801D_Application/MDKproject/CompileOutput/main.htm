<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\CompileOutput\main.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\CompileOutput\main.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 4.1 [Build 481]: Last Updated: Tue Apr 01 14:02:19 2014
<BR><P>
<H3>Maximum Stack Usage =       7968 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
ProcStandbyKey &rArr; AutoPrintOrder &rArr; AcceptOrder &rArr; tcp_Connect &rArr; _tcp_Connect &rArr; send_at_cmd_and_return &rArr; ReadDatasFromtty &rArr; kmy_USART2ReceiveData
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[23]">ADC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[23]">ADC1_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[3]">Polish_Display_Keytone_Close</a> from setting.o(.text) referenced 2 times from setting.o(.data)
 <LI><a href="#[4]">Polish_Display_Keytone_Open</a> from setting.o(.text) referenced 2 times from setting.o(.data)
 <LI><a href="#[5]">LanguageSet_Chinese</a> from setting.o(.text) referenced 2 times from setting.o(.data)
 <LI><a href="#[6]">LanguageSet_English</a> from setting.o(.text) referenced 2 times from setting.o(.data)
 <LI><a href="#[7]">Reset_Handler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[8]">NMI_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[9]">HardFault_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[a]">MemManage_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[b]">BusFault_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[c]">UsageFault_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[d]">SVC_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[e]">DebugMon_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[f]">PendSV_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[10]">SysTick_Handler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[11]">WWDG_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[12]">PVD_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[13]">TAMPER_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[14]">RTC_IRQHandler</a> from stm32f10x_it.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[15]">FLASH_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[16]">RCC_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[17]">EXTI0_IRQHandler</a> from kmy_keydrv.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[18]">EXTI1_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[19]">EXTI2_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[1a]">EXTI3_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[1b]">EXTI4_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[1c]">DMA1_Channel1_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[1d]">DMA1_Channel2_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[1e]">DMA1_Channel3_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[1f]">DMA1_Channel4_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[20]">DMA1_Channel5_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[21]">DMA1_Channel6_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[22]">DMA1_Channel7_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[23]">ADC1_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[24]">EXTI9_5_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[25]">TIM1_BRK_TIM15_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[26]">TIM1_UP_TIM16_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[27]">TIM1_TRG_COM_TIM17_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[28]">TIM1_CC_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[29]">TIM2_IRQHandler</a> from kmy_time.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[2a]">TIM3_IRQHandler</a> from kmy_time.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[2b]">TIM4_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[2c]">I2C1_EV_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[2d]">I2C1_ER_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[2e]">I2C2_EV_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[2f]">I2C2_ER_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[30]">SPI1_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[31]">SPI2_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[32]">USART1_IRQHandler</a> from kmy_usart1drv.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[33]">USART2_IRQHandler</a> from kmy_usart2drv.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[34]">USART3_IRQHandler</a> from kmy_usart3drv.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[35]">EXTI15_10_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[36]">RTCAlarm_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[37]">CEC_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[38]">TIM6_DAC_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[39]">TIM7_IRQHandler</a> from startup_stm32f10x_md_vl.o(.text) referenced from startup_stm32f10x_md_vl.o(RESET)
 <LI><a href="#[3a]">main</a> from main.o(.text) referenced from entry7.o(.ARM.Collect$$$$00000007)
 <LI><a href="#[3b]">ProcStandbyKey</a> from main.o(.text) referenced 2 times from main.o(.text)
 <LI><a href="#[3c]">MainMenuScreen_Settings</a> from setting.o(.text) referenced from main.o(.text)
 <LI><a href="#[3d]">SelfTest</a> from selftest.o(.text) referenced from main.o(.text)
 <LI><a href="#[3e]">SystemInit</a> from system_stm32f10x.o(.text) referenced from startup_stm32f10x_md_vl.o(.text)
 <LI><a href="#[3f]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f10x_md_vl.o(.text)
 <LI><a href="#[40]">fputc</a> from my_library.o(.text) referenced from printfa.o(i.__0printf)
 <LI><a href="#[41]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0sprintf)
 <LI><a href="#[42]">Confirm_Orders</a> from foodorder.o(.text) referenced from main.o(.constdata)
 <LI><a href="#[43]">Message_delete_this</a> from message.o(.text) referenced from message.o(.constdata)
 <LI><a href="#[44]">Message_delete_all</a> from message.o(.text) referenced from message.o(.constdata)
 <LI><a href="#[45]">WriteMessage</a> from message.o(.text) referenced from message.o(.constdata)
 <LI><a href="#[46]">ReceiveMailBox</a> from message.o(.text) referenced from message.o(.constdata)
 <LI><a href="#[47]">MobileQQ</a> from message.o(.text) referenced from message.o(.constdata)
 <LI><a href="#[48]">SendedMessage</a> from message.o(.text) referenced from message.o(.constdata)
 <LI><a href="#[49]">SendedBox</a> from message.o(.text) referenced from message.o(.constdata)
 <LI><a href="#[4a]">DraftBox</a> from message.o(.text) referenced from message.o(.constdata)
 <LI><a href="#[4b]">MessageSet</a> from message.o(.text) referenced from message.o(.constdata)
 <LI><a href="#[4c]">MessageCapacity</a> from message.o(.text) referenced from message.o(.constdata)
 <LI><a href="#[4d]">ColorWriteMessage</a> from message.o(.text) referenced from message.o(.constdata)
 <LI><a href="#[4e]">ColorReceiveMailBox</a> from message.o(.text) referenced from message.o(.constdata)
 <LI><a href="#[4f]">ColorSendedMessage</a> from message.o(.text) referenced from message.o(.constdata)
 <LI><a href="#[50]">ColorSendedBox</a> from message.o(.text) referenced from message.o(.constdata)
 <LI><a href="#[51]">ColorDraftBox</a> from message.o(.text) referenced from message.o(.constdata)
 <LI><a href="#[52]">ColorMessageSet</a> from message.o(.text) referenced from message.o(.constdata)
 <LI><a href="#[53]">ColorMessageCapacity</a> from message.o(.text) referenced from message.o(.constdata)
 <LI><a href="#[54]">BroadCastRead</a> from message.o(.text) referenced from message.o(.constdata)
 <LI><a href="#[55]">BroadCastStart</a> from message.o(.text) referenced from message.o(.constdata)
 <LI><a href="#[56]">BroadCastChannelSet</a> from message.o(.text) referenced from message.o(.constdata)
 <LI><a href="#[57]">BroadCastLanguageSelect</a> from message.o(.text) referenced from message.o(.constdata)
 <LI><a href="#[58]">VoiceBoxReceive</a> from message.o(.text) referenced from message.o(.constdata)
 <LI><a href="#[59]">VoiceBoxNumberSet</a> from message.o(.text) referenced from message.o(.constdata)
 <LI><a href="#[5a]">MainMenuScreen_Message_ShortMessage</a> from message.o(.text) referenced from message.o(.constdata)
 <LI><a href="#[5b]">MainMenuScreen_Message_ColorMessage</a> from message.o(.text) referenced from message.o(.constdata)
 <LI><a href="#[5c]">MainMenuScreen_Message_XiaoquGuanbo</a> from message.o(.text) referenced from message.o(.constdata)
 <LI><a href="#[5d]">MainMenuScreen_Message_VoiceMailbox</a> from message.o(.text) referenced from message.o(.constdata)
 <LI><a href="#[5e]">TemporaryNotProvideThisFunction</a> from selftest.o(.text) referenced 7 times from selftest.o(.constdata)
 <LI><a href="#[5f]">ExternalSerail1_GSMModule</a> from selftest.o(.text) referenced from selftest.o(.constdata)
 <LI><a href="#[60]">ExternalSerail1_Printer</a> from selftest.o(.text) referenced from selftest.o(.constdata)
 <LI><a href="#[61]">ReadEepromPage</a> from selftest.o(.text) referenced from selftest.o(.constdata)
 <LI><a href="#[62]">EraseEepromPage</a> from selftest.o(.text) referenced from selftest.o(.constdata)
 <LI><a href="#[63]">SelfTest_ReadEepromPage0_30</a> from selftest.o(.text) referenced from selftest.o(.constdata)
 <LI><a href="#[64]">EraseEepromPage0_30</a> from selftest.o(.text) referenced from selftest.o(.constdata)
 <LI><a href="#[65]">EraseFlashPage</a> from selftest.o(.text) referenced from selftest.o(.constdata)
 <LI><a href="#[66]">ReadFlashPage</a> from selftest.o(.text) referenced from selftest.o(.constdata)
 <LI><a href="#[67]">WriteFlashPage</a> from selftest.o(.text) referenced from selftest.o(.constdata)
 <LI><a href="#[68]">SelfTest_Soft</a> from selftest.o(.text) referenced from selftest.o(.constdata)
 <LI><a href="#[69]">FromInput_Test</a> from selftest.o(.text) referenced from selftest.o(.constdata)
 <LI><a href="#[6a]">SelfTest_Key</a> from selftest.o(.text) referenced from selftest.o(.constdata)
 <LI><a href="#[6b]">SelfTest_LED</a> from selftest.o(.text) referenced from selftest.o(.constdata)
 <LI><a href="#[6c]">SelfTest_MagCard</a> from selftest.o(.text) referenced from selftest.o(.constdata)
 <LI><a href="#[6d]">SelfTest_BatVoltage</a> from selftest.o(.text) referenced from selftest.o(.constdata)
 <LI><a href="#[6e]">SelfTest_Printer</a> from selftest.o(.text) referenced from selftest.o(.constdata)
 <LI><a href="#[6f]">SelfTest_MakeCall</a> from selftest.o(.text) referenced from selftest.o(.constdata)
 <LI><a href="#[70]">SelfTest_SendSMS</a> from selftest.o(.text) referenced from selftest.o(.constdata)
 <LI><a href="#[71]">SelfTest_DisplayFont</a> from selftest.o(.text) referenced from selftest.o(.constdata)
 <LI><a href="#[72]">SelfTest_PrinterFont</a> from selftest.o(.text) referenced from selftest.o(.constdata)
 <LI><a href="#[73]">UpgradeChinese</a> from selftest.o(.text) referenced from selftest.o(.constdata)
 <LI><a href="#[74]">SelfTest_ReceiveMessage</a> from selftest.o(.text) referenced from selftest.o(.constdata)
 <LI><a href="#[46]">ReceiveMailBox</a> from message.o(.text) referenced from selftest.o(.constdata)
 <LI><a href="#[75]">SoftWare_Debug</a> from selftest.o(.text) referenced from selftest.o(.constdata)
 <LI><a href="#[76]">BasicApnSetApn</a> from setting.o(.text) referenced 2 times from setting.o(.constdata)
 <LI><a href="#[77]">BasicApnSetUsername</a> from setting.o(.text) referenced 2 times from setting.o(.constdata)
 <LI><a href="#[78]">BasicApnSetPassword</a> from setting.o(.text) referenced 2 times from setting.o(.constdata)
 <LI><a href="#[79]">DisplayVersion</a> from version.o(.text) referenced from setting.o(.constdata)
 <LI><a href="#[7a]">DisplayCID</a> from setting.o(.text) referenced from setting.o(.constdata)
 <LI><a href="#[7b]">Display_IMEI</a> from setting.o(.text) referenced from setting.o(.constdata)
 <LI><a href="#[7c]">Display_ChipId</a> from setting.o(.text) referenced from setting.o(.constdata)
 <LI><a href="#[7d]">Display_RandomNumber</a> from setting.o(.text) referenced from setting.o(.constdata)
 <LI><a href="#[7e]">Display_KMY_LibVersion</a> from setting.o(.text) referenced from setting.o(.constdata)
 <LI><a href="#[7f]">ContrastSet</a> from setting.o(.text) referenced from setting.o(.constdata)
 <LI><a href="#[80]">BasicKeyTone</a> from setting.o(.text) referenced 2 times from setting.o(.constdata)
 <LI><a href="#[81]">TimeDateSet</a> from setting.o(.text) referenced from setting.o(.constdata)
 <LI><a href="#[82]">PowerOffScreenTime</a> from setting.o(.text) referenced from setting.o(.constdata)
 <LI><a href="#[83]">LanguageSet</a> from setting.o(.text) referenced from setting.o(.constdata)
 <LI><a href="#[84]">ReadSomeMessage</a> from setting.o(.text) referenced from setting.o(.constdata)
 <LI><a href="#[85]">PIN_OpenClose</a> from setting.o(.text) referenced from setting.o(.constdata)
 <LI><a href="#[86]">PIN_Change</a> from setting.o(.text) referenced from setting.o(.constdata)
 <LI><a href="#[87]">SIM_PINset</a> from setting.o(.text) referenced from setting.o(.constdata)
 <LI><a href="#[88]">UpdateParameter</a> from setting.o(.text) referenced from setting.o(.constdata)
 <LI><a href="#[89]">RestaurantID_set</a> from setting.o(.text) referenced from setting.o(.constdata)
 <LI><a href="#[8a]">IpAddSet</a> from setting.o(.text) referenced from setting.o(.constdata)
 <LI><a href="#[8b]">DomainSet</a> from setting.o(.text) referenced from setting.o(.constdata)
 <LI><a href="#[8c]">VersionURL_Set</a> from setting.o(.text) referenced from setting.o(.constdata)
 <LI><a href="#[8d]">UpgradeURL_Set</a> from setting.o(.text) referenced from setting.o(.constdata)
 <LI><a href="#[8e]">OrderURL_set</a> from setting.o(.text) referenced from setting.o(.constdata)
 <LI><a href="#[8f]">Callback_set</a> from setting.o(.text) referenced from setting.o(.constdata)
 <LI><a href="#[90]">LoginUsername_set</a> from setting.o(.text) referenced from setting.o(.constdata)
 <LI><a href="#[91]">LoginPassword_set</a> from setting.o(.text) referenced from setting.o(.constdata)
 <LI><a href="#[92]">CheckOrderInterval_set</a> from setting.o(.text) referenced from setting.o(.constdata)
 <LI><a href="#[93]">GPRSOpenTime_set</a> from setting.o(.text) referenced from setting.o(.constdata)
 <LI><a href="#[94]">GPRSCloseTime_set</a> from setting.o(.text) referenced from setting.o(.constdata)
 <LI><a href="#[95]">BeepDuration_set</a> from setting.o(.text) referenced from setting.o(.constdata)
 <LI><a href="#[96]">RejectReason_set</a> from setting.o(.text) referenced from setting.o(.constdata)
 <LI><a href="#[97]">PrintPageHeader_set</a> from setting.o(.text) referenced from setting.o(.constdata)
 <LI><a href="#[98]">PrintPageFooter_set</a> from setting.o(.text) referenced from setting.o(.constdata)
 <LI><a href="#[99]">AcceptTimeMode_set</a> from setting.o(.text) referenced from setting.o(.constdata)
 <LI><a href="#[9a]">AutoReboot</a> from setting.o(.text) referenced from setting.o(.constdata)
 <LI><a href="#[9b]">AutoPrintTime</a> from setting.o(.text) referenced from setting.o(.constdata)
 <LI><a href="#[9c]">OpPsword</a> from setting.o(.text) referenced from setting.o(.constdata)
 <LI><a href="#[9d]">InitParameterSet</a> from setting.o(.text) referenced from setting.o(.constdata)
 <LI><a href="#[9e]">PinSet</a> from setting.o(.text) referenced from setting.o(.constdata)
 <LI><a href="#[9f]">RestoreChuChangSet</a> from setting.o(.text) referenced from setting.o(.constdata)
 <LI><a href="#[a0]">BasicSettings</a> from setting.o(.text) referenced from setting.o(.constdata)
 <LI><a href="#[a1]">AdvancedSet</a> from setting.o(.text) referenced from setting.o(.constdata)
 <LI><a href="#[a2]">AcceptOrder</a> from foodorder.o(.text) referenced from foodorder.o(.constdata)
 <LI><a href="#[a3]">RejectOrder</a> from foodorder.o(.text) referenced from foodorder.o(.constdata)
 <LI><a href="#[13d]">MainMenuScreen</a> from main.o(.text) referenced from main.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[3f]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(.text)
</UL>
<P><STRONG><a name="[307]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[a4]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2fd]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[308]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7.o(.ARM.Collect$$$$00000007))

<P><STRONG><a name="[a6]"></a>Cursor_OnOff</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, cursor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = Cursor_OnOff &rArr; reverse_area &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverse_area
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormInput
</UL>

<P><STRONG><a name="[a8]"></a>Cursor_Twinkle</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, cursor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = Cursor_Twinkle &rArr; reverse_area &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverse_area
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeGetMilliseconds
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormInput
</UL>

<P><STRONG><a name="[aa]"></a>Cursor_SetX</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, cursor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = Cursor_SetX &rArr; reverse_area &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverse_area
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeGetMilliseconds
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormInput
</UL>

<P><STRONG><a name="[ab]"></a>Cursor_SetY</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, cursor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = Cursor_SetY &rArr; reverse_area &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverse_area
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeGetMilliseconds
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormInput
</UL>

<P><STRONG><a name="[ac]"></a>Cursor_SetWidth</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, cursor.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverse_area
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeGetMilliseconds
</UL>

<P><STRONG><a name="[ad]"></a>Cursor_SetHigh</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, cursor.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverse_area
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeGetMilliseconds
</UL>

<P><STRONG><a name="[ae]"></a>Cursor_SetTwinkle_ms</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, cursor.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverse_area
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeGetMilliseconds
</UL>

<P><STRONG><a name="[af]"></a>Cursor_Init</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, cursor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Cursor_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeGetMilliseconds
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormInput
</UL>

<P><STRONG><a name="[b0]"></a>EepromFile_readPage</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, eepromfilesystem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = EepromFile_readPage &rArr; kmy_EepromReadSequent &rArr; IIC_Read_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromReadSequent
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_GetFileName
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_Create
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_DeleteEfpAttibute
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_GetPageRelationAreaTwoByte_AndDelete
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_GetAIdlePage
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_SetPageArea
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_checkThisPageWhetherOk
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_GetPageRelationAreaTwoByte
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_CheckWhetherHaveThisFile
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_GetIdleAreaSize
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_GetFileStruct
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_readFileCurrentPage
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_SaveEfpAttibute
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadEepromPage
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_ReadEepromPage0_30
</UL>

<P><STRONG><a name="[b2]"></a>EepromFile_WritePage</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, eepromfilesystem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = EepromFile_WritePage &rArr; kmy_EepromWritePage &rArr; IIC_Send_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromWritePage
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_Write
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_Create
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_FileSystemFormat
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_DeleteEfpAttibute
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_GetPageRelationAreaTwoByte_AndDelete
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_SetPageArea
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_checkThisPageWhetherOk
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_SaveEfpAttibute
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EraseEepromPage0_30
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EraseEepromPage
</UL>

<P><STRONG><a name="[b4]"></a>EepromFile_GetFileStruct</STRONG> (Thumb, 102 bytes, Stack size 88 bytes, eepromfilesystem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = EepromFile_GetFileStruct &rArr; EepromFile_readPage &rArr; kmy_EepromReadSequent &rArr; IIC_Read_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_readPage
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_Open
</UL>

<P><STRONG><a name="[b6]"></a>EepromFile_GetTotalFiles</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, eepromfilesystem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = EepromFile_GetTotalFiles &rArr; kmy_EepromReadSequent &rArr; IIC_Read_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromReadSequent
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_Create
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_TotalFilePlus1
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_TotalFileAdd1
</UL>

<P><STRONG><a name="[b7]"></a>EepromFile_SetTotalFiles</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, eepromfilesystem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = EepromFile_SetTotalFiles &rArr; kmy_EepromWriteByte &rArr; kmy_EepromReadByte &rArr; IIC_Read_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_TotalFilePlus1
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_TotalFileAdd1
</UL>

<P><STRONG><a name="[b9]"></a>EepromFile_GetIdleAreaSize</STRONG> (Thumb, 74 bytes, Stack size 88 bytes, eepromfilesystem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = EepromFile_GetIdleAreaSize &rArr; EepromFile_readPage &rArr; kmy_EepromReadSequent &rArr; IIC_Read_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_readPage
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_Write
</UL>

<P><STRONG><a name="[ba]"></a>EepromFile_CheckWhetherHaveThisFile</STRONG> (Thumb, 280 bytes, Stack size 96 bytes, eepromfilesystem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = EepromFile_CheckWhetherHaveThisFile &rArr; EepromFile_readPage &rArr; kmy_EepromReadSequent &rArr; IIC_Read_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_readPage
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_CheckFileExist
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_Delete
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_Open
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_Create
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_DeleteEfpAttibute
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_SaveEfpAttibute
</UL>

<P><STRONG><a name="[bf]"></a>EepromFile_GetPageRelationAreaTwoByte</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, eepromfilesystem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = EepromFile_GetPageRelationAreaTwoByte &rArr; EepromFile_readPage &rArr; kmy_EepromReadSequent &rArr; IIC_Read_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_readPage
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_GetPhysicalPage
</UL>

<P><STRONG><a name="[c2]"></a>EepromFile_checkThisPageWhetherOk</STRONG> (Thumb, 56 bytes, Stack size 80 bytes, eepromfilesystem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = EepromFile_checkThisPageWhetherOk &rArr; EepromFile_WritePage &rArr; kmy_EepromWritePage &rArr; IIC_Send_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_WritePage
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_readPage
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_GetAIdlePage
</UL>

<P><STRONG><a name="[c3]"></a>EepromFile_SetPageArea</STRONG> (Thumb, 68 bytes, Stack size 88 bytes, eepromfilesystem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = EepromFile_SetPageArea &rArr; EepromFile_WritePage &rArr; kmy_EepromWritePage &rArr; IIC_Send_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_WritePage
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_readPage
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_Write
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_GetAIdlePage
</UL>

<P><STRONG><a name="[c4]"></a>EepromFile_GetAIdlePage</STRONG> (Thumb, 118 bytes, Stack size 88 bytes, eepromfilesystem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = EepromFile_GetAIdlePage &rArr; EepromFile_SetPageArea &rArr; EepromFile_WritePage &rArr; kmy_EepromWritePage &rArr; IIC_Send_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_SetPageArea
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_checkThisPageWhetherOk
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_readPage
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_Write
</UL>

<P><STRONG><a name="[c5]"></a>EepromFile_GetPageRelationAreaTwoByte_AndDelete</STRONG> (Thumb, 70 bytes, Stack size 80 bytes, eepromfilesystem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = EepromFile_GetPageRelationAreaTwoByte_AndDelete &rArr; EepromFile_WritePage &rArr; kmy_EepromWritePage &rArr; IIC_Send_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_WritePage
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_readPage
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_DeleteAllPageArea
</UL>

<P><STRONG><a name="[c6]"></a>EepromFile_DeleteAllPageArea</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, eepromfilesystem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = EepromFile_DeleteAllPageArea &rArr; EepromFile_GetPageRelationAreaTwoByte_AndDelete &rArr; EepromFile_WritePage &rArr; kmy_EepromWritePage &rArr; IIC_Send_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_GetPageRelationAreaTwoByte_AndDelete
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_Write
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__EepromFile_Delete
</UL>

<P><STRONG><a name="[c7]"></a>EepromFile_DeleteEfpAttibute</STRONG> (Thumb, 136 bytes, Stack size 88 bytes, eepromfilesystem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = EepromFile_DeleteEfpAttibute &rArr; EepromFile_CheckWhetherHaveThisFile &rArr; EepromFile_readPage &rArr; kmy_EepromReadSequent &rArr; IIC_Read_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_CheckWhetherHaveThisFile
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_WritePage
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_readPage
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__EepromFile_Delete
</UL>

<P><STRONG><a name="[c9]"></a>EepromFile_TotalFilePlus1</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, eepromfilesystem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = EepromFile_TotalFilePlus1 &rArr; EepromFile_SetTotalFiles &rArr; kmy_EepromWriteByte &rArr; kmy_EepromReadByte &rArr; IIC_Read_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_SetTotalFiles
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_GetTotalFiles
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__EepromFile_Delete
</UL>

<P><STRONG><a name="[ca]"></a>__EepromFile_Delete</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, eepromfilesystem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = __EepromFile_Delete &rArr; EepromFile_DeleteEfpAttibute &rArr; EepromFile_CheckWhetherHaveThisFile &rArr; EepromFile_readPage &rArr; kmy_EepromReadSequent &rArr; IIC_Read_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_TotalFilePlus1
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_DeleteEfpAttibute
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_DeleteAllPageArea
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_Delete
</UL>

<P><STRONG><a name="[cb]"></a>EepromFile_FileSystemFormat</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, eepromfilesystem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = EepromFile_FileSystemFormat &rArr; InitOrder &rArr; kmy_EepromWriteByte &rArr; kmy_EepromReadByte &rArr; IIC_Read_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitOrder
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_WritePage
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationInit
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreChuChangSet
</UL>

<P><STRONG><a name="[cd]"></a>EepromFile_Create</STRONG> (Thumb, 378 bytes, Stack size 88 bytes, eepromfilesystem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = EepromFile_Create &rArr; EepromFile_CheckWhetherHaveThisFile &rArr; EepromFile_readPage &rArr; kmy_EepromReadSequent &rArr; IIC_Read_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_CheckWhetherHaveThisFile
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_GetTotalFiles
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_WritePage
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_readPage
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_TotalFileAdd1
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_WriteData
</UL>

<P><STRONG><a name="[cf]"></a>EepromFile_Open</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, eepromfilesystem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = EepromFile_Open &rArr; EepromFile_CheckWhetherHaveThisFile &rArr; EepromFile_readPage &rArr; kmy_EepromReadSequent &rArr; IIC_Read_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_CheckWhetherHaveThisFile
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_GetFileStruct
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreGlobalVariable
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_ReadData
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_WriteData
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_Delete
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StorageVariable
</UL>

<P><STRONG><a name="[309]"></a>EepromFile_Seek</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, eepromfilesystem.o(.text), UNUSED)

<P><STRONG><a name="[d0]"></a>EepromFile_read</STRONG> (Thumb, 162 bytes, Stack size 88 bytes, eepromfilesystem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = EepromFile_read &rArr; EepromFile_readFileCurrentPage &rArr; EepromFile_GetPhysicalPage &rArr; EepromFile_GetPageRelationAreaTwoByte &rArr; EepromFile_readPage &rArr; kmy_EepromReadSequent &rArr; IIC_Read_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_readFileCurrentPage
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreGlobalVariable
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_ReadData
</UL>

<P><STRONG><a name="[d2]"></a>EepromFile_Write</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, eepromfilesystem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = EepromFile_Write &rArr; EepromFile_GetAIdlePage &rArr; EepromFile_SetPageArea &rArr; EepromFile_WritePage &rArr; kmy_EepromWritePage &rArr; IIC_Send_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromWritePage
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_DeleteAllPageArea
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_GetAIdlePage
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_SetPageArea
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_GetIdleAreaSize
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_WritePage
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_SaveEfpAttibute
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_WriteData
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StorageVariable
</UL>

<P><STRONG><a name="[d3]"></a>EepromFile_Delete</STRONG> (Thumb, 46 bytes, Stack size 40 bytes, eepromfilesystem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = EepromFile_Delete &rArr; __EepromFile_Delete &rArr; EepromFile_DeleteEfpAttibute &rArr; EepromFile_CheckWhetherHaveThisFile &rArr; EepromFile_readPage &rArr; kmy_EepromReadSequent &rArr; IIC_Read_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_Open
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__EepromFile_Delete
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_CheckWhetherHaveThisFile
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreConfigFile
</UL>

<P><STRONG><a name="[d4]"></a>EepromFile_CheckFileExist</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, eepromfilesystem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = EepromFile_CheckFileExist &rArr; EepromFile_CheckWhetherHaveThisFile &rArr; EepromFile_readPage &rArr; kmy_EepromReadSequent &rArr; IIC_Read_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_CheckWhetherHaveThisFile
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationInit
</UL>

<P><STRONG><a name="[d5]"></a>EepromFile_WriteData</STRONG> (Thumb, 90 bytes, Stack size 40 bytes, eepromfilesystem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = EepromFile_WriteData &rArr; EepromFile_Write &rArr; EepromFile_GetAIdlePage &rArr; EepromFile_SetPageArea &rArr; EepromFile_WritePage &rArr; kmy_EepromWritePage &rArr; IIC_Send_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_Write
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_Open
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_Create
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreConfigFile
</UL>

<P><STRONG><a name="[d6]"></a>EepromFile_ReadData</STRONG> (Thumb, 62 bytes, Stack size 40 bytes, eepromfilesystem.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_read
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_Open
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[d7]"></a>EepromFile_GetFileName</STRONG> (Thumb, 134 bytes, Stack size 88 bytes, eepromfilesystem.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_readPage
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>

<P><STRONG><a name="[d8]"></a>abcReadCode</STRONG> (Thumb, 414 bytes, Stack size 96 bytes, forminput.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = abcReadCode &rArr; clear_area &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdTextOut
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_area
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventPost
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverse_area
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeGetMilliseconds
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormInput
</UL>

<P><STRONG><a name="[df]"></a>ABCReadCode</STRONG> (Thumb, 416 bytes, Stack size 96 bytes, forminput.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = ABCReadCode &rArr; clear_area &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdTextOut
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_area
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventPost
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverse_area
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeGetMilliseconds
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormInput
</UL>

<P><STRONG><a name="[e7]"></a>_FormInput123ReadCode</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, forminput.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormInput
</UL>

<P><STRONG><a name="[e9]"></a>Switch_InputMode</STRONG> (Thumb, 252 bytes, Stack size 0 bytes, forminput.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormInput
</UL>

<P><STRONG><a name="[ea]"></a>GetinputModeString</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, forminput.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormInput
</UL>

<P><STRONG><a name="[e0]"></a>Form_text_out</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, forminput.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = Form_text_out &rArr; text_out_length &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_length
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormInput
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Form_display
</UL>

<P><STRONG><a name="[e2]"></a>Form_display</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, forminput.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = Form_display &rArr; Form_text_out &rArr; text_out_length &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdTextOut
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Form_text_out
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormInput
</UL>

<P><STRONG><a name="[e3]"></a>Form_ClearDisplayErea</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, forminput.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = Form_ClearDisplayErea &rArr; text_out_length &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_length
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormInput
</UL>

<P><STRONG><a name="[e4]"></a>FormInput</STRONG> (Thumb, 2022 bytes, Stack size 72 bytes, forminput.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = FormInput &rArr; ABCReadCode &rArr; clear_area &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_strcat_insert
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdTextOut
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_area
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventPost
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Form_ClearDisplayErea
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Form_display
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Form_text_out
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetinputModeString
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_InputMode
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FormInput123ReadCode
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABCReadCode
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abcReadCode
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverse_area
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cursor_Init
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cursor_SetY
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cursor_SetX
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cursor_Twinkle
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cursor_OnOff
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FromInput_Test
</UL>

<P><STRONG><a name="[eb]"></a>send_at_cmd</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = send_at_cmd &rArr; kmy_USART2SendString
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART2SendString
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewMessageAct
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveMailBox
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMessage
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sim900B_init
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIMEI
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_DisConnect
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_return_NotResposeKey
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_return
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_receive
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendAtCommand_UntillSuccess
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_return_3errs
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMessage
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMessage_TextMode
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_ReceiveMessage
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_MakeCall
</UL>

<P><STRONG><a name="[ed]"></a>Gprs_SendDataLen</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Gprs_SendDataLen &rArr; kmy_USART2SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART2SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send
</UL>

<P><STRONG><a name="[ef]"></a>ReadDatasFromtty</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ReadDatasFromtty &rArr; kmy_USART2ReceiveData
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART2ReceiveData
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive_KMY
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_return_NotResposeKey
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_return
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_receive
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDatasFromSIM300_OKstr
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendAtCommand_UntillSuccess
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_return_3errs
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_ReceiveMessage
</UL>

<P><STRONG><a name="[f1]"></a>SendAtCommand_UntillSuccess</STRONG> (Thumb, 126 bytes, Stack size 136 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = SendAtCommand_UntillSuccess &rArr; ReadDatasFromtty &rArr; kmy_USART2ReceiveData
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDatasFromtty
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMessage_TextMode
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_MakeCall
</UL>

<P><STRONG><a name="[f3]"></a>ReadDatasFromSIM300_OKstr</STRONG> (Thumb, 126 bytes, Stack size 40 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = ReadDatasFromSIM300_OKstr &rArr; kmy_GetKeyValue &rArr; KeyScan &rArr; __KeyScan &rArr; SetRow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART2ReceiveReset
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDatasFromtty
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewMessageAct
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMessage
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIMEI
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMessage
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMessage_TextMode
</UL>

<P><STRONG><a name="[f5]"></a>send_at_cmd_and_receive</STRONG> (Thumb, 146 bytes, Stack size 48 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = send_at_cmd_and_receive &rArr; kmy_GetKeyValue &rArr; KeyScan &rArr; __KeyScan &rArr; SetRow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART2ReceiveReset
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAutoExitTime
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDatasFromtty
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageDisplayContext
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetOneScreenMessageNumber
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMessageNode
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMessageTotalAndCapacity
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPINAndPUK
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeCSPN
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeElectricity
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeSignalQuality
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCCID
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PUK_Required
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPINPUKTimes
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RejectOrder
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMessage_TextMode
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_ReceiveMessage
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_BatVoltage
</UL>

<P><STRONG><a name="[f7]"></a>send_at_cmd_and_return</STRONG> (Thumb, 154 bytes, Stack size 1072 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1128<LI>Call Chain = send_at_cmd_and_return &rArr; ReadDatasFromtty &rArr; kmy_USART2ReceiveData
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART2ReceiveReset
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAutoExitTime
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDatasFromtty
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Message_delete_all
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Message_delete_this
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPINAndPUK
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sim900B_init
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_apn
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_Connect
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_Connect
</UL>

<P><STRONG><a name="[f8]"></a>send_at_cmd_and_return_NotResposeKey</STRONG> (Thumb, 156 bytes, Stack size 1072 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAutoExitTime
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDatasFromtty
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>

<P><STRONG><a name="[fe]"></a>tcp_DisConnect</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tcp_DisConnect &rArr; send_at_cmd &rArr; kmy_USART2SendString
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_Connect
</UL>

<P><STRONG><a name="[ff]"></a>tcp_Connect</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1360<LI>Call Chain = tcp_Connect &rArr; _tcp_Connect &rArr; send_at_cmd_and_return &rArr; ReadDatasFromtty &rArr; kmy_USART2ReceiveData
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_DataLED_Flash
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_DisConnect
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_return
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_Connect
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RejectOrder
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder_SpeedKey
</UL>

<P><STRONG><a name="[102]"></a>tcp_send</STRONG> (Thumb, 112 bytes, Stack size 80 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1208<LI>Call Chain = tcp_send &rArr; send_at_cmd_and_return &rArr; ReadDatasFromtty &rArr; kmy_USART2ReceiveData
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_itoa
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_charhexprintf_buff
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_DataLED_Flash
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_return
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gprs_SendDataLen
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RejectOrder
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder_SpeedKey
</UL>

<P><STRONG><a name="[105]"></a>GetTotallen</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_axtoi
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive_KMY
</UL>

<P><STRONG><a name="[107]"></a>tcp_receive</STRONG> (Thumb, 126 bytes, Stack size 48 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = tcp_receive &rArr; kmy_GetKeyValue &rArr; KeyScan &rArr; __KeyScan &rArr; SetRow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_DataLED_Flash
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBLOverTime
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAutoExitTime
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDatasFromtty
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RejectOrder
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder_SpeedKey
</UL>

<P><STRONG><a name="[109]"></a>tcp_receive_KMY</STRONG> (Thumb, 772 bytes, Stack size 72 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_charhexprintf_buff
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_DataLED_Flash
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBLOverTime
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAutoExitTime
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTotallen
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDatasFromtty
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>

<P><STRONG><a name="[10b]"></a>ReadPINPUKTimes</STRONG> (Thumb, 234 bytes, Stack size 120 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_receive
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PUK_Required
</UL>

<P><STRONG><a name="[10c]"></a>PUK_Required</STRONG> (Thumb, 478 bytes, Stack size 1096 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PassWordInput
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPINPUKTimes
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_receive
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>

<P><STRONG><a name="[10f]"></a>GetIMEI</STRONG> (Thumb, 118 bytes, Stack size 72 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = GetIMEI &rArr; ReadDatasFromSIM300_OKstr &rArr; kmy_GetKeyValue &rArr; KeyScan &rArr; __KeyScan &rArr; SetRow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDatasFromSIM300_OKstr
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_IMEI
</UL>

<P><STRONG><a name="[110]"></a>GetCCID</STRONG> (Thumb, 112 bytes, Stack size 272 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = GetCCID &rArr; send_at_cmd_and_receive &rArr; kmy_GetKeyValue &rArr; KeyScan &rArr; __KeyScan &rArr; SetRow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_receive
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCID
</UL>

<P><STRONG><a name="[111]"></a>set_apn</STRONG> (Thumb, 492 bytes, Stack size 216 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1344<LI>Call Chain = set_apn &rArr; send_at_cmd_and_return &rArr; ReadDatasFromtty &rArr; kmy_USART2ReceiveData
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_return
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sim900B_init
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicApnSetPassword
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicApnSetUsername
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicApnSetApn
</UL>

<P><STRONG><a name="[113]"></a>BeepNormal</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = BeepNormal &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msleep
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_BeepOn
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_BeepOff
</UL>
<BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DestroyFunc
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcStandbyKey
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventPost
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectItemOfMenus
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectItemOfMenus_SpeedAcceptKey
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptRejectOrders
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetString_123TimeInput
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetString_abcABC123PYWuBi
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateSet
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_ReceiveMessage
</UL>

<P><STRONG><a name="[de]"></a>KeyIsResponse</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, key.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_MenuHandler
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_DisplayBuff
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PassWordInput2
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewMessageAct
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveMailBox
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuOperateSameFucHandler
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_AddIco
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_AddIco2
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_Orders
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_Language2
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcStandbyKey
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPleaseCharge
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Waitkey_TillKeyPress
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PassWordInput
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive_KMY
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_return_NotResposeKey
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_return
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_receive
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDatasFromSIM300_OKstr
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_return_3errs
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormInput
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABCReadCode
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abcReadCode
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PassWordInput_XposStartDisplay
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetString_abcABC123PYWuBi
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetString_123TimeInput
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetString_abcABC123PYWuBi
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PassWordInput_MiddledDisplay
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PassWordInput_XposStartDisplay
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_ABCReadCode
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_abcReadCode
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABCReadCode
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abcReadCode
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetString_abcABC123PYWuBi2
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetString_123TimeInput
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContrastSet
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PassWordInput_MiddledDisplay
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_ReceiveMessage
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeChinese
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExternalSerail1_Printer
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExternalSerail1_GSMModule
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_LED
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_Key
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetString_abcABC123PYWuBi_Language2
</UL>

<P><STRONG><a name="[117]"></a>PostKey</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PostKey
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PostKey
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectItemOfMenus
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectItemOfMenus_SpeedAcceptKey
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetString_123TimeInput
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetString_abcABC123PYWuBi
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_ABCReadCode
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_abcReadCode
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABCReadCode
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abcReadCode
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRecjectReasonAndInput
</UL>

<P><STRONG><a name="[dc]"></a>KeyEventPost</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = KeyEventPost &rArr; BeepNormal &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdBlackLightOn
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_AutoPostKey
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_AutoOffLcdLight
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepNormal
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_MenuHandler
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_DisplayBuff
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewMessageAct
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveMailBox
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuOperateSameFucHandler
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_AddIco
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_AddIco2
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_Orders
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_Language2
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Waitkey_TillKeyPress
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormInput
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABCReadCode
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abcReadCode
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PassWordInput_MiddledDisplay
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PassWordInput_XposStartDisplay
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_ABCReadCode
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_abcReadCode
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABCReadCode
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abcReadCode
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRecjectReasonAndInput
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContrastSet
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_Key
</UL>

<P><STRONG><a name="[112]"></a>WaitkeyAndAutoExit</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = WaitkeyAndAutoExit &rArr; kmy_GetKeyValue &rArr; KeyScan &rArr; __KeyScan &rArr; SetRow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdBlackLightOn
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_AutoPostKey
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_AutoOffLcdLight
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventPost
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abeyant
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM_PINset
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveMailBox
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPINAndPUK
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sim900B_init
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReprintLastOrder
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm_Orders
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationInit
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeElectricity
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_apn
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Latest_Orders
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RejectOrder
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder_SpeedKey
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadOutOrders
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayVersion
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoPrintTime
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoReboot
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestText_set
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDIdelIest_set
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintReceptCount_set
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintPageFooter_set
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintPageHeader_set
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTimeFormat_set
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintDateFormat_set
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintNewlineFlag_set
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptTimeMode_set
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepDuration_set
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSCloseTime_set
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSOpenTime_set
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckOrderInterval_set
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoginPassword_set
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoginUsername_set
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestaurantID_set
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RejectReason_set
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback_set
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OrderURL_set
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeURL_Set
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VersionURL_Set
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalPasswordSet
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalIDSet
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DomainSet
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateParameter
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpPsword
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreChuChangSet
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IpAddSet
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateSet
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicApnSetPassword
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicApnSetUsername
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicApnSetApn
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_KMY_LibVersion
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RandomNumber
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ChipId
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_IMEI
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCID
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LanguageSet_Chinese
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LanguageSet_English
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOffScreenTime
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polish_Display_Keytone_Open
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polish_Display_Keytone_Close
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContrastSet
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_ReceiveMessage
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TemporaryNotProvideThisFunction
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_PrinterFont
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_Printer
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EraseFlashPage
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EraseEepromPage0_30
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_SendSMS
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_MakeCall
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_MagCard
</UL>

<P><STRONG><a name="[11c]"></a>WaitKeyRelease</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = WaitKeyRelease &rArr; kmy_GetKeyValue &rArr; KeyScan &rArr; __KeyScan &rArr; SetRow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm_Orders
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Latest_Orders
</UL>

<P><STRONG><a name="[11d]"></a>Waitkey_TillKeyPress</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, key.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdBlackLightOn
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_AutoPostKey
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_AutoOffLcdLight
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventPost
</UL>

<P><STRONG><a name="[11e]"></a>KeyEventPost_nobeep</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, key.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdBlackLightOn
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_AutoPostKey
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_AutoOffLcdLight
</UL>

<P><STRONG><a name="[f6]"></a>SetAutoExitTime</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetAutoExitTime &rArr; kmy_AutoPostKey
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_AutoPostKey
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewMessageAct
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive_KMY
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_return_NotResposeKey
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_return
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_receive
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_return_3errs
</UL>

<P><STRONG><a name="[108]"></a>SetBLOverTime</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, key.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetBLOverTime &rArr; kmy_AutoOffLcdLight
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_AutoOffLcdLight
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive_KMY
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
</UL>

<P><STRONG><a name="[11f]"></a>text_out_to_row</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = text_out_to_row &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdTextOut
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_MenuHandler
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveMailBox
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuOperateSameFucHandler
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm_Orders
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_to_row_Language2
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectItemOfMenus
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectItemOfMenus_SpeedAcceptKey
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRecjectReasonAndInput
</UL>

<P><STRONG><a name="[120]"></a>text_out_to_row_Language2</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = text_out_to_row_Language2 &rArr; text_out_to_row &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_to_row
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM_PINset
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_Orders
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_Language2
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcStandbyKey
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_AccordPointInsertEdit
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayVersion
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalPasswordSet
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalIDSet
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeChinese
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExternalSerail1_Printer
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExternalSerail1_GSMModule
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_LED
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_Key
</UL>

<P><STRONG><a name="[e1]"></a>text_out_length</STRONG> (Thumb, 48 bytes, Stack size 48 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = text_out_length &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdTextOut
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Form_ClearDisplayErea
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Form_text_out
</UL>

<P><STRONG><a name="[121]"></a>text_out_to_row_x</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = text_out_to_row_x &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdTextOut
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveMailBox
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuOperateSameFucHandler
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_AddIco
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_AddIco2
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_to_row_x_Language2
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PassWordInput_XposStartDisplay
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaySrfAndInput
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateSet
</UL>

<P><STRONG><a name="[122]"></a>text_out_to_row_x_Language2</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = text_out_to_row_x_Language2 &rArr; text_out_to_row_x &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_to_row_x
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptRejectOrders
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContrastSet
</UL>

<P><STRONG><a name="[124]"></a>my_strcpy_fillspace</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_MenuHandler
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveMailBox
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_AddIco
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_AddIco2
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_Orders
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_Language2
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_to_row_x_fillSpace
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_to_row_fillSpace
</UL>

<P><STRONG><a name="[188]"></a>my_strcpy_fillspace_bytes</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = my_strcpy_fillspace_bytes
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveMailBox
</UL>

<P><STRONG><a name="[123]"></a>text_out_to_row_fillSpace</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = text_out_to_row_fillSpace &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_strcpy_fillspace
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdTextOut
</UL>
<BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_my_DisplayBuff
</UL>

<P><STRONG><a name="[125]"></a>text_out_to_row_x_fillSpace</STRONG> (Thumb, 58 bytes, Stack size 48 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_strcpy_fillspace
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdTextOut
</UL>

<P><STRONG><a name="[126]"></a>DrawTitle_to_row</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = DrawTitle_to_row &rArr; text_out_to_row_x &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_to_row_x
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageDisplayContext
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sim900B_init
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReprintLastOrder
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HaveReceiveOrder
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm_Orders
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationInit
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Latest_Orders
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RejectOrder
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder_SpeedKey
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadOutOrders
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PassWordInput_MiddledDisplay
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoReboot
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestText_set
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDIdelIest_set
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintReceptCount_set
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintPageFooter_set
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintPageHeader_set
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTimeFormat_set
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintDateFormat_set
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintNewlineFlag_set
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptTimeMode_set
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepDuration_set
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSCloseTime_set
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSOpenTime_set
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckOrderInterval_set
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoginPassword_set
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoginUsername_set
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestaurantID_set
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RejectReason_set
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback_set
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OrderURL_set
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeURL_Set
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VersionURL_Set
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateSet
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicApnSetPassword
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicApnSetUsername
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicApnSetApn
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_KMY_LibVersion
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RandomNumber
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ChipId
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_IMEI
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCID
</UL>

<P><STRONG><a name="[10d]"></a>DrawTitle_to_row_Language2</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = DrawTitle_to_row_Language2 &rArr; DrawTitle_to_row &rArr; text_out_to_row_x &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abeyant
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM_PINset
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PassWordInput2
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewMessageAct
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveMailBox
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPINAndPUK
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMessage
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sim900B_init
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DestroyFunc
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationInit
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeCSPN
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeElectricity
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPleaseCharge
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PassWordInput
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_apn
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PUK_Required
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintOrder
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptRejectOrders
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PassWordInput_XposStartDisplay
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetString_abcABC123PYWuBi
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetString_abcABC123PYWuBi2
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetString_123TimeInput
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayVersion
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdvancedSet
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoPrintTime
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalPasswordSet
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalIDSet
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DomainSet
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateParameter
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpPsword
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreChuChangSet
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IpAddSet
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateSet
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_KMY_LibVersion
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RandomNumber
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ChipId
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCID
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LanguageSet_Chinese
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LanguageSet_English
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOffScreenTime
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polish_Display_Keytone_Open
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polish_Display_Keytone_Close
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContrastSet
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PassWordInput_MiddledDisplay
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_ReceiveMessage
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TemporaryNotProvideThisFunction
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_PrinterFont
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_DisplayFont
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_Printer
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EraseFlashPage
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EraseEepromPage0_30
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_BatVoltage
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_SendSMS
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_MakeCall
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_MagCard
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_LED
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_Key
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetString_abcABC123PYWuBi_Language2
</UL>

<P><STRONG><a name="[127]"></a>clear_area_to_row</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = clear_area_to_row &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdDrawRect
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_MenuHandler
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_DisplayBuff
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuOperateSameFucHandler
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_AddIco
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_AddIco2
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_Orders
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_Language2
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PassWordInput_MiddledDisplay
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaySrfAndInput
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRecjectReasonAndInput
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_ReceiveMessage
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_BatVoltage
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_MakeCall
</UL>

<P><STRONG><a name="[129]"></a>reverse_area_to_row</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = reverse_area_to_row &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdDrawRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaySrfAndInput
</UL>

<P><STRONG><a name="[e6]"></a>draw_line</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = draw_line &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdDrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_DisplayMenuPercent
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenuPercent
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line_to_row
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormInput
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContrastSet
</UL>

<P><STRONG><a name="[12b]"></a>draw_line_to_row</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line
</UL>

<P><STRONG><a name="[12c]"></a>steaddraw_pic_to_row_x</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = steaddraw_pic_to_row_x &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdDrawBitMap
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveMailBox
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuOperateSameFucHandler
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_AddIco
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_AddIco2
</UL>

<P><STRONG><a name="[12e]"></a>draw_pic</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = draw_pic &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdDrawBitMap
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcStandbyKey
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayYearMothDayWeek
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayChargeElectricity
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayElectricity
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaySignalQuality
</UL>

<P><STRONG><a name="[12f]"></a>draw_rect</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = draw_rect &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdDrawRect
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateSet
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContrastSet
</UL>

<P><STRONG><a name="[130]"></a>fill_rect</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = fill_rect &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdDrawRect
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_DisplayMenuPercent
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenuPercent
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContrastSet
</UL>

<P><STRONG><a name="[a7]"></a>reverse_area</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = reverse_area &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdDrawRect
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispHighLightRow_to_x_width
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormInput
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABCReadCode
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abcReadCode
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cursor_SetTwinkle_ms
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cursor_SetHigh
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cursor_SetWidth
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cursor_SetY
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cursor_SetX
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cursor_Twinkle
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cursor_OnOff
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_ABCReadCode
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_abcReadCode
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flightcursor
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABCReadCode
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abcReadCode
</UL>

<P><STRONG><a name="[da]"></a>clear_area</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = clear_area &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdDrawRect
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_DisplayMenuPercent
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenuPercent
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeCSPN
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormInput
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABCReadCode
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abcReadCode
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PassWordInput_XposStartDisplay
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateSet
</UL>

<P><STRONG><a name="[131]"></a>set_contrast</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = set_contrast &rArr; kmy_LcdSetContrast &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdSetContrast
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationInit
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContrastSet
</UL>

<P><STRONG><a name="[133]"></a>DispHighLightRow_to_x</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdDrawRect
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuOperateSameFucHandler
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_AddIco
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_AddIco2
</UL>

<P><STRONG><a name="[134]"></a>DispHighLightRow_to_x_width</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = DispHighLightRow_to_x_width &rArr; reverse_area &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverse_area
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveMailBox
</UL>

<P><STRONG><a name="[135]"></a>DispHighLightRow</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = DispHighLightRow &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdDrawRect
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_MenuHandler
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuOperateSameFucHandler
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_Orders
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_Language2
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm_Orders
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectItemOfMenus
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectItemOfMenus_SpeedAcceptKey
</UL>

<P><STRONG><a name="[100]"></a>kmy_DataLED_Flash</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive_KMY
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_Connect
</UL>

<P><STRONG><a name="[136]"></a>SystemReset</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLocalSettings
</UL>

<P><STRONG><a name="[138]"></a>OneMiliSecondCallThread</STRONG> (Thumb, 170 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OneMiliSecondCallThread &rArr; kmy_WatchDogResetCounter
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_WatchDogResetCounter
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LedDataLedOn
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LedDataLedOff
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdBlackLightOff
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdBlackLightOn
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[13d]"></a>MainMenuScreen</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = MainMenuScreen &rArr; MenuHandler_Language2 &rArr; DisplayMenuPercent &rArr; fill_rect &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[142]"></a>UpgradeSignalQuality</STRONG> (Thumb, 96 bytes, Stack size 112 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = UpgradeSignalQuality &rArr; DisplaySignalQuality &rArr; draw_pic &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EnableDisableTime3
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaySignalQuality
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_receive
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcStandbyKey
</UL>

<P><STRONG><a name="[146]"></a>UpgradeElectricity</STRONG> (Thumb, 284 bytes, Stack size 120 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = UpgradeElectricity &rArr; DisplayPleaseCharge &rArr; DrawTitle_to_row_Language2 &rArr; DrawTitle_to_row &rArr; text_out_to_row_x &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EnableDisableTime3
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_BatGetChargeStatus
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_BatGetACStatus
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPleaseCharge
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayElectricity
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_receive
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcStandbyKey
</UL>

<P><STRONG><a name="[14a]"></a>UpgradeCSPN</STRONG> (Thumb, 168 bytes, Stack size 120 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = UpgradeCSPN &rArr; DrawTitle_to_row_Language2 &rArr; DrawTitle_to_row &rArr; text_out_to_row_x &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_strcpy_EncounterHexEnd
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EnableDisableTime3
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNetName
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_receive
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_area
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcStandbyKey
</UL>

<P><STRONG><a name="[158]"></a>ApplicationInit</STRONG> (Thumb, 248 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2392<LI>Call Chain = ApplicationInit &rArr; Sim900B_init &rArr; CheckPINAndPUK &rArr; send_at_cmd_and_return &rArr; ReadDatasFromtty &rArr; kmy_USART2ReceiveData
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_WatchDogInit
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART1Init
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeInit
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_RCCInit
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterInit
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_MiscInit
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_MagcardInit
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LedInit
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdInit
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_KeyInit
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GprsInit
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashInit
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromInit
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromCheckWhetherBlackChip
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_BeepInit
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_BatInit
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_BackUpInit
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sim900B_init
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreGlobalVariable
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreConfigFile
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLocalSettings
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdDrawBitMap
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_contrast
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msleep
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdBlackLightOn
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_CheckFileExist
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_FileSystemFormat
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[16e]"></a>DestroyFunc</STRONG> (Thumb, 256 bytes, Stack size 24 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_ClearTamper
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepNormal
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>

<P><STRONG><a name="[3a]"></a>main</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2392<LI>Call Chain = main &rArr; ApplicationInit &rArr; Sim900B_init &rArr; CheckPINAndPUK &rArr; send_at_cmd_and_return &rArr; ReadDatasFromtty &rArr; kmy_USART2ReceiveData
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GPRSTimeSet
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationInit
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdBlackLightOn
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_AutoOffLcdLight
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry7.o(.ARM.Collect$$$$00000007)
</UL>
<P><STRONG><a name="[172]"></a>GetKeyNumVal</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, menuoperate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuOperate_response_key1_9
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuOperateSameFucHandler
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_AddIco
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_AddIco2
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_Orders
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_Language2
</UL>

<P><STRONG><a name="[170]"></a>DisplayMenuPercent</STRONG> (Thumb, 230 bytes, Stack size 48 bytes, menuoperate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = DisplayMenuPercent &rArr; fill_rect &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_rect
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_area
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuOperateSameFucHandler
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_AddIco
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_AddIco2
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_Orders
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_Language2
</UL>

<P><STRONG><a name="[30a]"></a>MenuOperateDeInit</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, menuoperate.o(.text), UNUSED)

<P><STRONG><a name="[171]"></a>MenuHandler</STRONG> (Thumb, 934 bytes, Stack size 56 bytes, menuoperate.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenuPercent
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyNumVal
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispHighLightRow
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_area_to_row
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_strcpy_fillspace
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_to_row
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventPost
</UL>

<P><STRONG><a name="[13e]"></a>MenuHandler_Language2</STRONG> (Thumb, 790 bytes, Stack size 72 bytes, menuoperate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = MenuHandler_Language2 &rArr; DisplayMenuPercent &rArr; fill_rect &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenuPercent
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyNumVal
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispHighLightRow
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_area_to_row
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_strcpy_fillspace
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_to_row_Language2
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventPost
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainMenuScreen_Message
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageDelete
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainMenuScreen_Message_VoiceMailbox
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainMenuScreen_Message_XiaoquGuanbo
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainMenuScreen_Message_ColorMessage
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainMenuScreen_Message_ShortMessage
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainMenuScreen_Settings
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainMenuScreen
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdvancedSet
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitParameterSet
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinSet
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicSettings
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSomeMessage
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicApnSet
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LanguageSet
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicKeyTone
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftWare_Debug
</UL>

<P><STRONG><a name="[173]"></a>MenuHandler_Orders</STRONG> (Thumb, 800 bytes, Stack size 72 bytes, menuoperate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = MenuHandler_Orders &rArr; DisplayMenuPercent &rArr; fill_rect &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenuPercent
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyNumVal
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispHighLightRow
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_area_to_row
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_strcpy_fillspace
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_to_row_Language2
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventPost
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptRejectMenu
</UL>

<P><STRONG><a name="[174]"></a>MenuHandler_AddIco2</STRONG> (Thumb, 832 bytes, Stack size 48 bytes, menuoperate.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenuPercent
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyNumVal
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispHighLightRow_to_x
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steaddraw_pic_to_row_x
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_area_to_row
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_strcpy_fillspace
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_to_row_x
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventPost
</UL>

<P><STRONG><a name="[175]"></a>MenuHandler_AddIco</STRONG> (Thumb, 758 bytes, Stack size 48 bytes, menuoperate.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenuPercent
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyNumVal
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispHighLightRow_to_x
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steaddraw_pic_to_row_x
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_area_to_row
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_strcpy_fillspace
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_to_row_x
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventPost
</UL>

<P><STRONG><a name="[177]"></a>my_strcpy_fillspace2</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, menuoperate.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuOperateSameFucHandler
</UL>

<P><STRONG><a name="[176]"></a>MenuOperateSameFucHandler</STRONG> (Thumb, 814 bytes, Stack size 48 bytes, menuoperate.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_strcpy_fillspace2
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMenuPercent
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyNumVal
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispHighLightRow
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispHighLightRow_to_x
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steaddraw_pic_to_row_x
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_area_to_row
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_to_row_x
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_to_row
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventPost
</UL>

<P><STRONG><a name="[17c]"></a>GetMessageTotalAndCapacity</STRONG> (Thumb, 110 bytes, Stack size 80 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = GetMessageTotalAndCapacity &rArr; send_at_cmd_and_receive &rArr; kmy_GetKeyValue &rArr; KeyScan &rArr; __KeyScan &rArr; SetRow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_receive
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckMessageComing_method2
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveMailBox
</UL>

<P><STRONG><a name="[17d]"></a>UCS2to8bit</STRONG> (Thumb, 88 bytes, Stack size 80 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = UCS2to8bit
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMessage_state_number_datetime
</UL>

<P><STRONG><a name="[17e]"></a>GetMessage_state_number_datetime</STRONG> (Thumb, 212 bytes, Stack size 88 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GetMessage_state_number_datetime &rArr; UCS2to8bit
</UL>
<BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_buff_TwoAscciiToOneHex
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UCS2to8bit
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_strcpy_EncounterHexEnd
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageDisplayContext
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetOneScreenMessageNumber
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMessageNode
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_ReceiveMessage
</UL>

<P><STRONG><a name="[181]"></a>CheckThisIndexMsgReaded</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CheckThisIndexMsgReaded
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMessageNode
</UL>

<P><STRONG><a name="[180]"></a>GetMessageNode</STRONG> (Thumb, 170 bytes, Stack size 1088 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1256<LI>Call Chain = GetMessageNode &rArr; GetMessage_state_number_datetime &rArr; UCS2to8bit
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckThisIndexMsgReaded
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMessage_state_number_datetime
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_itoa
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_receive
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveMailBox
</UL>

<P><STRONG><a name="[182]"></a>GetOneScreenMessageNumber</STRONG> (Thumb, 104 bytes, Stack size 528 bytes, message.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMessage_state_number_datetime
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_itoa
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_receive
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>

<P><STRONG><a name="[43]"></a>Message_delete_this</STRONG> (Thumb, 238 bytes, Stack size 72 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1200<LI>Call Chain = Message_delete_this &rArr; send_at_cmd_and_return &rArr; ReadDatasFromtty &rArr; kmy_USART2ReceiveData
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_itoa
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_return
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Address Reference Count : 1]<UL><LI> message.o(.constdata)
</UL>
<P><STRONG><a name="[44]"></a>Message_delete_all</STRONG> (Thumb, 78 bytes, Stack size 72 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1200<LI>Call Chain = Message_delete_all &rArr; send_at_cmd_and_return &rArr; ReadDatasFromtty &rArr; kmy_USART2ReceiveData
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_itoa
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_return
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Address Reference Count : 1]<UL><LI> message.o(.constdata)
</UL>
<P><STRONG><a name="[183]"></a>MessageDelete</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = MessageDelete &rArr; MenuHandler_Language2 &rArr; DisplayMenuPercent &rArr; fill_rect &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_Language2
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveMailBox
</UL>

<P><STRONG><a name="[184]"></a>MessageDisplayContext</STRONG> (Thumb, 224 bytes, Stack size 568 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 888<LI>Call Chain = MessageDisplayContext &rArr; my_DisplayBuff &rArr; _my_DisplayBuff &rArr; text_out_to_row_fillSpace &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucs2str_to_gb2312str
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_string_insert
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_buff_TwoAscciiToOneHex
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_DisplayBuff
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMessage_state_number_datetime
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_itoa
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_receive
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveMailBox
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_ReceiveMessage
</UL>

<P><STRONG><a name="[46]"></a>ReceiveMailBox</STRONG> (Thumb, 1348 bytes, Stack size 56 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1312<LI>Call Chain = ReceiveMailBox &rArr; GetMessageNode &rArr; GetMessage_state_number_datetime &rArr; UCS2to8bit
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_DisplayMenuPercent
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuOperate_response_keyUp
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuOperate_response_keyRight
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuOperate_response_keyLeft
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuOperate_response_keyDown
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageDisplayContext
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageDelete
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMessageNode
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMessageTotalAndCapacity
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispHighLightRow_to_x_width
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steaddraw_pic_to_row_x
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_strcpy_fillspace_bytes
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_strcpy_fillspace
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_to_row_x
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_to_row
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventPost
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 2]<UL><LI> message.o(.constdata)
<LI> selftest.o(.constdata)
</UL>
<P><STRONG><a name="[18d]"></a>MainMenuScreen_Message</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, message.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
</UL>

<P><STRONG><a name="[18e]"></a>NewMessageAct</STRONG> (Thumb, 156 bytes, Stack size 1040 bytes, message.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMessage
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAutoExitTime
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDatasFromSIM300_OKstr
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventPost
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[30b]"></a>NullSubs</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, message.o(.text), UNUSED)

<P><STRONG><a name="[18f]"></a>CheckMessageComing_method1</STRONG> (Thumb, 250 bytes, Stack size 24 bytes, message.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>

<P><STRONG><a name="[190]"></a>CheckMessageComing_method2</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, message.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMessageTotalAndCapacity
</UL>

<P><STRONG><a name="[30c]"></a>CheckPhoneComing</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, message.o(.text), UNUSED)

<P><STRONG><a name="[16d]"></a>Sim900B_init</STRONG> (Thumb, 552 bytes, Stack size 208 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2376<LI>Call Chain = Sim900B_init &rArr; CheckPINAndPUK &rArr; send_at_cmd_and_return &rArr; ReadDatasFromtty &rArr; kmy_USART2ReceiveData
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPINAndPUK
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART2ReceiveReset
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART2ReceiveData
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_apn
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_return
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationInit
</UL>

<P><STRONG><a name="[40]"></a>fputc</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, my_library.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[196]"></a>my_HexPrintf_buff</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, my_library.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[104]"></a>my_charhexprintf_buff</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, my_library.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = my_charhexprintf_buff &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive_KMY
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_ReceiveMessage
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadEepromPage
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_ReadEepromPage0_30
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFlashPage
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_MagCard
</UL>

<P><STRONG><a name="[197]"></a>my_PrintfBinary</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, my_library.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc
</UL>

<P><STRONG><a name="[30d]"></a>my_SprintfBinary</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, my_library.o(.text), UNUSED)

<P><STRONG><a name="[19b]"></a>_my_DisplayBuff</STRONG> (Thumb, 258 bytes, Stack size 48 bytes, my_library.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = _my_DisplayBuff &rArr; text_out_to_row_fillSpace &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_to_row_fillSpace
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_DisplayBuff
</UL>

<P><STRONG><a name="[17b]"></a>my_DisplayBuff</STRONG> (Thumb, 232 bytes, Stack size 24 bytes, my_library.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = my_DisplayBuff &rArr; _my_DisplayBuff &rArr; text_out_to_row_fillSpace &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_my_DisplayBuff
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_movePointToPrevLine
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_movePointToNextLine
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_area_to_row
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventPost
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageDisplayContext
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMessage
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_DisplayFont
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_MagCard
</UL>

<P><STRONG><a name="[e8]"></a>my_strcat_insert</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, my_library.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = my_strcat_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormInput
</UL>

<P><STRONG><a name="[19c]"></a>my_GetCurrentMs</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, my_library.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = my_GetCurrentMs
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeGetMilliseconds
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_ABCReadCode
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_abcReadCode
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flightcursor
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABCReadCode
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abcReadCode
</UL>

<P><STRONG><a name="[18c]"></a>MenuOperate_response_keyLeft</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, my_menuop.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_MenuHandler
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveMailBox
</UL>

<P><STRONG><a name="[18b]"></a>MenuOperate_response_keyRight</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, my_menuop.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_MenuHandler
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveMailBox
</UL>

<P><STRONG><a name="[18a]"></a>MenuOperate_response_keyDown</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, my_menuop.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_MenuHandler
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveMailBox
</UL>

<P><STRONG><a name="[189]"></a>MenuOperate_response_keyUp</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, my_menuop.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_MenuHandler
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveMailBox
</UL>

<P><STRONG><a name="[19d]"></a>MenuOperate_response_key1_9</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, my_menuop.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetKeyNumVal
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_MenuHandler
</UL>

<P><STRONG><a name="[187]"></a>my_DisplayMenuPercent</STRONG> (Thumb, 230 bytes, Stack size 48 bytes, my_menuop.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = my_DisplayMenuPercent &rArr; fill_rect &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_rect
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_area
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_MenuHandler
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveMailBox
</UL>

<P><STRONG><a name="[19e]"></a>my_MenuHandler</STRONG> (Thumb, 412 bytes, Stack size 48 bytes, my_menuop.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuOperate_response_key1_9
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_DisplayMenuPercent
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuOperate_response_keyUp
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuOperate_response_keyRight
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuOperate_response_keyLeft
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuOperate_response_keyDown
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispHighLightRow
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_area_to_row
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_strcpy_fillspace
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_to_row
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventPost
</UL>

<P><STRONG><a name="[30e]"></a>my_OctorToAscii</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, mypure_library.o(.text), UNUSED)

<P><STRONG><a name="[1c3]"></a>my_AsciiToOctor</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, mypure_library.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadEepromPage
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFlashPage
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFlashPage
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EraseFlashPage
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EraseEepromPage
</UL>

<P><STRONG><a name="[19f]"></a>my_AsciiToFloat</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, mypure_library.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[30f]"></a>my_strstr_size</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, mypure_library.o(.text), UNUSED)

<P><STRONG><a name="[310]"></a>my_FFstrstr</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, mypure_library.o(.text), UNUSED)

<P><STRONG><a name="[311]"></a>my_KonggeStrlen</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, mypure_library.o(.text), UNUSED)

<P><STRONG><a name="[1f2]"></a>my_strcpy_DeleteTailByte</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, mypure_library.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetString_123TimeInput
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetString_abcABC123PYWuBi
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRecjectReasonAndInput
</UL>

<P><STRONG><a name="[204]"></a>My_strcpy_PointInc</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, mypure_library.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMessage
</UL>

<P><STRONG><a name="[312]"></a>My_strcpy_Int_PointInc</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, mypure_library.o(.text), UNUSED)

<P><STRONG><a name="[103]"></a>my_itoa</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, mypure_library.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = my_itoa
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageDisplayContext
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Message_delete_all
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Message_delete_this
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetOneScreenMessageNumber
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMessageNode
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMessage
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_ReceiveMessage
</UL>

<P><STRONG><a name="[313]"></a>my_itoa_digit</STRONG> (Thumb, 116 bytes, Stack size 20 bytes, mypure_library.o(.text), UNUSED)

<P><STRONG><a name="[314]"></a>my_itoa_digit_hex</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, mypure_library.o(.text), UNUSED)

<P><STRONG><a name="[14b]"></a>my_strcpy_EncounterHexEnd</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, mypure_library.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = my_strcpy_EncounterHexEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMessage_state_number_datetime
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreGlobalVariable
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLocalSettings
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeCSPN
</UL>

<P><STRONG><a name="[315]"></a>my_strcpy_EncounterLess0x1fEnd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, mypure_library.o(.text), UNUSED)

<P><STRONG><a name="[316]"></a>my_MovePointUpto0x20</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, mypure_library.o(.text), UNUSED)

<P><STRONG><a name="[317]"></a>my_MovePointDownto0x20</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, mypure_library.o(.text), UNUSED)

<P><STRONG><a name="[318]"></a>my_MovePointToNonnum</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, mypure_library.o(.text), UNUSED)

<P><STRONG><a name="[319]"></a>my_MovePointToNum</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, mypure_library.o(.text), UNUSED)

<P><STRONG><a name="[1c9]"></a>my_MovePointToHex</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, mypure_library.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreGlobalVariable
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLocalSettings
</UL>

<P><STRONG><a name="[1a5]"></a>my_OneHexToTwoAsccii</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, mypure_library.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_buff_OneHexToTwoAsccii
</UL>

<P><STRONG><a name="[1a3]"></a>my_TwoAscciiToOneHex</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, mypure_library.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = my_TwoAscciiToOneHex
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_buff_TwoAscciiToOneHex
</UL>

<P><STRONG><a name="[17f]"></a>my_buff_TwoAscciiToOneHex</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, mypure_library.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = my_buff_TwoAscciiToOneHex &rArr; my_TwoAscciiToOneHex
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_TwoAscciiToOneHex
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageDisplayContext
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMessage_state_number_datetime
</UL>

<P><STRONG><a name="[1a4]"></a>my_buff_OneHexToTwoAsccii</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, mypure_library.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_OneHexToTwoAsccii
</UL>

<P><STRONG><a name="[31a]"></a>my_strcmp</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, mypure_library.o(.text), UNUSED)

<P><STRONG><a name="[31b]"></a>my_strcmp_noCaseSensitve</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, mypure_library.o(.text), UNUSED)

<P><STRONG><a name="[31c]"></a>my_strcpy0123456789</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, mypure_library.o(.text), UNUSED)

<P><STRONG><a name="[1a6]"></a>my_round</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, mypure_library.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
</UL>

<P><STRONG><a name="[31d]"></a>my_AscciiToBCD</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, mypure_library.o(.text), UNUSED)

<P><STRONG><a name="[31e]"></a>my_memcpy_space</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, mypure_library.o(.text), UNUSED)

<P><STRONG><a name="[1cb]"></a>my_strdel</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, mypure_library.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LanguageSet
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicKeyTone
</UL>

<P><STRONG><a name="[31f]"></a>my_strdel_allNonnum</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, mypure_library.o(.text), UNUSED)

<P><STRONG><a name="[320]"></a>my_CheckBuffIsAllLetter</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, mypure_library.o(.text), UNUSED)

<P><STRONG><a name="[321]"></a>my_CheckBuffIsContainLetter</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, mypure_library.o(.text), UNUSED)

<P><STRONG><a name="[322]"></a>my_string_delete_redundantbyte</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, mypure_library.o(.text), UNUSED)

<P><STRONG><a name="[186]"></a>my_string_insert</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, mypure_library.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = my_string_insert
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageDisplayContext
</UL>

<P><STRONG><a name="[323]"></a>my_string_delete</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, mypure_library.o(.text), UNUSED)

<P><STRONG><a name="[215]"></a>my_string_replace</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, mypure_library.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RejectOrder
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintOrder
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetOneOrder
</UL>

<P><STRONG><a name="[1ab]"></a>my_FloatConvertToInt</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, mypure_library.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmpeq
</UL>

<P><STRONG><a name="[324]"></a>my_CheckSum</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, mypure_library.o(.text), UNUSED)

<P><STRONG><a name="[325]"></a>my_strdel_lessHex</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, mypure_library.o(.text), UNUSED)

<P><STRONG><a name="[106]"></a>my_axtoi</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, mypure_library.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTotallen
</UL>

<P><STRONG><a name="[5e]"></a>TemporaryNotProvideThisFunction</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, selftest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = TemporaryNotProvideThisFunction &rArr; DrawTitle_to_row_Language2 &rArr; DrawTitle_to_row &rArr; text_out_to_row_x &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selftest.o(.constdata)
</UL>
<P><STRONG><a name="[178]"></a>abeyant</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, selftest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = abeyant &rArr; DrawTitle_to_row_Language2 &rArr; DrawTitle_to_row &rArr; text_out_to_row_x &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceBoxNumberSet
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceBoxReceive
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BroadCastLanguageSelect
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BroadCastChannelSet
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BroadCastStart
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BroadCastRead
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ColorMessageCapacity
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ColorMessageSet
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ColorDraftBox
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ColorSendedBox
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ColorSendedMessage
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ColorReceiveMailBox
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ColorWriteMessage
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageCapacity
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageSet
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DraftBox
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendedBox
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendedMessage
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MobileQQ
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteMessage
</UL>

<P><STRONG><a name="[61]"></a>ReadEepromPage</STRONG> (Thumb, 104 bytes, Stack size 96 bytes, selftest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = ReadEepromPage &rArr; PassWordInput_MiddledDisplay &rArr; _PassWordInput_MiddledDisplay &rArr; clear_area_to_row &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_AsciiToOctor
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_charhexprintf_buff
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_readPage
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PassWordInput_MiddledDisplay
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selftest.o(.constdata)
</UL>
<P><STRONG><a name="[68]"></a>SelfTest_Soft</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, selftest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = SelfTest_Soft &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdDrawRect
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msleep
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selftest.o(.constdata)
</UL>
<P><STRONG><a name="[69]"></a>FromInput_Test</STRONG> (Thumb, 274 bytes, Stack size 328 bytes, selftest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 752<LI>Call Chain = FromInput_Test &rArr; FormInput &rArr; ABCReadCode &rArr; clear_area &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormInput
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selftest.o(.constdata)
</UL>
<P><STRONG><a name="[75]"></a>SoftWare_Debug</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, selftest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = SoftWare_Debug &rArr; MenuHandler_Language2 &rArr; DisplayMenuPercent &rArr; fill_rect &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selftest.o(.constdata)
</UL>
<P><STRONG><a name="[74]"></a>SelfTest_ReceiveMessage</STRONG> (Thumb, 1074 bytes, Stack size 1096 bytes, selftest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1984<LI>Call Chain = SelfTest_ReceiveMessage &rArr; MessageDisplayContext &rArr; my_DisplayBuff &rArr; _my_DisplayBuff &rArr; text_out_to_row_fillSpace &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageDisplayContext
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMessage_state_number_datetime
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_area_to_row
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepNormal
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_itoa
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_charhexprintf_buff
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_receive
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDatasFromtty
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selftest.o(.constdata)
</UL>
<P><STRONG><a name="[3d]"></a>SelfTest</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, selftest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = SelfTest &rArr; MenuHandler_Language2 &rArr; DisplayMenuPercent &rArr; fill_rect &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[193]"></a>StoreLocalSettings</STRONG> (Thumb, 68 bytes, Stack size 112 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = StoreLocalSettings &rArr; kmy_EepromWrite &rArr; kmy_EepromWritePage &rArr; IIC_Send_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromWrite
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM_PINset
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPINAndPUK
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoPrintTime
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoginPassword_set
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoginUsername_set
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestaurantID_set
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreParam
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicApnSetPassword
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicApnSetUsername
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicApnSetApn
</UL>

<P><STRONG><a name="[162]"></a>InitLocalSettings</STRONG> (Thumb, 346 bytes, Stack size 120 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = InitLocalSettings &rArr; kmy_EepromWrite &rArr; kmy_EepromWritePage &rArr; IIC_Send_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_MovePointToHex
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_strcpy_EncounterHexEnd
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemReset
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromWriteByte
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromReadSequent
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromWrite
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromReadByte
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationInit
</UL>

<P><STRONG><a name="[1ca]"></a>StorageVariable</STRONG> (Thumb, 120 bytes, Stack size 1536 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1828<LI>Call Chain = StorageVariable &rArr; EepromFile_Write &rArr; EepromFile_GetAIdlePage &rArr; EepromFile_SetPageArea &rArr; EepromFile_WritePage &rArr; kmy_EepromWritePage &rArr; IIC_Send_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_Write
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_Open
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreVersion
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoReboot
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintPageFooter_set
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintPageHeader_set
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptTimeMode_set
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepDuration_set
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSCloseTime_set
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSOpenTime_set
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckOrderInterval_set
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RejectReason_set
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback_set
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OrderURL_set
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeURL_Set
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VersionURL_Set
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalPasswordSet
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalIDSet
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DomainSet
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreParam
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpPsword
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IpAddSet
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LanguageSet_Chinese
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LanguageSet_English
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOffScreenTime
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polish_Display_Keytone_Open
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Polish_Display_Keytone_Close
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContrastSet
</UL>

<P><STRONG><a name="[16b]"></a>RestoreConfigFile</STRONG> (Thumb, 154 bytes, Stack size 1520 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1852<LI>Call Chain = RestoreConfigFile &rArr; EepromFile_WriteData &rArr; EepromFile_Write &rArr; EepromFile_GetAIdlePage &rArr; EepromFile_SetPageArea &rArr; EepromFile_WritePage &rArr; kmy_EepromWritePage &rArr; IIC_Send_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_WriteData
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_Delete
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationInit
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreChuChangSet
</UL>

<P><STRONG><a name="[16a]"></a>RestoreGlobalVariable</STRONG> (Thumb, 232 bytes, Stack size 1544 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1764<LI>Call Chain = RestoreGlobalVariable &rArr; EepromFile_read &rArr; EepromFile_readFileCurrentPage &rArr; EepromFile_GetPhysicalPage &rArr; EepromFile_GetPageRelationAreaTwoByte &rArr; EepromFile_readPage &rArr; kmy_EepromReadSequent &rArr; IIC_Read_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_MovePointToHex
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_strcpy_EncounterHexEnd
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_read
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_Open
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromWrite
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationInit
</UL>

<P><STRONG><a name="[1d0]"></a>BasicApnSet</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, setting.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
</UL>

<P><STRONG><a name="[84]"></a>ReadSomeMessage</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = ReadSomeMessage &rArr; MenuHandler_Language2 &rArr; DisplayMenuPercent &rArr; fill_rect &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.constdata)
</UL>
<P><STRONG><a name="[1d1]"></a>TranslateKeyToDecimal</STRONG> (Thumb, 364 bytes, Stack size 0 bytes, setting.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateSet
</UL>

<P><STRONG><a name="[1d2]"></a>SetBitOfDecimal</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetBitOfDecimal
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateSet
</UL>

<P><STRONG><a name="[1d3]"></a>GetBitOfDecimal</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetBitOfDecimal
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateSet
</UL>

<P><STRONG><a name="[1d5]"></a>StoreParam</STRONG> (Thumb, 718 bytes, Stack size 16 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1844<LI>Call Chain = StoreParam &rArr; StorageVariable &rArr; EepromFile_Write &rArr; EepromFile_GetAIdlePage &rArr; EepromFile_SetPageArea &rArr; EepromFile_WritePage &rArr; kmy_EepromWritePage &rArr; IIC_Send_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreLocalSettings
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StorageVariable
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateParameter
</UL>

<P><STRONG><a name="[1d6]"></a>GetSum</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetSum
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateParameter
</UL>

<P><STRONG><a name="[88]"></a>UpdateParameter</STRONG> (Thumb, 400 bytes, Stack size 1336 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 3180<LI>Call Chain = UpdateParameter &rArr; StoreParam &rArr; StorageVariable &rArr; EepromFile_Write &rArr; EepromFile_GetAIdlePage &rArr; EepromFile_SetPageArea &rArr; EepromFile_WritePage &rArr; kmy_EepromWritePage &rArr; IIC_Send_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GPRSTimeSet
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSum
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreParam
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART1SendString
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART1ReceiveReset
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART1ReceiveData
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.constdata)
</UL>
<P><STRONG><a name="[a0]"></a>BasicSettings</STRONG> (Thumb, 304 bytes, Stack size 24 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = BasicSettings &rArr; MenuHandler_Language2 &rArr; DisplayMenuPercent &rArr; fill_rect &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.constdata)
</UL>
<P><STRONG><a name="[8b]"></a>DomainSet</STRONG> (Thumb, 114 bytes, Stack size 48 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1876<LI>Call Chain = DomainSet &rArr; StorageVariable &rArr; EepromFile_Write &rArr; EepromFile_GetAIdlePage &rArr; EepromFile_SetPageArea &rArr; EepromFile_WritePage &rArr; kmy_EepromWritePage &rArr; IIC_Send_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StorageVariable
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetString_abcABC123PYWuBi_Language2
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.constdata)
</UL>
<P><STRONG><a name="[1d7]"></a>TerminalIDSet</STRONG> (Thumb, 190 bytes, Stack size 48 bytes, setting.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_to_row_Language2
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StorageVariable
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetString_abcABC123PYWuBi_Language2
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[1d8]"></a>TerminalPasswordSet</STRONG> (Thumb, 190 bytes, Stack size 48 bytes, setting.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_to_row_Language2
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StorageVariable
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetString_abcABC123PYWuBi_Language2
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[87]"></a>SIM_PINset</STRONG> (Thumb, 204 bytes, Stack size 32 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = SIM_PINset &rArr; PassWordInput2 &rArr; _PassWordInput_XposStartDisplay &rArr; clear_area &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreLocalSettings
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PassWordInput2
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_to_row_Language2
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPINAndPUK
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.constdata)
</UL>
<P><STRONG><a name="[9e]"></a>PinSet</STRONG> (Thumb, 712 bytes, Stack size 24 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = PinSet &rArr; MenuHandler_Language2 &rArr; DisplayMenuPercent &rArr; fill_rect &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.constdata)
</UL>
<P><STRONG><a name="[1db]"></a>FormatLocalSetting</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = FormatLocalSetting &rArr; kmy_EepromWriteByte &rArr; kmy_EepromReadByte &rArr; IIC_Read_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreChuChangSet
</UL>

<P><STRONG><a name="[326]"></a>Console</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, setting.o(.text), UNUSED)

<P><STRONG><a name="[8c]"></a>VersionURL_Set</STRONG> (Thumb, 120 bytes, Stack size 136 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1964<LI>Call Chain = VersionURL_Set &rArr; StorageVariable &rArr; EepromFile_Write &rArr; EepromFile_GetAIdlePage &rArr; EepromFile_SetPageArea &rArr; EepromFile_WritePage &rArr; kmy_EepromWritePage &rArr; IIC_Send_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StorageVariable
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetString_abcABC123PYWuBi_Language2
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.constdata)
</UL>
<P><STRONG><a name="[8d]"></a>UpgradeURL_Set</STRONG> (Thumb, 120 bytes, Stack size 136 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1964<LI>Call Chain = UpgradeURL_Set &rArr; StorageVariable &rArr; EepromFile_Write &rArr; EepromFile_GetAIdlePage &rArr; EepromFile_SetPageArea &rArr; EepromFile_WritePage &rArr; kmy_EepromWritePage &rArr; IIC_Send_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StorageVariable
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetString_abcABC123PYWuBi_Language2
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.constdata)
</UL>
<P><STRONG><a name="[8e]"></a>OrderURL_set</STRONG> (Thumb, 120 bytes, Stack size 184 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2012<LI>Call Chain = OrderURL_set &rArr; StorageVariable &rArr; EepromFile_Write &rArr; EepromFile_GetAIdlePage &rArr; EepromFile_SetPageArea &rArr; EepromFile_WritePage &rArr; kmy_EepromWritePage &rArr; IIC_Send_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StorageVariable
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetString_abcABC123PYWuBi_Language2
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.constdata)
</UL>
<P><STRONG><a name="[8f]"></a>Callback_set</STRONG> (Thumb, 120 bytes, Stack size 184 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2012<LI>Call Chain = Callback_set &rArr; StorageVariable &rArr; EepromFile_Write &rArr; EepromFile_GetAIdlePage &rArr; EepromFile_SetPageArea &rArr; EepromFile_WritePage &rArr; kmy_EepromWritePage &rArr; IIC_Send_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StorageVariable
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetString_abcABC123PYWuBi_Language2
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.constdata)
</UL>
<P><STRONG><a name="[96]"></a>RejectReason_set</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1844<LI>Call Chain = RejectReason_set &rArr; StorageVariable &rArr; EepromFile_Write &rArr; EepromFile_GetAIdlePage &rArr; EepromFile_SetPageArea &rArr; EepromFile_WritePage &rArr; kmy_EepromWritePage &rArr; IIC_Send_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRecjectReasonAndInput
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StorageVariable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.constdata)
</UL>
<P><STRONG><a name="[89]"></a>RestaurantID_set</STRONG> (Thumb, 608 bytes, Stack size 40 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = RestaurantID_set &rArr; GetString_abcABC123PYWuBi_Language2 &rArr; _GetString_abcABC123PYWuBi &rArr; ABCReadCode &rArr; my_AccordPointInsertEdit &rArr; text_out_to_row_Language2 &rArr; text_out_to_row &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreLocalSettings
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetString_abcABC123PYWuBi_Language2
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.constdata)
</UL>
<P><STRONG><a name="[90]"></a>LoginUsername_set</STRONG> (Thumb, 106 bytes, Stack size 56 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = LoginUsername_set &rArr; GetString_abcABC123PYWuBi_Language2 &rArr; _GetString_abcABC123PYWuBi &rArr; ABCReadCode &rArr; my_AccordPointInsertEdit &rArr; text_out_to_row_Language2 &rArr; text_out_to_row &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreLocalSettings
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetString_abcABC123PYWuBi_Language2
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.constdata)
</UL>
<P><STRONG><a name="[91]"></a>LoginPassword_set</STRONG> (Thumb, 106 bytes, Stack size 56 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = LoginPassword_set &rArr; GetString_abcABC123PYWuBi_Language2 &rArr; _GetString_abcABC123PYWuBi &rArr; ABCReadCode &rArr; my_AccordPointInsertEdit &rArr; text_out_to_row_Language2 &rArr; text_out_to_row &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreLocalSettings
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetString_abcABC123PYWuBi_Language2
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.constdata)
</UL>
<P><STRONG><a name="[92]"></a>CheckOrderInterval_set</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1860<LI>Call Chain = CheckOrderInterval_set &rArr; StorageVariable &rArr; EepromFile_Write &rArr; EepromFile_GetAIdlePage &rArr; EepromFile_SetPageArea &rArr; EepromFile_WritePage &rArr; kmy_EepromWritePage &rArr; IIC_Send_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StorageVariable
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetString_abcABC123PYWuBi_Language2
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.constdata)
</UL>
<P><STRONG><a name="[93]"></a>GPRSOpenTime_set</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1860<LI>Call Chain = GPRSOpenTime_set &rArr; StorageVariable &rArr; EepromFile_Write &rArr; EepromFile_GetAIdlePage &rArr; EepromFile_SetPageArea &rArr; EepromFile_WritePage &rArr; kmy_EepromWritePage &rArr; IIC_Send_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GPRSTimeSet
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetString_123TimeInput
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTimeFormat
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StorageVariable
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.constdata)
</UL>
<P><STRONG><a name="[94]"></a>GPRSCloseTime_set</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1860<LI>Call Chain = GPRSCloseTime_set &rArr; StorageVariable &rArr; EepromFile_Write &rArr; EepromFile_GetAIdlePage &rArr; EepromFile_SetPageArea &rArr; EepromFile_WritePage &rArr; kmy_EepromWritePage &rArr; IIC_Send_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GPRSTimeSet
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetString_123TimeInput
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTimeFormat
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StorageVariable
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.constdata)
</UL>
<P><STRONG><a name="[95]"></a>BeepDuration_set</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1860<LI>Call Chain = BeepDuration_set &rArr; StorageVariable &rArr; EepromFile_Write &rArr; EepromFile_GetAIdlePage &rArr; EepromFile_SetPageArea &rArr; EepromFile_WritePage &rArr; kmy_EepromWritePage &rArr; IIC_Send_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StorageVariable
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetString_abcABC123PYWuBi_Language2
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.constdata)
</UL>
<P><STRONG><a name="[99]"></a>AcceptTimeMode_set</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1860<LI>Call Chain = AcceptTimeMode_set &rArr; StorageVariable &rArr; EepromFile_Write &rArr; EepromFile_GetAIdlePage &rArr; EepromFile_SetPageArea &rArr; EepromFile_WritePage &rArr; kmy_EepromWritePage &rArr; IIC_Send_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StorageVariable
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetString_abcABC123PYWuBi_Language2
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.constdata)
</UL>
<P><STRONG><a name="[1df]"></a>PrintNewlineFlag_set</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, setting.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
</UL>

<P><STRONG><a name="[1e0]"></a>PrintDateFormat_set</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, setting.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
</UL>

<P><STRONG><a name="[1e1]"></a>PrintTimeFormat_set</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, setting.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
</UL>

<P><STRONG><a name="[97]"></a>PrintPageHeader_set</STRONG> (Thumb, 364 bytes, Stack size 56 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1884<LI>Call Chain = PrintPageHeader_set &rArr; StorageVariable &rArr; EepromFile_Write &rArr; EepromFile_GetAIdlePage &rArr; EepromFile_SetPageArea &rArr; EepromFile_WritePage &rArr; kmy_EepromWritePage &rArr; IIC_Send_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StorageVariable
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetString_abcABC123PYWuBi_Language2
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.constdata)
</UL>
<P><STRONG><a name="[98]"></a>PrintPageFooter_set</STRONG> (Thumb, 102 bytes, Stack size 56 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1884<LI>Call Chain = PrintPageFooter_set &rArr; StorageVariable &rArr; EepromFile_Write &rArr; EepromFile_GetAIdlePage &rArr; EepromFile_SetPageArea &rArr; EepromFile_WritePage &rArr; kmy_EepromWritePage &rArr; IIC_Send_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StorageVariable
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetString_abcABC123PYWuBi_Language2
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.constdata)
</UL>
<P><STRONG><a name="[1e2]"></a>PrintReceptCount_set</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, setting.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
</UL>

<P><STRONG><a name="[1e3]"></a>LCDIdelIest_set</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, setting.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
</UL>

<P><STRONG><a name="[1e4]"></a>TestText_set</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, setting.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
</UL>

<P><STRONG><a name="[9a]"></a>AutoReboot</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1860<LI>Call Chain = AutoReboot &rArr; StorageVariable &rArr; EepromFile_Write &rArr; EepromFile_GetAIdlePage &rArr; EepromFile_SetPageArea &rArr; EepromFile_WritePage &rArr; kmy_EepromWritePage &rArr; IIC_Send_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeGetRtcSeconds
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StorageVariable
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetString_abcABC123PYWuBi_Language2
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.constdata)
</UL>
<P><STRONG><a name="[9b]"></a>AutoPrintTime</STRONG> (Thumb, 160 bytes, Stack size 56 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = AutoPrintTime &rArr; GetString_abcABC123PYWuBi_Language2 &rArr; _GetString_abcABC123PYWuBi &rArr; ABCReadCode &rArr; my_AccordPointInsertEdit &rArr; text_out_to_row_Language2 &rArr; text_out_to_row &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreLocalSettings
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetString_abcABC123PYWuBi_Language2
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.constdata)
</UL>
<P><STRONG><a name="[9d]"></a>InitParameterSet</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = InitParameterSet &rArr; MenuHandler_Language2 &rArr; DisplayMenuPercent &rArr; fill_rect &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.constdata)
</UL>
<P><STRONG><a name="[a1]"></a>AdvancedSet</STRONG> (Thumb, 146 bytes, Stack size 80 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = AdvancedSet &rArr; MenuHandler_Language2 &rArr; DisplayMenuPercent &rArr; fill_rect &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_Language2
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PassWordArgDeInit
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PassWordInput_MiddledDisplay
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.constdata)
</UL>
<P><STRONG><a name="[3c]"></a>MainMenuScreen_Settings</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = MainMenuScreen_Settings &rArr; MenuHandler_Language2 &rArr; DisplayMenuPercent &rArr; fill_rect &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[1e7]"></a>flashcursor</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, shurufa.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashguangbiao_to_row
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_AccordPointInsertEdit
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateCursorOffset
</UL>

<P><STRONG><a name="[1f1]"></a>_GetString_abcABC123PYWuBi</STRONG> (Thumb, 792 bytes, Stack size 80 bytes, shurufa.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = _GetString_abcABC123PYWuBi &rArr; ABCReadCode &rArr; my_AccordPointInsertEdit &rArr; text_out_to_row_Language2 &rArr; text_out_to_row &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_strcpy_DeleteTailByte
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdBlackLightOn
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_AutoPostKey
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_AutoOffLcdLight
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PostKey
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepNormal
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flightcursor
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwitchSrf
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaySrfAndInput
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_123ReadCode
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABCReadCode
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abcReadCode
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashguangbiao_to_row
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_AccordPointInsertEdit
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srf_strcat_insert
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetString_abcABC123PYWuBi
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetString_abcABC123PYWuBi2
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetString_abcABC123PYWuBi_Language2
</UL>

<P><STRONG><a name="[1f4]"></a>_GetString_123TimeInput</STRONG> (Thumb, 636 bytes, Stack size 80 bytes, shurufa.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = _GetString_123TimeInput &rArr; my_AccordPointInsertEdit &rArr; text_out_to_row_Language2 &rArr; text_out_to_row &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_strcpy_DeleteTailByte
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdBlackLightOn
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_AutoPostKey
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_AutoOffLcdLight
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PostKey
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepNormal
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flightcursor
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwitchSrf
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaySrfAndInput
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_123TimeInput
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashguangbiao_to_row
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_AccordPointInsertEdit
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srf_strcat_insert
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetString_123TimeInput
</UL>

<P><STRONG><a name="[1dc]"></a>GetRecjectReasonAndInput</STRONG> (Thumb, 1394 bytes, Stack size 376 bytes, shurufa.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 816<LI>Call Chain = GetRecjectReasonAndInput &rArr; my_ABCReadCode &rArr; my_AccordPointInsertEdit &rArr; text_out_to_row_Language2 &rArr; text_out_to_row &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_strcpy_DeleteTailByte
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_area_to_row
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_to_row
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PostKey
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventPost
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRejectReason
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_ABCReadCode
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_abcReadCode
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flightcursor
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashguangbiao_to_row
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RejectReason_set
</UL>

<P><STRONG><a name="[1d9]"></a>abcABC123PYWuBiArgDeInit</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, shurufa.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IpAddSet
</UL>

<P><STRONG><a name="[1da]"></a>GetString_abcABC123PYWuBi2</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, shurufa.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = GetString_abcABC123PYWuBi2 &rArr; _GetString_abcABC123PYWuBi &rArr; ABCReadCode &rArr; my_AccordPointInsertEdit &rArr; text_out_to_row_Language2 &rArr; text_out_to_row &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetString_abcABC123PYWuBi
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IpAddSet
</UL>

<P><STRONG><a name="[1f8]"></a>GetString_abcABC123PYWuBi</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, shurufa.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetString_abcABC123PYWuBi
</UL>

<P><STRONG><a name="[1dd]"></a>GetString_123TimeInput</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, shurufa.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = GetString_123TimeInput &rArr; _GetString_123TimeInput &rArr; my_AccordPointInsertEdit &rArr; text_out_to_row_Language2 &rArr; text_out_to_row &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetString_123TimeInput
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputDeliveryTime
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSCloseTime_set
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSOpenTime_set
</UL>

<P><STRONG><a name="[1b3]"></a>GetString_abcABC123PYWuBi_Language2</STRONG> (Thumb, 58 bytes, Stack size 40 bytes, shurufa.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = GetString_abcABC123PYWuBi_Language2 &rArr; _GetString_abcABC123PYWuBi &rArr; ABCReadCode &rArr; my_AccordPointInsertEdit &rArr; text_out_to_row_Language2 &rArr; text_out_to_row &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetString_abcABC123PYWuBi
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoPrintTime
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoReboot
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintPageFooter_set
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintPageHeader_set
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptTimeMode_set
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepDuration_set
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckOrderInterval_set
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoginPassword_set
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoginUsername_set
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestaurantID_set
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback_set
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OrderURL_set
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeURL_Set
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VersionURL_Set
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalPasswordSet
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalIDSet
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DomainSet
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicApnSetPassword
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicApnSetUsername
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicApnSetApn
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_SendSMS
</UL>

<P><STRONG><a name="[1cc]"></a>PassWordArgDeInit</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, shurufa.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdvancedSet
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpPsword
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOffScreenTime
</UL>

<P><STRONG><a name="[10e]"></a>PassWordInput</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, shurufa.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PassWordInput_XposStartDisplay
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PUK_Required
</UL>

<P><STRONG><a name="[1b2]"></a>PassWordInput_MiddledDisplay</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, shurufa.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = PassWordInput_MiddledDisplay &rArr; _PassWordInput_MiddledDisplay &rArr; clear_area_to_row &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PassWordInput_MiddledDisplay
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdvancedSet
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpPsword
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOffScreenTime
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadEepromPage
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFlashPage
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFlashPage
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EraseFlashPage
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EraseEepromPage
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_SendSMS
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_MakeCall
</UL>

<P><STRONG><a name="[1fc]"></a>PassWordInput_XposStartDisplay</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, shurufa.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PassWordInput_XposStartDisplay
</UL>

<P><STRONG><a name="[192]"></a>PassWordInput2</STRONG> (Thumb, 68 bytes, Stack size 40 bytes, shurufa.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = PassWordInput2 &rArr; _PassWordInput_XposStartDisplay &rArr; clear_area &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PassWordInput_XposStartDisplay
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM_PINset
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPINAndPUK
</UL>

<P><STRONG><a name="[200]"></a>SendMessage</STRONG> (Thumb, 526 bytes, Stack size 2280 bytes, sim900b.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;My_strcpy_PointInc
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDatasFromSIM300_OKstr
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AsciiGB2312ToUCS2
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDU7bitEncode
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckBuffWhetherAllisAsccii
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneHexToTwoAsccii
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HaomaToMassageCode
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[1b4]"></a>SendMessage_TextMode</STRONG> (Thumb, 246 bytes, Stack size 48 bytes, sim900b.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = SendMessage_TextMode &rArr; SendAtCommand_UntillSuccess &rArr; ReadDatasFromtty &rArr; kmy_USART2ReceiveData
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_receive
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDatasFromSIM300_OKstr
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendAtCommand_UntillSuccess
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_SendSMS
</UL>

<P><STRONG><a name="[206]"></a>ReceiveMessageDecode_onlyPhoneNumber</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, sim900b.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TwoAscciiToOneHex
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MassageCodeToHaoma
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>

<P><STRONG><a name="[17a]"></a>ReceiveMessageDecode</STRONG> (Thumb, 422 bytes, Stack size 144 bytes, sim900b.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetContext_8bit
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetContext_7bit
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetContext_UCS2
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TwoAscciiToOneHex
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MassageCodeToHaoma
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMessage
</UL>

<P><STRONG><a name="[20a]"></a>ucs2_to_gb2312</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, ucs2_to_gb2312.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ucs2_offset
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[185]"></a>ucs2str_to_gb2312str</STRONG> (Thumb, 552 bytes, Stack size 32 bytes, ucs2_to_gb2312.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ucs2str_to_gb2312str &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ucs2_offset
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageDisplayContext
</UL>

<P><STRONG><a name="[79]"></a>DisplayVersion</STRONG> (Thumb, 86 bytes, Stack size 128 bytes, version.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = DisplayVersion &rArr; DrawTitle_to_row_Language2 &rArr; DrawTitle_to_row &rArr; text_out_to_row_x &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_to_row_Language2
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.constdata)
</UL>
<P><STRONG><a name="[20c]"></a>my_string_replace2</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, foodorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = my_string_replace2 &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncat
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetOneOrder
</UL>

<P><STRONG><a name="[143]"></a>kmy_EnableDisableTime3</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, foodorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kmy_EnableDisableTime3
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeCSPN
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeElectricity
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeSignalQuality
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RejectOrder
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder_SpeedKey
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintOrder
</UL>

<P><STRONG><a name="[155]"></a>kmy_GPRSTimeSet</STRONG> (Thumb, 490 bytes, Stack size 48 bytes, foodorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = kmy_GPRSTimeSet &rArr; kmy_TimeGetTime &rArr; __offtime
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeGetTime
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcStandbyKey
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSCloseTime_set
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSOpenTime_set
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateParameter
</UL>

<P><STRONG><a name="[20e]"></a>Reset_gOrderBuf</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, foodorder.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[20f]"></a>HttpGET_VersionString</STRONG> (Thumb, 330 bytes, Stack size 32 bytes, foodorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HttpGET_VersionString &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncat
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Thread
</UL>

<P><STRONG><a name="[210]"></a>GetHttpGETString</STRONG> (Thumb, 676 bytes, Stack size 40 bytes, foodorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = GetHttpGETString &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncat
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Thread
</UL>

<P><STRONG><a name="[211]"></a>GetHttpCallbackString</STRONG> (Thumb, 440 bytes, Stack size 40 bytes, foodorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = GetHttpCallbackString &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncat
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RejectOrder
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder_SpeedKey
</UL>

<P><STRONG><a name="[212]"></a>GetHttpPOSTString</STRONG> (Thumb, 538 bytes, Stack size 208 bytes, foodorder.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[213]"></a>GetCountOfOrders</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, foodorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GetCountOfOrders &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoPrintOrder
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Latest_Orders
</UL>

<P><STRONG><a name="[214]"></a>GetOneOrder</STRONG> (Thumb, 1440 bytes, Stack size 1208 bytes, foodorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1260<LI>Call Chain = GetOneOrder &rArr; my_string_replace2 &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_string_replace
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_string_replace2
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoPrintOrder
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Latest_Orders
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reprint_ConfirmOrder
</UL>

<P><STRONG><a name="[216]"></a>AcceptRejectOrders</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, foodorder.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_to_row_x_Language2
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepNormal
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
</UL>

<P><STRONG><a name="[217]"></a>SeperateIpAndPort</STRONG> (Thumb, 300 bytes, Stack size 32 bytes, foodorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = SeperateIpAndPort &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Thread
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_GetTcpConnectATString
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RejectOrder
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder_SpeedKey
</UL>

<P><STRONG><a name="[218]"></a>GetSelectItemOfMenus_SpeedAcceptKey</STRONG> (Thumb, 1184 bytes, Stack size 56 bytes, foodorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = GetSelectItemOfMenus_SpeedAcceptKey &rArr; DispHighLightRow &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispHighLightRow
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_to_row
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PostKey
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepNormal
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder
</UL>

<P><STRONG><a name="[219]"></a>GetSelectItemOfMenus</STRONG> (Thumb, 968 bytes, Stack size 56 bytes, foodorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = GetSelectItemOfMenus &rArr; DispHighLightRow &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispHighLightRow
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_to_row
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PostKey
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepNormal
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm_Orders
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RejectOrder
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayOrder
</UL>

<P><STRONG><a name="[21a]"></a>AddCarriage</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, foodorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = AddCarriage
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintOrder
</UL>

<P><STRONG><a name="[21b]"></a>BeepLound</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, foodorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = BeepLound &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msleep
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_BeepOn
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_BeepOff
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HaveReceiveOrder
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintOrder
</UL>

<P><STRONG><a name="[21d]"></a>PrintOrder</STRONG> (Thumb, 1674 bytes, Stack size 608 bytes, foodorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 872<LI>Call Chain = PrintOrder &rArr; DrawTitle_to_row_Language2 &rArr; DrawTitle_to_row &rArr; text_out_to_row_x &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_string_replace
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeGetTime
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EnableDisableTime3
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msleep
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepLound
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCarriage
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterUseUsart3
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterString
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterSetcommand
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterBitmap
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoPrintOrder
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reprint_ConfirmOrder
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayOrder
</UL>

<P><STRONG><a name="[21f]"></a>DisplayOrder</STRONG> (Thumb, 156 bytes, Stack size 64 bytes, foodorder.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintOrder
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectItemOfMenus
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Latest_Orders
</UL>

<P><STRONG><a name="[220]"></a>GetSelectOrderID</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, foodorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = GetSelectOrderID &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RejectOrder
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder_SpeedKey
</UL>

<P><STRONG><a name="[221]"></a>DeleteOneOrder</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, foodorder.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>

<P><STRONG><a name="[cc]"></a>InitOrder</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, foodorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = InitOrder &rArr; kmy_EepromWriteByte &rArr; kmy_EepromReadByte &rArr; IIC_Read_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromWriteByte
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReprintLastOrder
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_FileSystemFormat
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadOutOrders
</UL>

<P><STRONG><a name="[222]"></a>ReadOutOrders</STRONG> (Thumb, 614 bytes, Stack size 88 bytes, foodorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = ReadOutOrders &rArr; DrawTitle_to_row &rArr; text_out_to_row_x &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromReadSequent
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitOrder
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromReadByte
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm_Orders
</UL>

<P><STRONG><a name="[223]"></a>Reprint_ConfirmOrder</STRONG> (Thumb, 138 bytes, Stack size 5904 bytes, foodorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 7164<LI>Call Chain = Reprint_ConfirmOrder &rArr; GetOneOrder &rArr; my_string_replace2 &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromReadSequent
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintOrder
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetOneOrder
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReprintLastOrder
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm_Orders
</UL>

<P><STRONG><a name="[157]"></a>ReprintLastOrder</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, foodorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 7180<LI>Call Chain = ReprintLastOrder &rArr; Reprint_ConfirmOrder &rArr; GetOneOrder &rArr; my_string_replace2 &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitOrder
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reprint_ConfirmOrder
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromReadByte
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StandbyResponseUserMenu
</UL>

<P><STRONG><a name="[224]"></a>GetSelectOrder</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, foodorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GetSelectOrder &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RejectOrder
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder_SpeedKey
</UL>

<P><STRONG><a name="[225]"></a>StoreAnOrder</STRONG> (Thumb, 186 bytes, Stack size 40 bytes, foodorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = StoreAnOrder &rArr; kmy_EepromWrite &rArr; kmy_EepromWritePage &rArr; IIC_Send_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromWriteByte
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromWrite
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromReadByte
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RejectOrder
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder_SpeedKey
</UL>

<P><STRONG><a name="[226]"></a>InputDeliveryTime</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, foodorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = InputDeliveryTime &rArr; GetString_123TimeInput &rArr; _GetString_123TimeInput &rArr; my_AccordPointInsertEdit &rArr; text_out_to_row_Language2 &rArr; text_out_to_row &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetString_123TimeInput
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder
</UL>

<P><STRONG><a name="[1de]"></a>CheckTimeFormat</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, foodorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = CheckTimeFormat &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSCloseTime_set
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSOpenTime_set
</UL>

<P><STRONG><a name="[227]"></a>AcceptOrder_SpeedKey</STRONG> (Thumb, 700 bytes, Stack size 3480 bytes, foodorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4840<LI>Call Chain = AcceptOrder_SpeedKey &rArr; tcp_Connect &rArr; _tcp_Connect &rArr; send_at_cmd_and_return &rArr; ReadDatasFromtty &rArr; kmy_USART2ReceiveData
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeGetTime
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EnableDisableTime3
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_Connect
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreAnOrder
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectOrder
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectOrderID
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeperateIpAndPort
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHttpCallbackString
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoPrintOrder
</UL>

<P><STRONG><a name="[1f7]"></a>GetRejectReason</STRONG> (Thumb, 168 bytes, Stack size 40 bytes, foodorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = GetRejectReason &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RejectOrder
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRecjectReasonAndInput
</UL>

<P><STRONG><a name="[a2]"></a>AcceptOrder</STRONG> (Thumb, 1052 bytes, Stack size 3768 bytes, foodorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5128<LI>Call Chain = AcceptOrder &rArr; tcp_Connect &rArr; _tcp_Connect &rArr; send_at_cmd_and_return &rArr; ReadDatasFromtty &rArr; kmy_USART2ReceiveData
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_string_replace
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeGetTime
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EnableDisableTime3
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_Connect
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_receive
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputDeliveryTime
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreAnOrder
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectOrder
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectOrderID
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectItemOfMenus_SpeedAcceptKey
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeperateIpAndPort
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHttpCallbackString
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRejectReason
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTimeFormat
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoPrintOrder
</UL>
<BR>[Address Reference Count : 1]<UL><LI> foodorder.o(.constdata)
</UL>
<P><STRONG><a name="[a3]"></a>RejectOrder</STRONG> (Thumb, 712 bytes, Stack size 3856 bytes, foodorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 5216<LI>Call Chain = RejectOrder &rArr; tcp_Connect &rArr; _tcp_Connect &rArr; send_at_cmd_and_return &rArr; ReadDatasFromtty &rArr; kmy_USART2ReceiveData
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_string_replace
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeGetTime
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EnableDisableTime3
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_Connect
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_receive
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreAnOrder
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectOrder
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectOrderID
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectItemOfMenus
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeperateIpAndPort
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHttpCallbackString
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRejectReason
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> foodorder.o(.constdata)
</UL>
<P><STRONG><a name="[228]"></a>AcceptRejectMenu</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, foodorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = AcceptRejectMenu &rArr; MenuHandler_Orders &rArr; DisplayMenuPercent &rArr; fill_rect &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_Orders
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoPrintOrder
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Latest_Orders
</UL>

<P><STRONG><a name="[153]"></a>HaveReceiveOrder</STRONG> (Thumb, 566 bytes, Stack size 24 bytes, foodorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = HaveReceiveOrder &rArr; DrawTitle_to_row &rArr; text_out_to_row_x &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msleep
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_AutoPostKey
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepLound
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoPrintOrder
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcStandbyKey
</UL>

<P><STRONG><a name="[154]"></a>AutoPrintOrder</STRONG> (Thumb, 342 bytes, Stack size 2800 bytes, foodorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 7928<LI>Call Chain = AutoPrintOrder &rArr; AcceptOrder &rArr; tcp_Connect &rArr; _tcp_Connect &rArr; send_at_cmd_and_return &rArr; ReadDatasFromtty &rArr; kmy_USART2ReceiveData
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HaveReceiveOrder
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptRejectMenu
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder_SpeedKey
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintOrder
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetOneOrder
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCountOfOrders
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcStandbyKey
</UL>

<P><STRONG><a name="[229]"></a>Latest_Orders</STRONG> (Thumb, 384 bytes, Stack size 2800 bytes, foodorder.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitKeyRelease
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptRejectMenu
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayOrder
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetOneOrder
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCountOfOrders
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[42]"></a>Confirm_Orders</STRONG> (Thumb, 220 bytes, Stack size 272 bytes, foodorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 7436<LI>Call Chain = Confirm_Orders &rArr; Reprint_ConfirmOrder &rArr; GetOneOrder &rArr; my_string_replace2 &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispHighLightRow
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_to_row
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitKeyRelease
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromWriteByte
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reprint_ConfirmOrder
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadOutOrders
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectItemOfMenus
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromReadByte
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StandbyResponseUserMenu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.constdata)
</UL>
<P><STRONG><a name="[22a]"></a>gprs_GetTcpConnectATString</STRONG> (Thumb, 564 bytes, Stack size 48 bytes, foodorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = gprs_GetTcpConnectATString &rArr; SeperateIpAndPort &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeperateIpAndPort
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncat
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Thread
</UL>

<P><STRONG><a name="[22b]"></a>StoreVersion</STRONG> (Thumb, 192 bytes, Stack size 224 bytes, foodorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2052<LI>Call Chain = StoreVersion &rArr; StorageVariable &rArr; EepromFile_Write &rArr; EepromFile_GetAIdlePage &rArr; EepromFile_SetPageArea &rArr; EepromFile_WritePage &rArr; kmy_EepromWritePage &rArr; IIC_Send_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StorageVariable
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncat
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Thread
</UL>

<P><STRONG><a name="[22c]"></a>GPRS_Thread</STRONG> (Thumb, 1932 bytes, Stack size 64 bytes, foodorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2116<LI>Call Chain = GPRS_Thread &rArr; StoreVersion &rArr; StorageVariable &rArr; EepromFile_Write &rArr; EepromFile_GetAIdlePage &rArr; EepromFile_SetPageArea &rArr; EepromFile_WritePage &rArr; kmy_EepromWritePage &rArr; IIC_Send_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LedDataLedOff
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART2SendString
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART2ReceiveReset
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART2ShowBuff
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART2ReadToEnd
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART2CheckBuff
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreVersion
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_GetTcpConnectATString
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeperateIpAndPort
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHttpGETString
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HttpGET_VersionString
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[152]"></a>CheckOrderFailWarn</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, foodorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CheckOrderFailWarn &rArr; kmy_LcdClear &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcStandbyKey
</UL>

<P><STRONG><a name="[14]"></a>RTC_IRQHandler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32f10x_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForLastTask
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetITStatus
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>HardFault_Handler</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HardFault_Handler &rArr; kmy_USART1SendString
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART1SendString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>MemManage_Handler</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MemManage_Handler &rArr; kmy_USART1SendString
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART1SendString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>BusFault_Handler</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BusFault_Handler &rArr; kmy_USART1SendString
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART1SendString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>UsageFault_Handler</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UsageFault_Handler &rArr; kmy_USART1SendString
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART1SendString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>SystemInit</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, system_stm32f10x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(.text)
</UL>
<P><STRONG><a name="[327]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, system_stm32f10x.o(.text), UNUSED)

<P><STRONG><a name="[7]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>CEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_BRK_TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM1_TRG_COM_TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM1_UP_TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md_vl.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[268]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART1Init
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART3Init
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time3_NVIC_Configuration
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time2_NVIC_Configuration
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART2Init
</UL>

<P><STRONG><a name="[269]"></a>NVIC_Init</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, misc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART1Init
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART3Init
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time3_NVIC_Configuration
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time2_NVIC_Configuration
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_KeyUsedInterruptScanInit
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART2Init
</UL>

<P><STRONG><a name="[328]"></a>NVIC_SetVectorTable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[329]"></a>NVIC_SystemLPConfig</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[32a]"></a>SysTick_CLKSourceConfig</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[235]"></a>BKP_DeInit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32f10x_bkp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_BackupResetCmd
</UL>

<P><STRONG><a name="[2dd]"></a>BKP_TamperPinLevelConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_bkp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_BackUpInit
</UL>

<P><STRONG><a name="[2db]"></a>BKP_TamperPinCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_bkp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_BackUpInit
</UL>

<P><STRONG><a name="[2dc]"></a>BKP_ITConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_bkp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_BackUpInit
</UL>

<P><STRONG><a name="[32b]"></a>BKP_RTCOutputConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f10x_bkp.o(.text), UNUSED)

<P><STRONG><a name="[32c]"></a>BKP_SetRTCCalibrationValue</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f10x_bkp.o(.text), UNUSED)

<P><STRONG><a name="[2e1]"></a>BKP_WriteBackupRegister</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_bkp.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_ClearTamper
</UL>

<P><STRONG><a name="[2e0]"></a>BKP_ReadBackupRegister</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_bkp.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_CheckTamper
</UL>

<P><STRONG><a name="[32d]"></a>BKP_GetFlagStatus</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_bkp.o(.text), UNUSED)

<P><STRONG><a name="[2de]"></a>BKP_ClearFlag</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_bkp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_ClearTamper
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_BackUpInit
</UL>

<P><STRONG><a name="[32e]"></a>BKP_GetITStatus</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_bkp.o(.text), UNUSED)

<P><STRONG><a name="[32f]"></a>BKP_ClearITPendingBit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_bkp.o(.text), UNUSED)

<P><STRONG><a name="[330]"></a>EXTI_DeInit</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f10x_exti.o(.text), UNUSED)

<P><STRONG><a name="[291]"></a>EXTI_Init</STRONG> (Thumb, 160 bytes, Stack size 0 bytes, stm32f10x_exti.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_KeyUsedInterruptScanInit
</UL>

<P><STRONG><a name="[331]"></a>EXTI_StructInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_exti.o(.text), UNUSED)

<P><STRONG><a name="[332]"></a>EXTI_GenerateSWInterrupt</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_exti.o(.text), UNUSED)

<P><STRONG><a name="[333]"></a>EXTI_GetFlagStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_exti.o(.text), UNUSED)

<P><STRONG><a name="[334]"></a>EXTI_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_exti.o(.text), UNUSED)

<P><STRONG><a name="[29c]"></a>EXTI_GetITStatus</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f10x_exti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[290]"></a>EXTI_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_exti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_KeyUsedInterruptScanInit
</UL>

<P><STRONG><a name="[2ca]"></a>FLASH_SetLatency</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_RCCInit
</UL>

<P><STRONG><a name="[335]"></a>FLASH_HalfCycleAccessCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[336]"></a>FLASH_PrefetchBufferCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[337]"></a>FLASH_Unlock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[338]"></a>FLASH_UnlockBank1</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[339]"></a>FLASH_Lock</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[33a]"></a>FLASH_LockBank1</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[238]"></a>FLASH_GetBank1Status</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastBank1Operation
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[237]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, stm32f10x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetBank1Status
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_UserOptionByteConfig
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ReadOutProtection
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EnableWriteProtection
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramOptionByteData
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramHalfWord
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWord
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseOptionBytes
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseAllPages
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>

<P><STRONG><a name="[239]"></a>FLASH_ErasePage</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, stm32f10x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[23a]"></a>FLASH_EraseAllPages</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, stm32f10x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[23b]"></a>FLASH_WaitForLastBank1Operation</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, stm32f10x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetBank1Status
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseAllBank1Pages
</UL>

<P><STRONG><a name="[23c]"></a>FLASH_EraseAllBank1Pages</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, stm32f10x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastBank1Operation
</UL>

<P><STRONG><a name="[23e]"></a>FLASH_GetReadOutProtectionStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_EraseOptionBytes
</UL>

<P><STRONG><a name="[23d]"></a>FLASH_EraseOptionBytes</STRONG> (Thumb, 152 bytes, Stack size 12 bytes, stm32f10x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetReadOutProtectionStatus
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[23f]"></a>FLASH_ProgramWord</STRONG> (Thumb, 96 bytes, Stack size 20 bytes, stm32f10x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[240]"></a>FLASH_ProgramHalfWord</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32f10x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[241]"></a>FLASH_ProgramOptionByteData</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, stm32f10x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[242]"></a>FLASH_EnableWriteProtection</STRONG> (Thumb, 208 bytes, Stack size 28 bytes, stm32f10x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[243]"></a>FLASH_ReadOutProtection</STRONG> (Thumb, 156 bytes, Stack size 12 bytes, stm32f10x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[244]"></a>FLASH_UserOptionByteConfig</STRONG> (Thumb, 88 bytes, Stack size 20 bytes, stm32f10x_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[33b]"></a>FLASH_GetUserOptionByte</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[33c]"></a>FLASH_GetWriteProtectionOptionByte</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[33d]"></a>FLASH_GetPrefetchBufferStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[33e]"></a>FLASH_ITConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[33f]"></a>FLASH_GetFlagStatus</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[340]"></a>FLASH_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[341]"></a>FLASH_GetStatus</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, stm32f10x_flash.o(.text), UNUSED)

<P><STRONG><a name="[245]"></a>GPIO_DeInit</STRONG> (Thumb, 172 bytes, Stack size 8 bytes, stm32f10x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[247]"></a>GPIO_AFIODeInit</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32f10x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[26b]"></a>GPIO_Init</STRONG> (Thumb, 274 bytes, Stack size 24 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART1Init
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterInit
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_MagcardInit
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LedInit
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_KeyInit
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GprsInit
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_BeepInit
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_BatInit
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART3Init
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdInitGPIO
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetRow
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRow
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIGpioInit
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Init
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART2Init
</UL>

<P><STRONG><a name="[342]"></a>GPIO_StructInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[277]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_BatGetChargeStatus
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_BatGetACStatus
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MgGetRCP3
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MgGetRDP3
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MgGetRCP2
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MgGetRDP2
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MgGetCls
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyScan
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRow
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
</UL>

<P><STRONG><a name="[343]"></a>GPIO_ReadInputData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[344]"></a>GPIO_ReadOutputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[345]"></a>GPIO_ReadOutputData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[278]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LedDataLedOn
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GprsInit
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashInit
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_BeepOn
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LedPaparLedOn
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashReadBuffer
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashEraseSector
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashEraseBulk
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetRow
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GprsOnOff
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashWritePage
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashWaitForWriteEnd
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashWriteEnable
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashReadID
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Send_Byte
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_NAck
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Ack
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Init
</UL>

<P><STRONG><a name="[1b8]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LedDataLedOff
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GprsInit
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashInit
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_BeepOff
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterUseUsart3
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LedPaparLedOff
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashReadBuffer
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashEraseSector
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashEraseBulk
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterUseUsart3
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterUseUsart3
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GprsOnOff
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashWritePage
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashWaitForWriteEnd
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashWriteEnable
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashReadID
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Send_Byte
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_NAck
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Ack
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
</UL>

<P><STRONG><a name="[294]"></a>GPIO_WriteBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdBlackLightOff
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdBlackLightOn
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdInitLCDC
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_command
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_send
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRow
</UL>

<P><STRONG><a name="[346]"></a>GPIO_Write</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[347]"></a>GPIO_PinLockConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[348]"></a>GPIO_EventOutputConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[349]"></a>GPIO_EventOutputCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[34a]"></a>GPIO_PinRemapConfig</STRONG> (Thumb, 138 bytes, Stack size 20 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[292]"></a>GPIO_EXTILineConfig</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, stm32f10x_gpio.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_KeyUsedInterruptScanInit
</UL>

<P><STRONG><a name="[34b]"></a>GPIO_ETH_MediaInterfaceConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[2e3]"></a>IWDG_WriteAccessCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_WatchDogInit
</UL>

<P><STRONG><a name="[2e4]"></a>IWDG_SetPrescaler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_WatchDogInit
</UL>

<P><STRONG><a name="[2e5]"></a>IWDG_SetReload</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_WatchDogInit
</UL>

<P><STRONG><a name="[2e6]"></a>IWDG_ReloadCounter</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_WatchDogResetCounter
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_WatchDogInit
</UL>

<P><STRONG><a name="[2e7]"></a>IWDG_Enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_WatchDogInit
</UL>

<P><STRONG><a name="[34c]"></a>IWDG_GetFlagStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_iwdg.o(.text), UNUSED)

<P><STRONG><a name="[248]"></a>PWR_DeInit</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32f10x_pwr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PWR_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_MiscInit
</UL>

<P><STRONG><a name="[2cf]"></a>PWR_BackupAccessCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_pwr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeInit
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_BackUpInit
</UL>

<P><STRONG><a name="[34d]"></a>PWR_PVDCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_pwr.o(.text), UNUSED)

<P><STRONG><a name="[34e]"></a>PWR_PVDLevelConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_pwr.o(.text), UNUSED)

<P><STRONG><a name="[34f]"></a>PWR_WakeUpPinCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_pwr.o(.text), UNUSED)

<P><STRONG><a name="[29b]"></a>PWR_EnterSTOPMode</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, stm32f10x_pwr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EnterPowerDownMode
</UL>

<P><STRONG><a name="[350]"></a>PWR_EnterSTANDBYMode</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, stm32f10x_pwr.o(.text), UNUSED)

<P><STRONG><a name="[351]"></a>PWR_GetFlagStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_pwr.o(.text), UNUSED)

<P><STRONG><a name="[352]"></a>PWR_ClearFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_pwr.o(.text), UNUSED)

<P><STRONG><a name="[2c4]"></a>RCC_DeInit</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_RCCInit
</UL>

<P><STRONG><a name="[2c5]"></a>RCC_HSEConfig</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_RCCInit
</UL>

<P><STRONG><a name="[24b]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_WatchDogInit
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeInit
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStartUp
</UL>

<P><STRONG><a name="[24a]"></a>RCC_WaitForHSEStartUp</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RCC_WaitForHSEStartUp &rArr; RCC_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_RCCInit
</UL>

<P><STRONG><a name="[353]"></a>RCC_AdjustHSICalibrationValue</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[354]"></a>RCC_HSICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[2c6]"></a>RCC_PLLConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_RCCInit
</UL>

<P><STRONG><a name="[2c7]"></a>RCC_PLLCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_RCCInit
</UL>

<P><STRONG><a name="[2c8]"></a>RCC_SYSCLKConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_RCCInit
</UL>

<P><STRONG><a name="[2c9]"></a>RCC_GetSYSCLKSource</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_RCCInit
</UL>

<P><STRONG><a name="[355]"></a>RCC_HCLKConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[356]"></a>RCC_PCLK1Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[357]"></a>RCC_PCLK2Config</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[358]"></a>RCC_ITConfig</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[359]"></a>RCC_USBCLKConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[35a]"></a>RCC_ADCCLKConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[2d0]"></a>RCC_LSEConfig</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeInit
</UL>

<P><STRONG><a name="[35b]"></a>RCC_LSICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[2d1]"></a>RCC_RTCCLKConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeInit
</UL>

<P><STRONG><a name="[2d2]"></a>RCC_RTCCLKCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeInit
</UL>

<P><STRONG><a name="[253]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 192 bytes, Stack size 12 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_RCCInit
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2S_Init
</UL>

<P><STRONG><a name="[35c]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[26a]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART1Init
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_RCCInit
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_MagcardInit
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_KeyInit
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GprsInit
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_BatInit
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART3Init
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdInitGPIO
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIGpioInit
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Init
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART2Init
</UL>

<P><STRONG><a name="[272]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeInit
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_RCCInit
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_BackUpInit
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART3Init
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART2Init
</UL>

<P><STRONG><a name="[246]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_AFIODeInit
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DeInit
</UL>

<P><STRONG><a name="[249]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_DeInit
</UL>

<P><STRONG><a name="[236]"></a>RCC_BackupResetCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BKP_DeInit
</UL>

<P><STRONG><a name="[35d]"></a>RCC_ClockSecuritySystemCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[35e]"></a>RCC_MCOConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[2e2]"></a>RCC_ClearFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_WatchDogInit
</UL>

<P><STRONG><a name="[35f]"></a>RCC_GetITStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[360]"></a>RCC_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[2d4]"></a>RTC_ITConfig</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32f10x_rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeInit
</UL>

<P><STRONG><a name="[24d]"></a>RTC_EnterConfigMode</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetAlarm
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetPrescaler
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetCounter
</UL>

<P><STRONG><a name="[24e]"></a>RTC_ExitConfigMode</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetAlarm
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetPrescaler
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetCounter
</UL>

<P><STRONG><a name="[299]"></a>RTC_GetCounter</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeGetTime
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeGetRtcSeconds
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_AutoPostKey
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_AutoOffLcdLight
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
</UL>

<P><STRONG><a name="[24c]"></a>RTC_SetCounter</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, stm32f10x_rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RTC_SetCounter
</UL>
<BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitConfigMode
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterConfigMode
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeSetTime
</UL>

<P><STRONG><a name="[24f]"></a>RTC_SetPrescaler</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, stm32f10x_rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RTC_SetPrescaler
</UL>
<BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitConfigMode
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterConfigMode
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeInit
</UL>

<P><STRONG><a name="[250]"></a>RTC_SetAlarm</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, stm32f10x_rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitConfigMode
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterConfigMode
</UL>

<P><STRONG><a name="[361]"></a>RTC_GetDivider</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rtc.o(.text), UNUSED)

<P><STRONG><a name="[232]"></a>RTC_WaitForLastTask</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeInit
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
</UL>

<P><STRONG><a name="[2d3]"></a>RTC_WaitForSynchro</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f10x_rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeInit
</UL>

<P><STRONG><a name="[362]"></a>RTC_GetFlagStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_rtc.o(.text), UNUSED)

<P><STRONG><a name="[363]"></a>RTC_ClearFlag</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_rtc.o(.text), UNUSED)

<P><STRONG><a name="[230]"></a>RTC_GetITStatus</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f10x_rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
</UL>

<P><STRONG><a name="[231]"></a>RTC_ClearITPendingBit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
</UL>

<P><STRONG><a name="[251]"></a>SPI_I2S_DeInit</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, stm32f10x_spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[288]"></a>SPI_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f10x_spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashInit
</UL>

<P><STRONG><a name="[252]"></a>I2S_Init</STRONG> (Thumb, 222 bytes, Stack size 56 bytes, stm32f10x_spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>

<P><STRONG><a name="[364]"></a>SPI_StructInit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[365]"></a>I2S_StructInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[289]"></a>SPI_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashInit
</UL>

<P><STRONG><a name="[366]"></a>I2S_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[367]"></a>SPI_I2S_ITConfig</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[368]"></a>SPI_I2S_DMACmd</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[286]"></a>SPI_I2S_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashSendByte
</UL>

<P><STRONG><a name="[287]"></a>SPI_I2S_ReceiveData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashSendByte
</UL>

<P><STRONG><a name="[369]"></a>SPI_NSSInternalSoftwareConfig</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[36a]"></a>SPI_SSOutputCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[36b]"></a>SPI_DataSizeConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[36c]"></a>SPI_TransmitCRC</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[36d]"></a>SPI_CalculateCRC</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[36e]"></a>SPI_GetCRC</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[36f]"></a>SPI_GetCRCPolynomial</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[370]"></a>SPI_BiDirectionalLineConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[285]"></a>SPI_I2S_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashSendByte
</UL>

<P><STRONG><a name="[371]"></a>SPI_I2S_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[372]"></a>SPI_I2S_GetITStatus</STRONG> (Thumb, 52 bytes, Stack size 20 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[373]"></a>SPI_I2S_ClearITPendingBit</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32f10x_spi.o(.text), UNUSED)

<P><STRONG><a name="[254]"></a>TIM_DeInit</STRONG> (Thumb, 424 bytes, Stack size 8 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeInit
</UL>

<P><STRONG><a name="[2d5]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeInit
</UL>

<P><STRONG><a name="[374]"></a>TIM_OC1Init</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[375]"></a>TIM_OC2Init</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[376]"></a>TIM_OC3Init</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[377]"></a>TIM_OC4Init</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[25d]"></a>TIM_SetIC4Prescaler</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[25b]"></a>TIM_SetIC3Prescaler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[259]"></a>TIM_SetIC2Prescaler</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[257]"></a>TIM_SetIC1Prescaler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[255]"></a>TIM_ICInit</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC1Prescaler
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC2Prescaler
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC3Prescaler
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC4Prescaler
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI3_Config
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI4_Config
</UL>

<P><STRONG><a name="[25e]"></a>TIM_PWMIConfig</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC1Prescaler
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC2Prescaler
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
</UL>

<P><STRONG><a name="[378]"></a>TIM_BDTRConfig</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[379]"></a>TIM_TimeBaseStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[37a]"></a>TIM_OCStructInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[37b]"></a>TIM_ICStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[37c]"></a>TIM_BDTRStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[1b9]"></a>TIM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeInit
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GPRSTimeSet
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EnableDisableTime3
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeChinese
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExternalSerail1_Printer
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[37d]"></a>TIM_CtrlPWMOutputs</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[20d]"></a>TIM_ITConfig</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeInit
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GPRSTimeSet
</UL>

<P><STRONG><a name="[37e]"></a>TIM_GenerateEvent</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[37f]"></a>TIM_DMAConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[380]"></a>TIM_DMACmd</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[381]"></a>TIM_InternalClockConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[260]"></a>TIM_SelectInputTrigger</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITRxExternalClockConfig
</UL>

<P><STRONG><a name="[25f]"></a>TIM_ITRxExternalClockConfig</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectInputTrigger
</UL>

<P><STRONG><a name="[261]"></a>TIM_TIxExternalClockConfig</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectInputTrigger
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
</UL>

<P><STRONG><a name="[263]"></a>TIM_ETRConfig</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRClockMode2Config
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRClockMode1Config
</UL>

<P><STRONG><a name="[262]"></a>TIM_ETRClockMode1Config</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRConfig
</UL>

<P><STRONG><a name="[264]"></a>TIM_ETRClockMode2Config</STRONG> (Thumb, 32 bytes, Stack size 20 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRConfig
</UL>

<P><STRONG><a name="[382]"></a>TIM_PrescalerConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[383]"></a>TIM_CounterModeConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[384]"></a>TIM_EncoderInterfaceConfig</STRONG> (Thumb, 62 bytes, Stack size 20 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[385]"></a>TIM_ForcedOC1Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[386]"></a>TIM_ForcedOC2Config</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[387]"></a>TIM_ForcedOC3Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[388]"></a>TIM_ForcedOC4Config</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[389]"></a>TIM_ARRPreloadConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[38a]"></a>TIM_SelectCOM</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[38b]"></a>TIM_SelectCCDMA</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[38c]"></a>TIM_CCPreloadControl</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[38d]"></a>TIM_OC1PreloadConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[38e]"></a>TIM_OC2PreloadConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[38f]"></a>TIM_OC3PreloadConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[390]"></a>TIM_OC4PreloadConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[391]"></a>TIM_OC1FastConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[392]"></a>TIM_OC2FastConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[393]"></a>TIM_OC3FastConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[394]"></a>TIM_OC4FastConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[395]"></a>TIM_ClearOC1Ref</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[396]"></a>TIM_ClearOC2Ref</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[397]"></a>TIM_ClearOC3Ref</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[398]"></a>TIM_ClearOC4Ref</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[399]"></a>TIM_OC1PolarityConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[39a]"></a>TIM_OC1NPolarityConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[39b]"></a>TIM_OC2PolarityConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[39c]"></a>TIM_OC2NPolarityConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[39d]"></a>TIM_OC3PolarityConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[39e]"></a>TIM_OC3NPolarityConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[39f]"></a>TIM_OC4PolarityConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[3a0]"></a>TIM_CCxCmd</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[3a1]"></a>TIM_CCxNCmd</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[3a2]"></a>TIM_SelectOCxM</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[3a3]"></a>TIM_UpdateDisableConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[3a4]"></a>TIM_UpdateRequestConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[3a5]"></a>TIM_SelectHallSensor</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[3a6]"></a>TIM_SelectOnePulseMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[3a7]"></a>TIM_SelectOutputTrigger</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[3a8]"></a>TIM_SelectSlaveMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[3a9]"></a>TIM_SelectMasterSlaveMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[3aa]"></a>TIM_SetCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[3ab]"></a>TIM_SetAutoreload</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[3ac]"></a>TIM_SetCompare1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[3ad]"></a>TIM_SetCompare2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[3ae]"></a>TIM_SetCompare3</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[3af]"></a>TIM_SetCompare4</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[3b0]"></a>TIM_SetClockDivision</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[3b1]"></a>TIM_GetCapture1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[3b2]"></a>TIM_GetCapture2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[3b3]"></a>TIM_GetCapture3</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[3b4]"></a>TIM_GetCapture4</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[3b5]"></a>TIM_GetCounter</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[3b6]"></a>TIM_GetPrescaler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[3b7]"></a>TIM_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[3b8]"></a>TIM_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text), UNUSED)

<P><STRONG><a name="[2cb]"></a>TIM_GetITStatus</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[2cc]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeInit
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[265]"></a>USART_DeInit</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, stm32f10x_usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[266]"></a>USART_Init</STRONG> (Thumb, 210 bytes, Stack size 56 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART1Init
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART3Init
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART2Init
</UL>

<P><STRONG><a name="[3b9]"></a>USART_StructInit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[3ba]"></a>USART_ClockInit</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[3bb]"></a>USART_ClockStructInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[26d]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART1Init
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART3Init
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART2Init
</UL>

<P><STRONG><a name="[26c]"></a>USART_ITConfig</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART1Init
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART3Init
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART2Init
</UL>

<P><STRONG><a name="[3bc]"></a>USART_DMACmd</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[3bd]"></a>USART_SetAddress</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[3be]"></a>USART_WakeUpConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[3bf]"></a>USART_ReceiverWakeUpCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[3c0]"></a>USART_LINBreakDetectLengthConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[3c1]"></a>USART_LINCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[194]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[26f]"></a>USART_ReceiveData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[3c2]"></a>USART_SendBreak</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[3c3]"></a>USART_SetGuardTime</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[3c4]"></a>USART_SetPrescaler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[3c5]"></a>USART_SmartCardCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[3c6]"></a>USART_SmartCardNACKCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[3c7]"></a>USART_HalfDuplexCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[3c8]"></a>USART_OverSampling8Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[3c9]"></a>USART_OneBitMethodCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[3ca]"></a>USART_IrDAConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[3cb]"></a>USART_IrDACmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[195]"></a>USART_GetFlagStatus</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[3cc]"></a>USART_ClearFlag</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text), UNUSED)

<P><STRONG><a name="[26e]"></a>USART_GetITStatus</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[270]"></a>USART_ClearITPendingBit</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, stm32f10x_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART2Init
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[1bf]"></a>kmy_USART1SendString</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, kmy_usart1drv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kmy_USART1SendString
</UL>
<BR>[Calls]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART1SendOne
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART1Init
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateParameter
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeChinese
</UL>

<P><STRONG><a name="[15a]"></a>kmy_USART1Init</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, kmy_usart1drv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = kmy_USART1Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART1SendString
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationInit
</UL>

<P><STRONG><a name="[1b6]"></a>kmy_USART1SendData</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, kmy_usart1drv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = kmy_USART1SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART1SendOne
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeChinese
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExternalSerail1_Printer
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExternalSerail1_GSMModule
</UL>

<P><STRONG><a name="[32]"></a>USART1_IRQHandler</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, kmy_usart1drv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USART1_IRQHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[1be]"></a>kmy_USART1ReceiveReset</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, kmy_usart1drv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateParameter
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeChinese
</UL>

<P><STRONG><a name="[1b5]"></a>kmy_USART1ReceiveData</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, kmy_usart1drv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = kmy_USART1ReceiveData
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeGetMilliseconds
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateParameter
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeChinese
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExternalSerail1_Printer
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExternalSerail1_GSMModule
</UL>

<P><STRONG><a name="[271]"></a>kmy_USART2Init</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, kmy_usart2drv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = kmy_USART2Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GprsInit
</UL>

<P><STRONG><a name="[ec]"></a>kmy_USART2SendString</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, kmy_usart2drv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kmy_USART2SendString
</UL>
<BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART2SendOne
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Thread
</UL>

<P><STRONG><a name="[ee]"></a>kmy_USART2SendData</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, kmy_usart2drv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = kmy_USART2SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART2SendOne
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gprs_SendDataLen
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExternalSerail1_GSMModule
</UL>

<P><STRONG><a name="[33]"></a>USART2_IRQHandler</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, kmy_usart2drv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USART2_IRQHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[f4]"></a>kmy_USART2ReceiveReset</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, kmy_usart2drv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kmy_USART2ReceiveReset
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sim900B_init
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_return
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_receive
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDatasFromSIM300_OKstr
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_return_3errs
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Thread
</UL>

<P><STRONG><a name="[f0]"></a>kmy_USART2ReceiveData</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, kmy_usart2drv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = kmy_USART2ReceiveData
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeGetMilliseconds
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sim900B_init
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDatasFromtty
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExternalSerail1_GSMModule
</UL>

<P><STRONG><a name="[22e]"></a>kmy_USART2CheckBuff</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, kmy_usart2drv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = kmy_USART2CheckBuff &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Thread
</UL>

<P><STRONG><a name="[22d]"></a>kmy_USART2ShowBuff</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, kmy_usart2drv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = kmy_USART2ShowBuff &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Thread
</UL>

<P><STRONG><a name="[22f]"></a>kmy_USART2ReadToEnd</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, kmy_usart2drv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kmy_USART2ReadToEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Thread
</UL>

<P><STRONG><a name="[1bc]"></a>kmy_USART3Init</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, kmy_usart3drv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = kmy_USART3Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterInit
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExternalSerail1_Printer
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrinterBaudRateSet
</UL>

<P><STRONG><a name="[274]"></a>kmy_USART3SendString</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, kmy_usart3drv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART3SendOne
</UL>

<P><STRONG><a name="[1ba]"></a>kmy_USART3SendData</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, kmy_usart3drv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = kmy_USART3SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART3SendOne
</UL>
<BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterString
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterSetcommand
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterBitmap
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExternalSerail1_Printer
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrinterBaudRateSet
</UL>

<P><STRONG><a name="[34]"></a>USART3_IRQHandler</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, kmy_usart3drv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USART3_IRQHandler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[276]"></a>kmy_USART3ReceiveReset</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, kmy_usart3drv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kmy_USART3ReceiveReset
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterInit
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterString
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterBitmap
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrinterBaudRateSet
</UL>

<P><STRONG><a name="[1bb]"></a>kmy_USART3ReceiveData</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, kmy_usart3drv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = kmy_USART3ReceiveData
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeGetMilliseconds
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterInit
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterString
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterBitmap
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExternalSerail1_Printer
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrinterBaudRateSet
</UL>

<P><STRONG><a name="[166]"></a>kmy_BatInit</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, kmy_battarydrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = kmy_BatInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationInit
</UL>

<P><STRONG><a name="[148]"></a>kmy_BatGetChargeStatus</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, kmy_battarydrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kmy_BatGetChargeStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeElectricity
</UL>

<P><STRONG><a name="[147]"></a>kmy_BatGetACStatus</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, kmy_battarydrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kmy_BatGetACStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeElectricity
</UL>

<P><STRONG><a name="[15e]"></a>kmy_BeepInit</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, kmy_beepdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = kmy_BeepInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationInit
</UL>

<P><STRONG><a name="[114]"></a>kmy_BeepOn</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, kmy_beepdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kmy_BeepOn
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepNormal
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepLound
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_LED
</UL>

<P><STRONG><a name="[116]"></a>kmy_BeepOff</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, kmy_beepdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kmy_BeepOff
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepNormal
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepLound
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_LED
</UL>

<P><STRONG><a name="[1c8]"></a>kmy_EepromReadByte</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, kmy_eepromdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = kmy_EepromReadByte &rArr; IIC_Read_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Send_Byte
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_NAck
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReprintLastOrder
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLocalSettings
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm_Orders
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromWriteByte
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreAnOrder
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadOutOrders
</UL>

<P><STRONG><a name="[b8]"></a>kmy_EepromWriteByte</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, kmy_eepromdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = kmy_EepromWriteByte &rArr; kmy_EepromReadByte &rArr; IIC_Read_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msleep
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromReadByte
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Send_Byte
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLocalSettings
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm_Orders
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitOrder
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_SetTotalFiles
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreAnOrder
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormatLocalSetting
</UL>

<P><STRONG><a name="[b3]"></a>kmy_EepromWritePage</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, kmy_eepromdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = kmy_EepromWritePage &rArr; IIC_Send_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msleep
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Send_Byte
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_Write
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_WritePage
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromWrite
</UL>

<P><STRONG><a name="[b1]"></a>kmy_EepromReadSequent</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, kmy_eepromdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = kmy_EepromReadSequent &rArr; IIC_Read_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Send_Byte
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_NAck
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Ack
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromCheckWhetherBlackChip
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLocalSettings
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_GetTotalFiles
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_readPage
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reprint_ConfirmOrder
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadOutOrders
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromWrite
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_Eepromtest
</UL>

<P><STRONG><a name="[1c7]"></a>kmy_EepromWrite</STRONG> (Thumb, 464 bytes, Stack size 104 bytes, kmy_eepromdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = kmy_EepromWrite &rArr; kmy_EepromWritePage &rArr; IIC_Send_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msleep
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromWritePage
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromReadSequent
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreLocalSettings
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreGlobalVariable
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLocalSettings
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreAnOrder
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_Eepromtest
</UL>

<P><STRONG><a name="[161]"></a>kmy_EepromInit</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, kmy_eepromdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = kmy_EepromInit &rArr; IIC_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationInit
</UL>

<P><STRONG><a name="[282]"></a>kmy_Eepromtest</STRONG> (Thumb, 54 bytes, Stack size 136 bytes, kmy_eepromdrv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msleep
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromReadSequent
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromWrite
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[163]"></a>kmy_EepromCheckWhetherBlackChip</STRONG> (Thumb, 216 bytes, Stack size 72 bytes, kmy_eepromdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = kmy_EepromCheckWhetherBlackChip &rArr; kmy_EepromReadSequent &rArr; IIC_Read_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromReadSequent
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationInit
</UL>

<P><STRONG><a name="[283]"></a>SPIGpioInit</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, kmy_flashdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SPIGpioInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashInit
</UL>

<P><STRONG><a name="[284]"></a>kmy_FlashSendByte</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, kmy_flashdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kmy_FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_ReceiveData
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashInit
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashReadBuffer
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashEraseSector
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashEraseBulk
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashWritePage
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashWaitForWriteEnd
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashWriteEnable
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashReadID
</UL>

<P><STRONG><a name="[160]"></a>kmy_FlashInit</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, kmy_flashdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = kmy_FlashInit &rArr; SPIGpioInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashSendByte
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIGpioInit
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationInit
</UL>

<P><STRONG><a name="[28a]"></a>kmy_FlashReadID</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, kmy_flashdrv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashSendByte
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>

<P><STRONG><a name="[28b]"></a>kmy_FlashWriteEnable</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, kmy_flashdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = kmy_FlashWriteEnable &rArr; kmy_FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashSendByte
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashEraseSector
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashEraseBulk
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashWritePage
</UL>

<P><STRONG><a name="[28c]"></a>kmy_FlashWaitForWriteEnd</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, kmy_flashdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = kmy_FlashWaitForWriteEnd &rArr; kmy_FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashSendByte
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashEraseSector
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashEraseBulk
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashWritePage
</UL>

<P><STRONG><a name="[1c4]"></a>kmy_FlashEraseSector</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, kmy_flashdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = kmy_FlashEraseSector &rArr; kmy_FlashWaitForWriteEnd &rArr; kmy_FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashWaitForWriteEnd
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashWriteEnable
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashSendByte
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EraseFlashPage
</UL>

<P><STRONG><a name="[1c0]"></a>kmy_FlashEraseBulk</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, kmy_flashdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = kmy_FlashEraseBulk &rArr; kmy_FlashWaitForWriteEnd &rArr; kmy_FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashWaitForWriteEnd
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashWriteEnable
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashSendByte
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeChinese
</UL>

<P><STRONG><a name="[28d]"></a>kmy_FlashWritePage</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, kmy_flashdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = kmy_FlashWritePage &rArr; kmy_FlashWaitForWriteEnd &rArr; kmy_FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashWaitForWriteEnd
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashWriteEnable
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashSendByte
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashWriteBuffer
</UL>

<P><STRONG><a name="[1c1]"></a>kmy_FlashWriteBuffer</STRONG> (Thumb, 290 bytes, Stack size 40 bytes, kmy_flashdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = kmy_FlashWriteBuffer &rArr; kmy_FlashWritePage &rArr; kmy_FlashWaitForWriteEnd &rArr; kmy_FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashWritePage
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteFlashPage
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeChinese
</UL>

<P><STRONG><a name="[1c2]"></a>kmy_FlashReadBuffer</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, kmy_flashdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = kmy_FlashReadBuffer &rArr; kmy_FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashSendByte
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFlashPage
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeChinese
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdGetChineseDot
</UL>

<P><STRONG><a name="[28e]"></a>kmy_GprsOnOff</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, kmy_gprsdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = kmy_GprsOnOff &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msleep
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GprsInit
</UL>

<P><STRONG><a name="[168]"></a>kmy_GprsInit</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, kmy_gprsdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = kmy_GprsInit &rArr; kmy_USART2Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GprsOnOff
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART2Init
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationInit
</UL>

<P><STRONG><a name="[28f]"></a>kmy_KeyUsedInterruptScanInit</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, kmy_keydrv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EXTILineConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EnterPowerDownMode
</UL>

<P><STRONG><a name="[15d]"></a>kmy_KeyInit</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, kmy_keydrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = kmy_KeyInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationInit
</UL>

<P><STRONG><a name="[293]"></a>SetRow</STRONG> (Thumb, 372 bytes, Stack size 16 bytes, kmy_keydrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SetRow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__KeyScan
</UL>

<P><STRONG><a name="[295]"></a>GetRow</STRONG> (Thumb, 1196 bytes, Stack size 8 bytes, kmy_keydrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetRow &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msleep
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__KeyScan
</UL>

<P><STRONG><a name="[296]"></a>ResetRow</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, kmy_keydrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ResetRow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EnterPowerDownMode
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyScan
</UL>

<P><STRONG><a name="[297]"></a>__KeyScan</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, kmy_keydrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __KeyScan &rArr; SetRow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msleep
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRow
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRow
</UL>
<BR>[Called By]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyScan
</UL>

<P><STRONG><a name="[298]"></a>KeyScan</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, kmy_keydrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = KeyScan &rArr; __KeyScan &rArr; SetRow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__KeyScan
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetRow
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
</UL>

<P><STRONG><a name="[db]"></a>kmy_GetKeyValue</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, kmy_keydrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = kmy_GetKeyValue &rArr; KeyScan &rArr; __KeyScan &rArr; SetRow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdBlackLightOff
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyScan
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_MenuHandler
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_DisplayBuff
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewMessageAct
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveMailBox
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuOperateSameFucHandler
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_AddIco
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_AddIco2
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_Orders
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_Language2
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HaveReceiveOrder
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DestroyFunc
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcStandbyKey
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPleaseCharge
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Waitkey_TillKeyPress
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitKeyRelease
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_apn
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive_KMY
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_receive
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDatasFromSIM300_OKstr
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_return_3errs
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormInput
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABCReadCode
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abcReadCode
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintOrder
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectItemOfMenus
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectItemOfMenus_SpeedAcceptKey
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptRejectOrders
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetString_123TimeInput
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetString_abcABC123PYWuBi
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PassWordInput_MiddledDisplay
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PassWordInput_XposStartDisplay
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_ABCReadCode
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_abcReadCode
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABCReadCode
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abcReadCode
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRecjectReasonAndInput
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateParameter
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateSet
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContrastSet
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_MagcardRead
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_ReceiveMessage
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeChinese
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExternalSerail1_Printer
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExternalSerail1_GSMModule
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_BatVoltage
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_LED
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_Key
</UL>

<P><STRONG><a name="[11a]"></a>kmy_AutoOffLcdLight</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, kmy_keydrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kmy_AutoOffLcdLight
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcStandbyKey
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventPost_nobeep
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Waitkey_TillKeyPress
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBLOverTime
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventPost
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetString_123TimeInput
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetString_abcABC123PYWuBi
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeChinese
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExternalSerail1_Printer
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExternalSerail1_GSMModule
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_LED
</UL>

<P><STRONG><a name="[11b]"></a>kmy_AutoPostKey</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, kmy_keydrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kmy_AutoPostKey
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HaveReceiveOrder
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcStandbyKey
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventPost_nobeep
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Waitkey_TillKeyPress
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAutoExitTime
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventPost
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetString_123TimeInput
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetString_abcABC123PYWuBi
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeChinese
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExternalSerail1_Printer
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExternalSerail1_GSMModule
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_LED
</UL>

<P><STRONG><a name="[118]"></a>kmy_PostKey</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kmy_keydrv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PostKey
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateSet
</UL>

<P><STRONG><a name="[29a]"></a>kmy_EnterPowerDownMode</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, kmy_keydrv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdBlackLightOff
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetRow
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_KeyUsedInterruptScanInit
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_EnterSTOPMode
</UL>

<P><STRONG><a name="[17]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, kmy_keydrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = EXTI0_IRQHandler &rArr; kmy_RCCInit &rArr; RCC_WaitForHSEStartUp &rArr; RCC_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_RCCInit
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[29d]"></a>LcdInitGPIO</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, kmy_lcddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LcdInitGPIO &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdInit
</UL>

<P><STRONG><a name="[29e]"></a>data_send</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, kmy_lcddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_command
</UL>

<P><STRONG><a name="[29f]"></a>write_command</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, kmy_lcddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_send
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdSetContrast
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdInitLCDC
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDSetXY
</UL>

<P><STRONG><a name="[2a0]"></a>write_data</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, kmy_lcddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = write_data &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_send
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccordingLcdRamDisplay
</UL>

<P><STRONG><a name="[2a1]"></a>LCDSetXY</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, kmy_lcddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_command
</UL>
<BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccordingLcdRamDisplay
</UL>

<P><STRONG><a name="[2a4]"></a>lcd_delay_us</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, kmy_lcddrv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdInitLCDC
</UL>

<P><STRONG><a name="[2a3]"></a>LcdInitLCDC</STRONG> (Thumb, 176 bytes, Stack size 8 bytes, kmy_lcddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LcdInitLCDC &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_delay_us
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_command
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdInit
</UL>

<P><STRONG><a name="[15c]"></a>kmy_LcdInit</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, kmy_lcddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = kmy_LcdInit &rArr; LcdInitLCDC &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdInitLCDC
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdInitGPIO
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationInit
</UL>

<P><STRONG><a name="[e5]"></a>kmy_LcdClear</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, kmy_lcddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = kmy_LcdClear &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccordingLcdRamDisplay
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abeyant
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM_PINset
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PassWordInput2
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewMessageAct
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainMenuScreen_Message
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveMailBox
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageDisplayContext
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPINAndPUK
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainMenuScreen_Message_VoiceMailbox
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainMenuScreen_Message_XiaoquGuanbo
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainMenuScreen_Message_ColorMessage
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainMenuScreen_Message_ShortMessage
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sim900B_init
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReprintLastOrder
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainMenuScreen_Settings
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HaveReceiveOrder
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm_Orders
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckOrderFailWarn
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DestroyFunc
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationInit
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeElectricity
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MainMenuScreen
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcStandbyKey
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPleaseCharge
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PassWordInput
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_apn
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PUK_Required
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormInput
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Latest_Orders
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptRejectMenu
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RejectOrder
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder_SpeedKey
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InputDeliveryTime
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadOutOrders
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintOrder
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectItemOfMenus
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectItemOfMenus_SpeedAcceptKey
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptRejectOrders
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PassWordInput_XposStartDisplay
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetString_abcABC123PYWuBi
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetString_abcABC123PYWuBi2
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetString_123TimeInput
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRecjectReasonAndInput
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayVersion
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdvancedSet
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitParameterSet
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoPrintTime
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoReboot
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestText_set
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDIdelIest_set
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintReceptCount_set
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintPageFooter_set
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintPageHeader_set
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTimeFormat_set
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintDateFormat_set
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintNewlineFlag_set
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptTimeMode_set
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepDuration_set
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSCloseTime_set
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSOpenTime_set
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckOrderInterval_set
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoginPassword_set
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoginUsername_set
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestaurantID_set
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RejectReason_set
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback_set
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OrderURL_set
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeURL_Set
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VersionURL_Set
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinSet
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalPasswordSet
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalIDSet
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DomainSet
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicSettings
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateParameter
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSomeMessage
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicApnSet
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpPsword
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreChuChangSet
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IpAddSet
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateSet
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicApnSetPassword
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicApnSetUsername
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicApnSetApn
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_KMY_LibVersion
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RandomNumber
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ChipId
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_IMEI
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCID
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LanguageSet
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOffScreenTime
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicKeyTone
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContrastSet
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PassWordInput_MiddledDisplay
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_ReceiveMessage
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftWare_Debug
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_Soft
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TemporaryNotProvideThisFunction
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_PrinterFont
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_DisplayFont
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_Printer
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EraseFlashPage
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EraseEepromPage0_30
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeChinese
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExternalSerail1_Printer
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExternalSerail1_GSMModule
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_BatVoltage
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_SendSMS
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_MakeCall
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_MagCard
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_LED
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_Key
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetString_abcABC123PYWuBi_Language2
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EnterPowerDownMode
</UL>

<P><STRONG><a name="[119]"></a>kmy_LcdBlackLightOn</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, kmy_lcddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kmy_LcdBlackLightOn
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationInit
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneMiliSecondCallThread
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcStandbyKey
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventPost_nobeep
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Waitkey_TillKeyPress
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventPost
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetString_123TimeInput
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetString_abcABC123PYWuBi
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_LED
</UL>

<P><STRONG><a name="[13c]"></a>kmy_LcdBlackLightOff</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, kmy_lcddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kmy_LcdBlackLightOff
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneMiliSecondCallThread
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EnterPowerDownMode
</UL>

<P><STRONG><a name="[2a5]"></a>ClearBuffAnyByte_bits</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, kmy_lcddrv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdDrawBitMap
</UL>

<P><STRONG><a name="[12d]"></a>kmy_LcdDrawBitMap</STRONG> (Thumb, 610 bytes, Stack size 88 bytes, kmy_lcddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearBuffAnyByte_bits
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;byteCombine
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccordingLcdRamDisplay
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationInit
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_pic
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steaddraw_pic_to_row_x
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdTextOut
</UL>

<P><STRONG><a name="[2a7]"></a>kmy_LcdGetChineseDot</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, kmy_lcddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = kmy_LcdGetChineseDot &rArr; kmy_FlashReadBuffer &rArr; kmy_FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashReadBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdTextOut
</UL>

<P><STRONG><a name="[dd]"></a>kmy_LcdTextOut</STRONG> (Thumb, 130 bytes, Stack size 56 bytes, kmy_lcddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdDrawBitMap
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdGetChineseDot
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChinesePositon
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcStandbyKey
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayHourMinuteSecond
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayYearMothDayWeek
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_to_row_x_fillSpace
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_to_row_fillSpace
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_to_row_x
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_to_row
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_length
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormInput
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Form_display
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABCReadCode
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abcReadCode
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContrastSet
</UL>

<P><STRONG><a name="[12a]"></a>kmy_LcdDrawLine</STRONG> (Thumb, 396 bytes, Stack size 80 bytes, kmy_lcddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccordingLcdRamDisplay
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdDrawRect
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line
</UL>

<P><STRONG><a name="[128]"></a>kmy_LcdDrawRect</STRONG> (Thumb, 478 bytes, Stack size 88 bytes, kmy_lcddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdDrawLine
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuffAnyByteBits_Change
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccordingLcdRamDisplay
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispHighLightRow
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispHighLightRow_to_x
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_rect
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_rect
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverse_area_to_row
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_area_to_row
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_area
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverse_area
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_Soft
</UL>

<P><STRONG><a name="[132]"></a>kmy_LcdSetContrast</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, kmy_lcddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = kmy_LcdSetContrast &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_command
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_contrast
</UL>

<P><STRONG><a name="[15b]"></a>kmy_LedInit</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, kmy_leddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = kmy_LedInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationInit
</UL>

<P><STRONG><a name="[139]"></a>kmy_LedDataLedOn</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, kmy_leddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kmy_LedDataLedOn
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneMiliSecondCallThread
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_LED
</UL>

<P><STRONG><a name="[13a]"></a>kmy_LedDataLedOff</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, kmy_leddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kmy_LedDataLedOff
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneMiliSecondCallThread
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Thread
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_LED
</UL>

<P><STRONG><a name="[1af]"></a>kmy_LedPaparLedOn</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, kmy_leddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kmy_LedPaparLedOn
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_LED
</UL>

<P><STRONG><a name="[1b0]"></a>kmy_LedPaparLedOff</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, kmy_leddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kmy_LedPaparLedOff
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_LED
</UL>

<P><STRONG><a name="[164]"></a>kmy_MagcardInit</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, kmy_magcarddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = kmy_MagcardInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationInit
</UL>

<P><STRONG><a name="[2c1]"></a>GetValidNumber</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, kmy_magcarddrv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_MagcardRead
</UL>

<P><STRONG><a name="[3cd]"></a>check5bits</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, kmy_magcarddrv.o(.text), UNUSED)

<P><STRONG><a name="[2ba]"></a>my_BitsExchange</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, kmy_magcarddrv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_BuffBitsExchange
</UL>

<P><STRONG><a name="[2b9]"></a>my_BuffBitsExchange</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, kmy_magcarddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = my_BuffBitsExchange
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_BitsExchange
</UL>
<BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UncompressVolidData
</UL>

<P><STRONG><a name="[2c0]"></a>my_BuffHeadTailExchange</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, kmy_magcarddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = my_BuffHeadTailExchange
</UL>
<BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UncompressVolidData
</UL>

<P><STRONG><a name="[2bc]"></a>my_BuffAllByteShiftBytes</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, kmy_magcarddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = my_BuffAllByteShiftBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UncompressVolidData
</UL>

<P><STRONG><a name="[2bd]"></a>my_BuffAllByteShiftBits</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, kmy_magcarddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = my_BuffAllByteShiftBits
</UL>
<BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UncompressVolidData
</UL>

<P><STRONG><a name="[2be]"></a>BuffRightShift</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, kmy_magcarddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = BuffRightShift
</UL>
<BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UncompressVolidData
</UL>

<P><STRONG><a name="[2bf]"></a>BuffAnybyte5BitsSaveAs_Byte</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, kmy_magcarddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BuffAnybyte5BitsSaveAs_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UncompressVolidData
</UL>

<P><STRONG><a name="[2bb]"></a>UncompressVolidData</STRONG> (Thumb, 398 bytes, Stack size 36 bytes, kmy_magcarddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = UncompressVolidData &rArr; BuffAnybyte5BitsSaveAs_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuffAnybyte5BitsSaveAs_Byte
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BuffRightShift
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_BuffAllByteShiftBits
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_BuffAllByteShiftBytes
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_BuffHeadTailExchange
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_BuffBitsExchange
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_MagcardRead
</UL>

<P><STRONG><a name="[1b1]"></a>kmy_MagcardRead</STRONG> (Thumb, 348 bytes, Stack size 64 bytes, kmy_magcarddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = kmy_MagcardRead &rArr; kmy_GetKeyValue &rArr; KeyScan &rArr; __KeyScan &rArr; SetRow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeGetRtcSeconds
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UncompressVolidData
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetValidNumber
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetValidData
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MgGetRCP3
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MgGetRDP3
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MgGetRCP2
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MgGetRDP2
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MgGetCls
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_MagCard
</UL>

<P><STRONG><a name="[1c6]"></a>kmy_PrinterSetcommand</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, kmy_printerdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = kmy_PrinterSetcommand &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msleep
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART3SendData
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterUseUsart3
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterInit
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintOrder
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_PrinterFont
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_Printer
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrinterBaudRateSet
</UL>

<P><STRONG><a name="[169]"></a>kmy_PrinterInit</STRONG> (Thumb, 186 bytes, Stack size 112 bytes, kmy_printerdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = kmy_PrinterInit &rArr; kmy_USART3Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msleep
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART3ReceiveData
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART3Init
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterSetcommand
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterUseUsart3
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART3ReceiveReset
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationInit
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExternalSerail1_Printer
</UL>

<P><STRONG><a name="[1bd]"></a>kmy_PrinterString</STRONG> (Thumb, 330 bytes, Stack size 48 bytes, kmy_printerdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = kmy_PrinterString &rArr; PrinterBaudRateSet &rArr; kmy_USART3Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msleep
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART3SendData
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART3ReceiveData
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrinterBaudRateSet
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterUseUsart3
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART3ReceiveReset
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintOrder
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_PrinterFont
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_Printer
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExternalSerail1_Printer
</UL>

<P><STRONG><a name="[1c5]"></a>kmy_PrinterBitmap</STRONG> (Thumb, 540 bytes, Stack size 96 bytes, kmy_printerdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = kmy_PrinterBitmap &rArr; PrinterBaudRateSet &rArr; kmy_USART3Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msleep
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeGetMilliseconds
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART3SendData
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART3ReceiveData
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrinterBaudRateSet
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterUseUsart3
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART3ReceiveReset
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintOrder
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_Printer
</UL>

<P><STRONG><a name="[159]"></a>kmy_RCCInit</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, kmy_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = kmy_RCCInit &rArr; RCC_WaitForHSEStartUp &rArr; RCC_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SetLatency
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSYSCLKSource
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SYSCLKConfig
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLCmd
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLLConfig
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStartUp
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSEConfig
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_DeInit
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationInit
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[29]"></a>TIM2_IRQHandler</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, kmy_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIM2_IRQHandler &rArr; OneMiliSecondCallThread &rArr; kmy_WatchDogResetCounter
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneMiliSecondCallThread
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>TIM3_IRQHandler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, kmy_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2124<LI>Call Chain = TIM3_IRQHandler &rArr; GPRS_Thread &rArr; StoreVersion &rArr; StorageVariable &rArr; EepromFile_Write &rArr; EepromFile_GetAIdlePage &rArr; EepromFile_SetPageArea &rArr; EepromFile_WritePage &rArr; kmy_EepromWritePage &rArr; IIC_Send_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Thread
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md_vl.o(RESET)
</UL>
<P><STRONG><a name="[15f]"></a>kmy_TimeInit</STRONG> (Thumb, 202 bytes, Stack size 16 bytes, kmy_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = kmy_TimeInit &rArr; time3_NVIC_Configuration &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForLastTask
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time3_NVIC_Configuration
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time2_NVIC_Configuration
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetPrescaler
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ITConfig
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RTCCLKCmd
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RTCCLKConfig
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSEConfig
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_BackupAccessCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationInit
</UL>

<P><STRONG><a name="[a9]"></a>kmy_TimeGetMilliseconds</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, kmy_time.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_GetCurrentMs
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msleep
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART2ReceiveData
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABCReadCode
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abcReadCode
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cursor_Init
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cursor_SetTwinkle_ms
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cursor_SetHigh
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cursor_SetWidth
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cursor_SetY
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cursor_SetX
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cursor_Twinkle
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART3ReceiveData
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART1ReceiveData
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterBitmap
</UL>

<P><STRONG><a name="[151]"></a>kmy_TimeGetRtcSeconds</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, kmy_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kmy_TimeGetRtcSeconds
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcStandbyKey
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_MiscGetRandomNumber
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoReboot
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_MagcardRead
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_BatVoltage
</UL>

<P><STRONG><a name="[2d6]"></a>k_mktime</STRONG> (Thumb, 112 bytes, Stack size 28 bytes, kmy_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = k_mktime
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeSetTime
</UL>

<P><STRONG><a name="[1d4]"></a>kmy_TimeSetTime</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, kmy_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = kmy_TimeSetTime &rArr; k_mktime
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_mktime
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateSet
</UL>

<P><STRONG><a name="[14e]"></a>kmy_TimeGetTime</STRONG> (Thumb, 148 bytes, Stack size 104 bytes, kmy_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = kmy_TimeGetTime &rArr; __offtime
</UL>
<BR>[Calls]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__offtime
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GPRSTimeSet
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayYearMothDayWeek
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RejectOrder
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder_SpeedKey
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintOrder
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateSet
</UL>

<P><STRONG><a name="[2d8]"></a>kmy_TimeDelayUs</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, kmy_time.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usleep
</UL>

<P><STRONG><a name="[101]"></a>sleep</STRONG> (Thumb, 42 bytes, Stack size 4 bytes, kmy_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeGetMilliseconds
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msleep
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PUK_Required
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_Connect
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usleep
</UL>

<P><STRONG><a name="[115]"></a>msleep</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, kmy_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeGetMilliseconds
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterInit
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HaveReceiveOrder
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationInit
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepNormal
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromWritePage
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromWriteByte
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintOrder
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepLound
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromWrite
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateSet
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterString
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterSetcommand
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterBitmap
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_Soft
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeChinese
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_LED
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrinterBaudRateSet
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__KeyScan
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRow
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GprsOnOff
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usleep
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_Eepromtest
</UL>

<P><STRONG><a name="[27b]"></a>usleep</STRONG> (Thumb, 88 bytes, Stack size 12 bytes, kmy_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msleep
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeDelayUs
</UL>
<BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Send_Byte
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_NAck
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Ack
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
</UL>

<P><STRONG><a name="[165]"></a>kmy_MiscInit</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, kmy_misc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = kmy_MiscInit &rArr; PWR_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationInit
</UL>

<P><STRONG><a name="[1cd]"></a>kmy_MiscGetChipUniqueId</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, kmy_misc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = kmy_MiscGetChipUniqueId &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ChipId
</UL>

<P><STRONG><a name="[1ce]"></a>kmy_MiscGetRandomNumber</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, kmy_misc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = kmy_MiscGetRandomNumber &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeGetRtcSeconds
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_RandomNumber
</UL>

<P><STRONG><a name="[1cf]"></a>kmy_MiscGetLibraryVersion</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, kmy_misc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kmy_MiscGetLibraryVersion
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_KMY_LibVersion
</UL>

<P><STRONG><a name="[16c]"></a>kmy_BackUpInit</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, kmy_tamperdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kmy_BackUpInit
</UL>
<BR>[Calls]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BKP_ClearFlag
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BKP_ITConfig
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BKP_TamperPinCmd
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BKP_TamperPinLevelConfig
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_BackupAccessCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationInit
</UL>

<P><STRONG><a name="[2df]"></a>kmy_CheckTamper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, kmy_tamperdrv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BKP_ReadBackupRegister
</UL>

<P><STRONG><a name="[16f]"></a>kmy_ClearTamper</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, kmy_tamperdrv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BKP_ClearFlag
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BKP_WriteBackupRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DestroyFunc
</UL>

<P><STRONG><a name="[167]"></a>kmy_WatchDogInit</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, kmy_watchdogdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = kmy_WatchDogInit &rArr; RCC_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ClearFlag
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Enable
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_SetReload
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_SetPrescaler
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_WriteAccessCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationInit
</UL>

<P><STRONG><a name="[13b]"></a>kmy_WatchDogResetCounter</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, kmy_watchdogdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kmy_WatchDogResetCounter
</UL>
<BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneMiliSecondCallThread
</UL>

<P><STRONG><a name="[2da]"></a>rand</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_MiscGetRandomNumber
</UL>

<P><STRONG><a name="[2d9]"></a>srand</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_MiscGetRandomNumber
</UL>

<P><STRONG><a name="[d1]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_length
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_strcat_insert
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_read
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srf_strcat_insert
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_MiscGetRandomNumber
</UL>

<P><STRONG><a name="[d9]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveMailBox
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMessage
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayYearMothDayWeek
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaySignalQuality
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Form_ClearDisplayErea
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABCReadCode
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abcReadCode
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_ABCReadCode
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_abcReadCode
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABCReadCode
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abcReadCode
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateSet
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_DisplayFont
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_Eepromtest
</UL>

<P><STRONG><a name="[3ce]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[1fa]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PassWordInput_MiddledDisplay
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PassWordInput_XposStartDisplay
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[3cf]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[3d0]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[c8]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART2ReceiveReset
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_DeleteEfpAttibute
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Thread
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreVersion
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RejectOrder
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder_SpeedKey
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetOneOrder
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_gOrderBuf
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetString_123TimeInput
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetString_abcABC123PYWuBi
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PassWordInput_MiddledDisplay
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PassWordInput_XposStartDisplay
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRecjectReasonAndInput
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalPasswordSet
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalIDSet
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DomainSet
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreParam
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpPsword
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IpAddSet
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART3ReceiveReset
</UL>

<P><STRONG><a name="[fb]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreLocalSettings
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewMessageAct
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMessage_state_number_datetime
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UCS2to8bit
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPINAndPUK
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMessage
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterInit
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sim900B_init
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreGlobalVariable
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreConfigFile
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLocalSettings
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm_Orders
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoPrintOrder
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayYearMothDayWeek
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_apn
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_Connect
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Thread
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreVersion
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_GetTcpConnectATString
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Latest_Orders
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RejectOrder
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder_SpeedKey
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reprint_ConfirmOrder
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadOutOrders
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayOrder
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintOrder
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectItemOfMenus
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectItemOfMenus_SpeedAcceptKey
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetOneOrder
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHttpPOSTString
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMessage
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromWrite
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRecjectReasonAndInput
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoPrintTime
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateParameter
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StorageVariable
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateSet
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCID
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContrastSet
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterBitmap
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeChinese
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExternalSerail1_Printer
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_MagCard
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrinterBaudRateSet
</UL>

<P><STRONG><a name="[3d1]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2e8]"></a>_memset$wrapper</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[fc]"></a>strcat</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, strcat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreLocalSettings
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageDisplayContext
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Message_delete_all
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Message_delete_this
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetOneScreenMessageNumber
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMessageNode
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPINAndPUK
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMessage
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreConfigFile
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLocalSettings
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_apn
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PUK_Required
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_Connect
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Thread
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_GetTcpConnectATString
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadOutOrders
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintOrder
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectItemOfMenus
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectItemOfMenus_SpeedAcceptKey
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeperateIpAndPort
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetOneOrder
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHttpPOSTString
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHttpCallbackString
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHttpGETString
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HttpGET_VersionString
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_string_replace2
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMessage
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRecjectReasonAndInput
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreParam
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StorageVariable
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LanguageSet
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOffScreenTime
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicKeyTone
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContrastSet
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMessage_TextMode
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_ReceiveMessage
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_MakeCall
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_MagCard
</UL>

<P><STRONG><a name="[f2]"></a>strstr</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, strstr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveMessageDecode
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckMessageComing_method1
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewMessageAct
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageDisplayContext
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMessage_state_number_datetime
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMessageTotalAndCapacity
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPINAndPUK
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterInit
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GPRSTimeSet
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sim900B_init
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreGlobalVariable
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLocalSettings
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoPrintOrder
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeCSPN
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeElectricity
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeSignalQuality
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNetName
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetVersion
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPINPUKTimes
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive_KMY
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_return_NotResposeKey
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_return
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_receive
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDatasFromSIM300_OKstr
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendAtCommand_UntillSuccess
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_Connect
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_return_3errs
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART2CheckBuff
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Thread
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreVersion
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_GetTcpConnectATString
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Latest_Orders
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RejectOrder
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder_SpeedKey
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectOrder
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteOneOrder
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectOrderID
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintOrder
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeperateIpAndPort
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetOneOrder
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCountOfOrders
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHttpCallbackString
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHttpGETString
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HttpGET_VersionString
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_string_replace2
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveMessageDecode_onlyPhoneNumber
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMessage
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRejectReason
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTimeFormat
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateParameter
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterString
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_ReceiveMessage
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_BatVoltage
</UL>

<P><STRONG><a name="[140]"></a>strncpy</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, strncpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetVersion
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreVersion
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_GetTcpConnectATString
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RejectOrder
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectOrderID
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRejectReason
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoPrintTime
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreParam
</UL>

<P><STRONG><a name="[ce]"></a>strlen</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreLocalSettings
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM_PINset
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMessage_state_number_datetime
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UCS2to8bit
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPINAndPUK
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreConfigFile
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLocalSettings
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PUK_Required
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_Connect
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_strcat_insert
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormInput
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Form_text_out
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABCReadCode
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abcReadCode
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_CheckFileExist
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_Open
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_Create
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Thread
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreVersion
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_GetTcpConnectATString
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RejectOrder
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder_SpeedKey
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadOutOrders
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintOrder
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCarriage
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeperateIpAndPort
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetOneOrder
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHttpPOSTString
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHttpCallbackString
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHttpGETString
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HttpGET_VersionString
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_string_replace2
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMessage
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRejectReason
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetString_123TimeInput
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetString_abcABC123PYWuBi
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PassWordInput_MiddledDisplay
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PassWordInput_XposStartDisplay
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_ABCReadCode
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_abcReadCode
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABCReadCode
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abcReadCode
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srf_strcat_insert
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRecjectReasonAndInput
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTimeFormat
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalPasswordSet
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalIDSet
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StorageVariable
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IpAddSet
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayCID
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterString
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_MagCard
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_Eepromtest
</UL>

<P><STRONG><a name="[bb]"></a>strcmp</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreGlobalVariable
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DestroyFunc
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PUK_Required
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_CheckWhetherHaveThisFile
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetOneOrder
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdvancedSet
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSCloseTime_set
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSOpenTime_set
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpPsword
</UL>

<P><STRONG><a name="[fd]"></a>strncat</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, strncat.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strncat
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_Connect
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreVersion
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_GetTcpConnectATString
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHttpCallbackString
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHttpGETString
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HttpGET_VersionString
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_string_replace2
</UL>

<P><STRONG><a name="[b5]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM_PINset
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveMessageDecode
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MessageDisplayContext
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMessageNode
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMessage_state_number_datetime
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UCS2to8bit
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMessageTotalAndCapacity
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPINAndPUK
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMessage
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreConfigFile
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLocalSettings
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoPrintOrder
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeCSPN
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeElectricity
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeSignalQuality
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCCID
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIMEI
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PUK_Required
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPINPUKTimes
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_GetFileName
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_Create
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_GetFileStruct
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Thread
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreVersion
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gprs_GetTcpConnectATString
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RejectOrder
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadOutOrders
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayOrder
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintOrder
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectItemOfMenus
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectItemOfMenus_SpeedAcceptKey
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeperateIpAndPort
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHttpPOSTString
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHttpCallbackString
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHttpGETString
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HttpGET_VersionString
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMessage
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PDU7bitEncode
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_MiscGetLibraryVersion
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayVersion
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoPrintTime
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoReboot
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintPageFooter_set
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintPageHeader_set
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptTimeMode_set
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepDuration_set
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSCloseTime_set
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRSOpenTime_set
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckOrderInterval_set
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoginPassword_set
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoginUsername_set
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestaurantID_set
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback_set
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OrderURL_set
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeURL_Set
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VersionURL_Set
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PinSet
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalPasswordSet
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TerminalIDSet
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DomainSet
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreParam
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpPsword
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IpAddSet
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicApnSetPassword
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicApnSetUsername
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicApnSetApn
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOffScreenTime
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContrastSet
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMessage_TextMode
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_ReceiveMessage
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FromInput_Test
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_BatVoltage
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_MakeCall
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_MagCard
</UL>

<P><STRONG><a name="[10a]"></a>atoi</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, atoi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckMessageComing_method1
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewMessageAct
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMessageTotalAndCapacity
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GPRSTimeSet
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HaveReceiveOrder
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationInit
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeElectricity
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeSignalQuality
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive_KMY
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Thread
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeperateIpAndPort
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTimeFormat
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoPrintTime
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOffScreenTime
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContrastSet
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_ReceiveMessage
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_BatVoltage
</UL>

<P><STRONG><a name="[1a2]"></a>__aeabi_fadd</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_AsciiToFloat
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
</UL>

<P><STRONG><a name="[2ed]"></a>__aeabi_fsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[2ee]"></a>__aeabi_frsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[1a0]"></a>__aeabi_fmul</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, fmul.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_round
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_AsciiToFloat
</UL>

<P><STRONG><a name="[1aa]"></a>__aeabi_fdiv</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, fdiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_round
</UL>

<P><STRONG><a name="[2ef]"></a>__aeabi_dadd</STRONG> (Thumb, 318 bytes, Stack size 48 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[2f4]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[2f5]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[2f6]"></a>__aeabi_dmul</STRONG> (Thumb, 226 bytes, Stack size 48 bytes, dmul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[2f7]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[1a1]"></a>__aeabi_i2f</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fflti.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_round
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_AsciiToFloat
</UL>

<P><STRONG><a name="[1ad]"></a>__aeabi_ui2f</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ffltui.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_FloatConvertToInt
</UL>

<P><STRONG><a name="[1a7]"></a>__aeabi_f2iz</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ffixi.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_round
</UL>

<P><STRONG><a name="[1ac]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_FloatConvertToInt
</UL>

<P><STRONG><a name="[1ae]"></a>__aeabi_cfcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cfcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_FloatConvertToInt
</UL>

<P><STRONG><a name="[1a9]"></a>__aeabi_cfcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_round
</UL>

<P><STRONG><a name="[1a8]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_round
</UL>

<P><STRONG><a name="[3d2]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[306]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[2f8]"></a>__aeabi_uldivmod</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[2f0]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[3d3]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[2f1]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[3d4]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[2ea]"></a>strtol</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, strtol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[3d5]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[2ec]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[2eb]"></a>_float_epilogue</STRONG> (Thumb, 94 bytes, Stack size 4 bytes, fepilogue.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[2f3]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[2f2]"></a>_double_epilogue</STRONG> (Thumb, 168 bytes, Stack size 48 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[2fc]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[303]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[a5]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[3d6]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[2f9]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[3d7]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[2fa]"></a>__rt_ctype_table</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ctype_o.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[2fb]"></a>_strtoul</STRONG> (Thumb, 156 bytes, Stack size 40 bytes, _strtoul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[2fe]"></a>_chval</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
</UL>

<P><STRONG><a name="[3d8]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[3d9]"></a>__decompress1</STRONG> (Thumb, 92 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[2ff]"></a>__0printf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[3da]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[bd]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_HexPrintf_buff
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucs2str_to_gb2312str
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckMessageComing_method1
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveMailBox
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMessage_state_number_datetime
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPINAndPUK
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_Orders
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GPRSTimeSet
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sim900B_init
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreGlobalVariable
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreConfigFile
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLocalSettings
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm_Orders
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoPrintOrder
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DestroyFunc
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationInit
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeElectricity
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_charhexprintf_buff
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIMEI
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_receive_KMY
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTotallen
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_send
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_Connect
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_return_NotResposeKey
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_return
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_return_3errs
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitOrder
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_ReadData
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_WriteData
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_DeleteEfpAttibute
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_SetPageArea
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_SaveEfpAttibute
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART2ShowBuff
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Thread
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreVersion
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Latest_Orders
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RejectOrder
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AcceptOrder_SpeedKey
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreAnOrder
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reprint_ConfirmOrder
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadOutOrders
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteOneOrder
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayOrder
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintOrder
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectItemOfMenus
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectItemOfMenus_SpeedAcceptKey
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucs2_to_gb2312
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoPrintTime
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StorageVariable
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterString
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterBitmap
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMessage_TextMode
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_ReceiveMessage
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FromInput_Test
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadEepromPage
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_Printer
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_ReadEepromPage0_30
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFlashPage
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExternalSerail1_Printer
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExternalSerail1_GSMModule
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_BatVoltage
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrinterBaudRateSet
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[3db]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[3dc]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[301]"></a>__0sprintf</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[3dd]"></a>__1sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[14f]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveMailBox
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayHourMinuteSecond
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayYearMothDayWeek
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Thread
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RejectOrder
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadOutOrders
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintOrder
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectItemOfMenus
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSelectItemOfMenus_SpeedAcceptKey
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SeperateIpAndPort
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHttpPOSTString
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMessage
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_MiscGetRandomNumber
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_MiscGetChipUniqueId
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeDateSet
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ContrastSet
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SelfTest_BatVoltage
</UL>

<P><STRONG><a name="[3de]"></a>__c89sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[3df]"></a>sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[2e9]"></a>__aeabi_errno_addr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr))
<BR><BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
</UL>

<P><STRONG><a name="[3e0]"></a>__rt_errno_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr), UNUSED)

<P><STRONG><a name="[3e1]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[3e2]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[3e3]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[198]"></a>putc</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, putc.o(i.putc), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_PrintfBinary
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[bc]"></a>EepromFile_SaveEfpAttibute</STRONG> (Thumb, 194 bytes, Stack size 88 bytes, eepromfilesystem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = EepromFile_SaveEfpAttibute &rArr; EepromFile_CheckWhetherHaveThisFile &rArr; EepromFile_readPage &rArr; kmy_EepromReadSequent &rArr; IIC_Read_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_CheckWhetherHaveThisFile
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_WritePage
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_readPage
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_Write
</UL>

<P><STRONG><a name="[be]"></a>EepromFile_TotalFileAdd1</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, eepromfilesystem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = EepromFile_TotalFileAdd1 &rArr; EepromFile_SetTotalFiles &rArr; kmy_EepromWriteByte &rArr; kmy_EepromReadByte &rArr; IIC_Read_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_SetTotalFiles
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_GetTotalFiles
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_Create
</UL>

<P><STRONG><a name="[c0]"></a>EepromFile_GetPhysicalPage</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, eepromfilesystem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = EepromFile_GetPhysicalPage &rArr; EepromFile_GetPageRelationAreaTwoByte &rArr; EepromFile_readPage &rArr; kmy_EepromReadSequent &rArr; IIC_Read_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_GetPageRelationAreaTwoByte
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_readFileCurrentPage
</UL>

<P><STRONG><a name="[c1]"></a>EepromFile_readFileCurrentPage</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, eepromfilesystem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = EepromFile_readFileCurrentPage &rArr; EepromFile_GetPhysicalPage &rArr; EepromFile_GetPageRelationAreaTwoByte &rArr; EepromFile_readPage &rArr; kmy_EepromReadSequent &rArr; IIC_Read_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_readPage
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_GetPhysicalPage
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_read
</UL>

<P><STRONG><a name="[f9]"></a>send_at_cmd_and_return_3errs</STRONG> (Thumb, 212 bytes, Stack size 264 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = send_at_cmd_and_return_3errs &rArr; kmy_GetKeyValue &rArr; KeyScan &rArr; __KeyScan &rArr; SetRow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART2ReceiveReset
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAutoExitTime
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDatasFromtty
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tcp_Connect
</UL>

<P><STRONG><a name="[fa]"></a>_tcp_Connect</STRONG> (Thumb, 396 bytes, Stack size 216 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1344<LI>Call Chain = _tcp_Connect &rArr; send_at_cmd_and_return &rArr; ReadDatasFromtty &rArr; kmy_USART2ReceiveData
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_return
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_return_3errs
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncat
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tcp_Connect
</UL>

<P><STRONG><a name="[13f]"></a>GetVersion</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GetVersion &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcStandbyKey
</UL>

<P><STRONG><a name="[141]"></a>DisplaySignalQuality</STRONG> (Thumb, 64 bytes, Stack size 160 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = DisplaySignalQuality &rArr; draw_pic &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_pic
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeSignalQuality
</UL>

<P><STRONG><a name="[144]"></a>DisplayElectricity</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = DisplayElectricity &rArr; draw_pic &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_pic
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeElectricity
</UL>

<P><STRONG><a name="[145]"></a>DisplayPleaseCharge</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = DisplayPleaseCharge &rArr; DrawTitle_to_row_Language2 &rArr; DrawTitle_to_row &rArr; text_out_to_row_x &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeElectricity
</UL>

<P><STRONG><a name="[149]"></a>GetNetName</STRONG> (Thumb, 332 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GetNetName &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeCSPN
</UL>

<P><STRONG><a name="[14c]"></a>DisplayChargeElectricity</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = DisplayChargeElectricity &rArr; draw_pic &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_pic
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcStandbyKey
</UL>

<P><STRONG><a name="[14d]"></a>DisplayYearMothDayWeek</STRONG> (Thumb, 106 bytes, Stack size 96 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = DisplayYearMothDayWeek &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeGetTime
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_pic
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdTextOut
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcStandbyKey
</UL>

<P><STRONG><a name="[150]"></a>DisplayHourMinuteSecond</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = DisplayHourMinuteSecond &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdTextOut
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcStandbyKey
</UL>

<P><STRONG><a name="[3b]"></a>ProcStandbyKey</STRONG> (Thumb, 410 bytes, Stack size 40 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 7968<LI>Call Chain = ProcStandbyKey &rArr; AutoPrintOrder &rArr; AcceptOrder &rArr; tcp_Connect &rArr; _tcp_Connect &rArr; send_at_cmd_and_return &rArr; ReadDatasFromtty &rArr; kmy_USART2ReceiveData
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeGetRtcSeconds
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GPRSTimeSet
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HaveReceiveOrder
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckOrderFailWarn
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoPrintOrder
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeCSPN
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeElectricity
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpgradeSignalQuality
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StandbyResponseUserMenu
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayHourMinuteSecond
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayYearMothDayWeek
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayChargeElectricity
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetVersion
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_pic
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_to_row_Language2
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdBlackLightOn
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_AutoPostKey
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_AutoOffLcdLight
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepNormal
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdTextOut
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[156]"></a>StandbyResponseUserMenu</STRONG> (Thumb, 374 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 7444<LI>Call Chain = StandbyResponseUserMenu &rArr; Confirm_Orders &rArr; Reprint_ConfirmOrder &rArr; GetOneOrder &rArr; my_string_replace2 &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReprintLastOrder
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Confirm_Orders
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcStandbyKey
</UL>

<P><STRONG><a name="[137]"></a>NVIC_SystemReset</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ApplicationInit
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemReset
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcStandbyKey
</UL>

<P><STRONG><a name="[45]"></a>WriteMessage</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = WriteMessage &rArr; abeyant &rArr; DrawTitle_to_row_Language2 &rArr; DrawTitle_to_row &rArr; text_out_to_row_x &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abeyant
</UL>
<BR>[Address Reference Count : 1]<UL><LI> message.o(.constdata)
</UL>
<P><STRONG><a name="[179]"></a>DisplayMessage</STRONG> (Thumb, 248 bytes, Stack size 3168 bytes, message.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_DisplayBuff
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveMessageDecode
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_itoa
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadDatasFromSIM300_OKstr
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewMessageAct
</UL>

<P><STRONG><a name="[47]"></a>MobileQQ</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = MobileQQ &rArr; abeyant &rArr; DrawTitle_to_row_Language2 &rArr; DrawTitle_to_row &rArr; text_out_to_row_x &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abeyant
</UL>
<BR>[Address Reference Count : 1]<UL><LI> message.o(.constdata)
</UL>
<P><STRONG><a name="[48]"></a>SendedMessage</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = SendedMessage &rArr; abeyant &rArr; DrawTitle_to_row_Language2 &rArr; DrawTitle_to_row &rArr; text_out_to_row_x &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abeyant
</UL>
<BR>[Address Reference Count : 1]<UL><LI> message.o(.constdata)
</UL>
<P><STRONG><a name="[49]"></a>SendedBox</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = SendedBox &rArr; abeyant &rArr; DrawTitle_to_row_Language2 &rArr; DrawTitle_to_row &rArr; text_out_to_row_x &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abeyant
</UL>
<BR>[Address Reference Count : 1]<UL><LI> message.o(.constdata)
</UL>
<P><STRONG><a name="[4a]"></a>DraftBox</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = DraftBox &rArr; abeyant &rArr; DrawTitle_to_row_Language2 &rArr; DrawTitle_to_row &rArr; text_out_to_row_x &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abeyant
</UL>
<BR>[Address Reference Count : 1]<UL><LI> message.o(.constdata)
</UL>
<P><STRONG><a name="[4b]"></a>MessageSet</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = MessageSet &rArr; abeyant &rArr; DrawTitle_to_row_Language2 &rArr; DrawTitle_to_row &rArr; text_out_to_row_x &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abeyant
</UL>
<BR>[Address Reference Count : 1]<UL><LI> message.o(.constdata)
</UL>
<P><STRONG><a name="[4c]"></a>MessageCapacity</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = MessageCapacity &rArr; abeyant &rArr; DrawTitle_to_row_Language2 &rArr; DrawTitle_to_row &rArr; text_out_to_row_x &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abeyant
</UL>
<BR>[Address Reference Count : 1]<UL><LI> message.o(.constdata)
</UL>
<P><STRONG><a name="[4d]"></a>ColorWriteMessage</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = ColorWriteMessage &rArr; abeyant &rArr; DrawTitle_to_row_Language2 &rArr; DrawTitle_to_row &rArr; text_out_to_row_x &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abeyant
</UL>
<BR>[Address Reference Count : 1]<UL><LI> message.o(.constdata)
</UL>
<P><STRONG><a name="[4e]"></a>ColorReceiveMailBox</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = ColorReceiveMailBox &rArr; abeyant &rArr; DrawTitle_to_row_Language2 &rArr; DrawTitle_to_row &rArr; text_out_to_row_x &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abeyant
</UL>
<BR>[Address Reference Count : 1]<UL><LI> message.o(.constdata)
</UL>
<P><STRONG><a name="[4f]"></a>ColorSendedMessage</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = ColorSendedMessage &rArr; abeyant &rArr; DrawTitle_to_row_Language2 &rArr; DrawTitle_to_row &rArr; text_out_to_row_x &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abeyant
</UL>
<BR>[Address Reference Count : 1]<UL><LI> message.o(.constdata)
</UL>
<P><STRONG><a name="[50]"></a>ColorSendedBox</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = ColorSendedBox &rArr; abeyant &rArr; DrawTitle_to_row_Language2 &rArr; DrawTitle_to_row &rArr; text_out_to_row_x &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abeyant
</UL>
<BR>[Address Reference Count : 1]<UL><LI> message.o(.constdata)
</UL>
<P><STRONG><a name="[51]"></a>ColorDraftBox</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = ColorDraftBox &rArr; abeyant &rArr; DrawTitle_to_row_Language2 &rArr; DrawTitle_to_row &rArr; text_out_to_row_x &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abeyant
</UL>
<BR>[Address Reference Count : 1]<UL><LI> message.o(.constdata)
</UL>
<P><STRONG><a name="[52]"></a>ColorMessageSet</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = ColorMessageSet &rArr; abeyant &rArr; DrawTitle_to_row_Language2 &rArr; DrawTitle_to_row &rArr; text_out_to_row_x &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abeyant
</UL>
<BR>[Address Reference Count : 1]<UL><LI> message.o(.constdata)
</UL>
<P><STRONG><a name="[53]"></a>ColorMessageCapacity</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = ColorMessageCapacity &rArr; abeyant &rArr; DrawTitle_to_row_Language2 &rArr; DrawTitle_to_row &rArr; text_out_to_row_x &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abeyant
</UL>
<BR>[Address Reference Count : 1]<UL><LI> message.o(.constdata)
</UL>
<P><STRONG><a name="[54]"></a>BroadCastRead</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = BroadCastRead &rArr; abeyant &rArr; DrawTitle_to_row_Language2 &rArr; DrawTitle_to_row &rArr; text_out_to_row_x &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abeyant
</UL>
<BR>[Address Reference Count : 1]<UL><LI> message.o(.constdata)
</UL>
<P><STRONG><a name="[55]"></a>BroadCastStart</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = BroadCastStart &rArr; abeyant &rArr; DrawTitle_to_row_Language2 &rArr; DrawTitle_to_row &rArr; text_out_to_row_x &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abeyant
</UL>
<BR>[Address Reference Count : 1]<UL><LI> message.o(.constdata)
</UL>
<P><STRONG><a name="[56]"></a>BroadCastChannelSet</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = BroadCastChannelSet &rArr; abeyant &rArr; DrawTitle_to_row_Language2 &rArr; DrawTitle_to_row &rArr; text_out_to_row_x &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abeyant
</UL>
<BR>[Address Reference Count : 1]<UL><LI> message.o(.constdata)
</UL>
<P><STRONG><a name="[57]"></a>BroadCastLanguageSelect</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = BroadCastLanguageSelect &rArr; abeyant &rArr; DrawTitle_to_row_Language2 &rArr; DrawTitle_to_row &rArr; text_out_to_row_x &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abeyant
</UL>
<BR>[Address Reference Count : 1]<UL><LI> message.o(.constdata)
</UL>
<P><STRONG><a name="[58]"></a>VoiceBoxReceive</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = VoiceBoxReceive &rArr; abeyant &rArr; DrawTitle_to_row_Language2 &rArr; DrawTitle_to_row &rArr; text_out_to_row_x &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abeyant
</UL>
<BR>[Address Reference Count : 1]<UL><LI> message.o(.constdata)
</UL>
<P><STRONG><a name="[59]"></a>VoiceBoxNumberSet</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = VoiceBoxNumberSet &rArr; abeyant &rArr; DrawTitle_to_row_Language2 &rArr; DrawTitle_to_row &rArr; text_out_to_row_x &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abeyant
</UL>
<BR>[Address Reference Count : 1]<UL><LI> message.o(.constdata)
</UL>
<P><STRONG><a name="[5a]"></a>MainMenuScreen_Message_ShortMessage</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = MainMenuScreen_Message_ShortMessage &rArr; MenuHandler_Language2 &rArr; DisplayMenuPercent &rArr; fill_rect &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> message.o(.constdata)
</UL>
<P><STRONG><a name="[5b]"></a>MainMenuScreen_Message_ColorMessage</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = MainMenuScreen_Message_ColorMessage &rArr; MenuHandler_Language2 &rArr; DisplayMenuPercent &rArr; fill_rect &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> message.o(.constdata)
</UL>
<P><STRONG><a name="[5c]"></a>MainMenuScreen_Message_XiaoquGuanbo</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = MainMenuScreen_Message_XiaoquGuanbo &rArr; MenuHandler_Language2 &rArr; DisplayMenuPercent &rArr; fill_rect &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> message.o(.constdata)
</UL>
<P><STRONG><a name="[5d]"></a>MainMenuScreen_Message_VoiceMailbox</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = MainMenuScreen_Message_VoiceMailbox &rArr; MenuHandler_Language2 &rArr; DisplayMenuPercent &rArr; fill_rect &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> message.o(.constdata)
</UL>
<P><STRONG><a name="[191]"></a>CheckPINAndPUK</STRONG> (Thumb, 456 bytes, Stack size 1040 bytes, message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2168<LI>Call Chain = CheckPINAndPUK &rArr; send_at_cmd_and_return &rArr; ReadDatasFromtty &rArr; kmy_USART2ReceiveData
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreLocalSettings
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SIM_PINset
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PassWordInput2
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_return
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_receive
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sim900B_init
</UL>

<P><STRONG><a name="[19a]"></a>my_movePointToNextLine</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, my_library.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_movePointToPrevLine
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_DisplayBuff
</UL>

<P><STRONG><a name="[199]"></a>my_movePointToPrevLine</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, my_library.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = my_movePointToPrevLine
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_movePointToNextLine
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_DisplayBuff
</UL>

<P><STRONG><a name="[6a]"></a>SelfTest_Key</STRONG> (Thumb, 378 bytes, Stack size 16 bytes, selftest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = SelfTest_Key &rArr; DrawTitle_to_row_Language2 &rArr; DrawTitle_to_row &rArr; text_out_to_row_x &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_to_row_Language2
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventPost
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selftest.o(.constdata)
</UL>
<P><STRONG><a name="[6b]"></a>SelfTest_LED</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, selftest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = SelfTest_LED &rArr; DrawTitle_to_row_Language2 &rArr; DrawTitle_to_row &rArr; text_out_to_row_x &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LedDataLedOn
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LedDataLedOff
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_to_row_Language2
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msleep
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdBlackLightOn
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_BeepOn
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_BeepOff
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_AutoPostKey
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_AutoOffLcdLight
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LedPaparLedOn
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LedPaparLedOff
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selftest.o(.constdata)
</UL>
<P><STRONG><a name="[6c]"></a>SelfTest_MagCard</STRONG> (Thumb, 172 bytes, Stack size 568 bytes, selftest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 888<LI>Call Chain = SelfTest_MagCard &rArr; my_DisplayBuff &rArr; _my_DisplayBuff &rArr; text_out_to_row_fillSpace &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_DisplayBuff
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_charhexprintf_buff
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_MagcardRead
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selftest.o(.constdata)
</UL>
<P><STRONG><a name="[6f]"></a>SelfTest_MakeCall</STRONG> (Thumb, 944 bytes, Stack size 88 bytes, selftest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = SelfTest_MakeCall &rArr; PassWordInput_MiddledDisplay &rArr; _PassWordInput_MiddledDisplay &rArr; clear_area_to_row &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_area_to_row
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendAtCommand_UntillSuccess
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PassWordInput_MiddledDisplay
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selftest.o(.constdata)
</UL>
<P><STRONG><a name="[70]"></a>SelfTest_SendSMS</STRONG> (Thumb, 162 bytes, Stack size 168 bytes, selftest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 720<LI>Call Chain = SelfTest_SendSMS &rArr; GetString_abcABC123PYWuBi_Language2 &rArr; _GetString_abcABC123PYWuBi &rArr; ABCReadCode &rArr; my_AccordPointInsertEdit &rArr; text_out_to_row_Language2 &rArr; text_out_to_row &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMessage_TextMode
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PassWordInput_MiddledDisplay
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetString_abcABC123PYWuBi_Language2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selftest.o(.constdata)
</UL>
<P><STRONG><a name="[6d]"></a>SelfTest_BatVoltage</STRONG> (Thumb, 160 bytes, Stack size 128 bytes, selftest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = SelfTest_BatVoltage &rArr; DrawTitle_to_row_Language2 &rArr; DrawTitle_to_row &rArr; text_out_to_row_x &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeGetRtcSeconds
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_area_to_row
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_at_cmd_and_receive
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selftest.o(.constdata)
</UL>
<P><STRONG><a name="[5f]"></a>ExternalSerail1_GSMModule</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, selftest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = ExternalSerail1_GSMModule &rArr; text_out_to_row_Language2 &rArr; text_out_to_row &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_to_row_Language2
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_AutoPostKey
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_AutoOffLcdLight
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART2SendData
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART2ReceiveData
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART1SendData
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART1ReceiveData
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selftest.o(.constdata)
</UL>
<P><STRONG><a name="[1b7]"></a>kmy_PrinterUseUsart3</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, selftest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kmy_PrinterUseUsart3
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExternalSerail1_Printer
</UL>

<P><STRONG><a name="[60]"></a>ExternalSerail1_Printer</STRONG> (Thumb, 234 bytes, Stack size 112 bytes, selftest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = ExternalSerail1_Printer &rArr; text_out_to_row_Language2 &rArr; text_out_to_row &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterInit
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_to_row_Language2
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_AutoPostKey
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_AutoOffLcdLight
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART3SendData
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART3ReceiveData
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART3Init
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART1SendData
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART1ReceiveData
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterString
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterUseUsart3
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selftest.o(.constdata)
</UL>
<P><STRONG><a name="[73]"></a>UpgradeChinese</STRONG> (Thumb, 1236 bytes, Stack size 2088 bytes, selftest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 2328<LI>Call Chain = UpgradeChinese &rArr; text_out_to_row_Language2 &rArr; text_out_to_row &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_to_row_Language2
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msleep
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_AutoPostKey
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_AutoOffLcdLight
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART1SendString
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART1SendData
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART1ReceiveReset
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART1ReceiveData
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashWriteBuffer
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashReadBuffer
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashEraseBulk
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selftest.o(.constdata)
</UL>
<P><STRONG><a name="[62]"></a>EraseEepromPage</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, selftest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = EraseEepromPage &rArr; PassWordInput_MiddledDisplay &rArr; _PassWordInput_MiddledDisplay &rArr; clear_area_to_row &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_AsciiToOctor
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_WritePage
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PassWordInput_MiddledDisplay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selftest.o(.constdata)
</UL>
<P><STRONG><a name="[64]"></a>EraseEepromPage0_30</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, selftest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = EraseEepromPage0_30 &rArr; DrawTitle_to_row_Language2 &rArr; DrawTitle_to_row &rArr; text_out_to_row_x &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_WritePage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selftest.o(.constdata)
</UL>
<P><STRONG><a name="[65]"></a>EraseFlashPage</STRONG> (Thumb, 108 bytes, Stack size 96 bytes, selftest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = EraseFlashPage &rArr; PassWordInput_MiddledDisplay &rArr; _PassWordInput_MiddledDisplay &rArr; clear_area_to_row &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_AsciiToOctor
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashEraseSector
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PassWordInput_MiddledDisplay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selftest.o(.constdata)
</UL>
<P><STRONG><a name="[66]"></a>ReadFlashPage</STRONG> (Thumb, 116 bytes, Stack size 288 bytes, selftest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = ReadFlashPage &rArr; PassWordInput_MiddledDisplay &rArr; _PassWordInput_MiddledDisplay &rArr; clear_area_to_row &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_AsciiToOctor
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_charhexprintf_buff
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashReadBuffer
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PassWordInput_MiddledDisplay
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selftest.o(.constdata)
</UL>
<P><STRONG><a name="[67]"></a>WriteFlashPage</STRONG> (Thumb, 154 bytes, Stack size 296 bytes, selftest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = WriteFlashPage &rArr; PassWordInput_MiddledDisplay &rArr; _PassWordInput_MiddledDisplay &rArr; clear_area_to_row &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_AsciiToOctor
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_FlashWriteBuffer
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PassWordInput_MiddledDisplay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selftest.o(.constdata)
</UL>
<P><STRONG><a name="[63]"></a>SelfTest_ReadEepromPage0_30</STRONG> (Thumb, 92 bytes, Stack size 80 bytes, selftest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = SelfTest_ReadEepromPage0_30 &rArr; EepromFile_readPage &rArr; kmy_EepromReadSequent &rArr; IIC_Read_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_charhexprintf_buff
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_readPage
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selftest.o(.constdata)
</UL>
<P><STRONG><a name="[6e]"></a>SelfTest_Printer</STRONG> (Thumb, 694 bytes, Stack size 16 bytes, selftest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = SelfTest_Printer &rArr; DrawTitle_to_row_Language2 &rArr; DrawTitle_to_row &rArr; text_out_to_row_x &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterString
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterSetcommand
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterBitmap
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selftest.o(.constdata)
</UL>
<P><STRONG><a name="[71]"></a>SelfTest_DisplayFont</STRONG> (Thumb, 54 bytes, Stack size 520 bytes, selftest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = SelfTest_DisplayFont &rArr; my_DisplayBuff &rArr; _my_DisplayBuff &rArr; text_out_to_row_fillSpace &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_DisplayBuff
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selftest.o(.constdata)
</UL>
<P><STRONG><a name="[72]"></a>SelfTest_PrinterFont</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, selftest.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = SelfTest_PrinterFont &rArr; DrawTitle_to_row_Language2 &rArr; DrawTitle_to_row &rArr; text_out_to_row_x &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterString
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterSetcommand
</UL>
<BR>[Address Reference Count : 1]<UL><LI> selftest.o(.constdata)
</UL>
<P><STRONG><a name="[7f]"></a>ContrastSet</STRONG> (Thumb, 944 bytes, Stack size 80 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1908<LI>Call Chain = ContrastSet &rArr; StorageVariable &rArr; EepromFile_Write &rArr; EepromFile_GetAIdlePage &rArr; EepromFile_SetPageArea &rArr; EepromFile_WritePage &rArr; kmy_EepromWritePage &rArr; IIC_Send_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_contrast
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_rect
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_rect
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_to_row_x_Language2
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdTextOut
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_line
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventPost
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StorageVariable
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.constdata)
</UL>
<P><STRONG><a name="[3]"></a>Polish_Display_Keytone_Close</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1836<LI>Call Chain = Polish_Display_Keytone_Close &rArr; StorageVariable &rArr; EepromFile_Write &rArr; EepromFile_GetAIdlePage &rArr; EepromFile_SetPageArea &rArr; EepromFile_WritePage &rArr; kmy_EepromWritePage &rArr; IIC_Send_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StorageVariable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.data)
</UL>
<P><STRONG><a name="[4]"></a>Polish_Display_Keytone_Open</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1836<LI>Call Chain = Polish_Display_Keytone_Open &rArr; StorageVariable &rArr; EepromFile_Write &rArr; EepromFile_GetAIdlePage &rArr; EepromFile_SetPageArea &rArr; EepromFile_WritePage &rArr; kmy_EepromWritePage &rArr; IIC_Send_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StorageVariable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.data)
</UL>
<P><STRONG><a name="[80]"></a>BasicKeyTone</STRONG> (Thumb, 238 bytes, Stack size 24 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = BasicKeyTone &rArr; MenuHandler_Language2 &rArr; DisplayMenuPercent &rArr; fill_rect &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_strdel
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.constdata)
</UL>
<P><STRONG><a name="[82]"></a>PowerOffScreenTime</STRONG> (Thumb, 172 bytes, Stack size 56 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1884<LI>Call Chain = PowerOffScreenTime &rArr; StorageVariable &rArr; EepromFile_Write &rArr; EepromFile_GetAIdlePage &rArr; EepromFile_SetPageArea &rArr; EepromFile_WritePage &rArr; kmy_EepromWritePage &rArr; IIC_Send_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PassWordArgDeInit
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StorageVariable
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PassWordInput_MiddledDisplay
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.constdata)
</UL>
<P><STRONG><a name="[6]"></a>LanguageSet_English</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1836<LI>Call Chain = LanguageSet_English &rArr; StorageVariable &rArr; EepromFile_Write &rArr; EepromFile_GetAIdlePage &rArr; EepromFile_SetPageArea &rArr; EepromFile_WritePage &rArr; kmy_EepromWritePage &rArr; IIC_Send_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StorageVariable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.data)
</UL>
<P><STRONG><a name="[5]"></a>LanguageSet_Chinese</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1836<LI>Call Chain = LanguageSet_Chinese &rArr; StorageVariable &rArr; EepromFile_Write &rArr; EepromFile_GetAIdlePage &rArr; EepromFile_SetPageArea &rArr; EepromFile_WritePage &rArr; kmy_EepromWritePage &rArr; IIC_Send_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StorageVariable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.data)
</UL>
<P><STRONG><a name="[83]"></a>LanguageSet</STRONG> (Thumb, 456 bytes, Stack size 24 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = LanguageSet &rArr; MenuHandler_Language2 &rArr; DisplayMenuPercent &rArr; fill_rect &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_strdel
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuHandler_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.constdata)
</UL>
<P><STRONG><a name="[7a]"></a>DisplayCID</STRONG> (Thumb, 94 bytes, Stack size 112 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = DisplayCID &rArr; GetCCID &rArr; send_at_cmd_and_receive &rArr; kmy_GetKeyValue &rArr; KeyScan &rArr; __KeyScan &rArr; SetRow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCCID
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.constdata)
</UL>
<P><STRONG><a name="[7b]"></a>Display_IMEI</STRONG> (Thumb, 42 bytes, Stack size 64 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = Display_IMEI &rArr; DrawTitle_to_row &rArr; text_out_to_row_x &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIMEI
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.constdata)
</UL>
<P><STRONG><a name="[7c]"></a>Display_ChipId</STRONG> (Thumb, 58 bytes, Stack size 64 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = Display_ChipId &rArr; DrawTitle_to_row_Language2 &rArr; DrawTitle_to_row &rArr; text_out_to_row_x &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_MiscGetChipUniqueId
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.constdata)
</UL>
<P><STRONG><a name="[7d]"></a>Display_RandomNumber</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = Display_RandomNumber &rArr; DrawTitle_to_row_Language2 &rArr; DrawTitle_to_row &rArr; text_out_to_row_x &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_MiscGetRandomNumber
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.constdata)
</UL>
<P><STRONG><a name="[7e]"></a>Display_KMY_LibVersion</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = Display_KMY_LibVersion &rArr; DrawTitle_to_row_Language2 &rArr; DrawTitle_to_row &rArr; text_out_to_row_x &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_MiscGetLibraryVersion
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.constdata)
</UL>
<P><STRONG><a name="[76]"></a>BasicApnSetApn</STRONG> (Thumb, 132 bytes, Stack size 80 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1424<LI>Call Chain = BasicApnSetApn &rArr; set_apn &rArr; send_at_cmd_and_return &rArr; ReadDatasFromtty &rArr; kmy_USART2ReceiveData
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreLocalSettings
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_apn
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetString_abcABC123PYWuBi_Language2
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.constdata)
</UL>
<P><STRONG><a name="[77]"></a>BasicApnSetUsername</STRONG> (Thumb, 132 bytes, Stack size 56 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1400<LI>Call Chain = BasicApnSetUsername &rArr; set_apn &rArr; send_at_cmd_and_return &rArr; ReadDatasFromtty &rArr; kmy_USART2ReceiveData
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreLocalSettings
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_apn
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetString_abcABC123PYWuBi_Language2
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.constdata)
</UL>
<P><STRONG><a name="[78]"></a>BasicApnSetPassword</STRONG> (Thumb, 132 bytes, Stack size 56 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1400<LI>Call Chain = BasicApnSetPassword &rArr; set_apn &rArr; send_at_cmd_and_return &rArr; ReadDatasFromtty &rArr; kmy_USART2ReceiveData
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreLocalSettings
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_apn
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetString_abcABC123PYWuBi_Language2
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.constdata)
</UL>
<P><STRONG><a name="[81]"></a>TimeDateSet</STRONG> (Thumb, 1004 bytes, Stack size 344 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = TimeDateSet &rArr; draw_rect &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeGetTime
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_rect
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_to_row_x
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msleep
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PostKey
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepNormal
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_area
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeSetTime
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBitOfDecimal
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBitOfDecimal
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TranslateKeyToDecimal
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.constdata)
</UL>
<P><STRONG><a name="[8a]"></a>IpAddSet</STRONG> (Thumb, 180 bytes, Stack size 64 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1892<LI>Call Chain = IpAddSet &rArr; StorageVariable &rArr; EepromFile_Write &rArr; EepromFile_GetAIdlePage &rArr; EepromFile_SetPageArea &rArr; EepromFile_WritePage &rArr; kmy_EepromWritePage &rArr; IIC_Send_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abcABC123PYWuBiArgDeInit
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetString_abcABC123PYWuBi2
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StorageVariable
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.constdata)
</UL>
<P><STRONG><a name="[85]"></a>PIN_OpenClose</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, setting.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.constdata)
</UL>
<P><STRONG><a name="[86]"></a>PIN_Change</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, setting.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.constdata)
</UL>
<P><STRONG><a name="[9f]"></a>RestoreChuChangSet</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1868<LI>Call Chain = RestoreChuChangSet &rArr; RestoreConfigFile &rArr; EepromFile_WriteData &rArr; EepromFile_Write &rArr; EepromFile_GetAIdlePage &rArr; EepromFile_SetPageArea &rArr; EepromFile_WritePage &rArr; kmy_EepromWritePage &rArr; IIC_Send_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestoreConfigFile
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EepromFile_FileSystemFormat
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormatLocalSetting
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.constdata)
</UL>
<P><STRONG><a name="[9c]"></a>OpPsword</STRONG> (Thumb, 170 bytes, Stack size 64 bytes, setting.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1892<LI>Call Chain = OpPsword &rArr; StorageVariable &rArr; EepromFile_Write &rArr; EepromFile_GetAIdlePage &rArr; EepromFile_SetPageArea &rArr; EepromFile_WritePage &rArr; kmy_EepromWritePage &rArr; IIC_Send_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitkeyAndAutoExit
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row_Language2
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PassWordArgDeInit
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StorageVariable
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PassWordInput_MiddledDisplay
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> setting.o(.constdata)
</UL>
<P><STRONG><a name="[1e5]"></a>srf_strcat_insert</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, shurufa.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = srf_strcat_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetString_123TimeInput
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetString_abcABC123PYWuBi
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_ABCReadCode
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_abcReadCode
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABCReadCode
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abcReadCode
</UL>

<P><STRONG><a name="[1e6]"></a>CalculateCursorOffset</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, shurufa.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CalculateCursorOffset
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashcursor
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_ABCReadCode
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_abcReadCode
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_123TimeInput
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_123ReadCode
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABCReadCode
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abcReadCode
</UL>

<P><STRONG><a name="[1e8]"></a>my_AccordPointInsertEdit</STRONG> (Thumb, 308 bytes, Stack size 88 bytes, shurufa.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = my_AccordPointInsertEdit &rArr; text_out_to_row_Language2 &rArr; text_out_to_row &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_to_row_Language2
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashcursor
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetString_123TimeInput
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetString_abcABC123PYWuBi
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_ABCReadCode
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_abcReadCode
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ABCReadCode
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abcReadCode
</UL>

<P><STRONG><a name="[1e9]"></a>flashguangbiao_to_row</STRONG> (Thumb, 22 bytes, Stack size 12 bytes, shurufa.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = flashguangbiao_to_row
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flashcursor
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetString_123TimeInput
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetString_abcABC123PYWuBi
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRecjectReasonAndInput
</UL>

<P><STRONG><a name="[1ea]"></a>abcReadCode</STRONG> (Thumb, 500 bytes, Stack size 104 bytes, shurufa.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = abcReadCode &rArr; my_AccordPointInsertEdit &rArr; text_out_to_row_Language2 &rArr; text_out_to_row &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_GetCurrentMs
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PostKey
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventPost
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverse_area
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_AccordPointInsertEdit
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateCursorOffset
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srf_strcat_insert
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetString_abcABC123PYWuBi
</UL>

<P><STRONG><a name="[1eb]"></a>ABCReadCode</STRONG> (Thumb, 524 bytes, Stack size 104 bytes, shurufa.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = ABCReadCode &rArr; my_AccordPointInsertEdit &rArr; text_out_to_row_Language2 &rArr; text_out_to_row &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_GetCurrentMs
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PostKey
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventPost
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverse_area
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_AccordPointInsertEdit
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateCursorOffset
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srf_strcat_insert
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetString_abcABC123PYWuBi
</UL>

<P><STRONG><a name="[1ec]"></a>_123ReadCode</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, shurufa.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _123ReadCode &rArr; CalculateCursorOffset
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateCursorOffset
</UL>
<BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetString_abcABC123PYWuBi
</UL>

<P><STRONG><a name="[1ed]"></a>_123TimeInput</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, shurufa.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _123TimeInput &rArr; CalculateCursorOffset
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateCursorOffset
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetString_123TimeInput
</UL>

<P><STRONG><a name="[1ef]"></a>GetSrfString</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, shurufa.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaySrfAndInput
</UL>

<P><STRONG><a name="[1ee]"></a>DisplaySrfAndInput</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, shurufa.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = DisplaySrfAndInput &rArr; reverse_area_to_row &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverse_area_to_row
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_area_to_row
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_to_row_x
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSrfString
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetString_123TimeInput
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetString_abcABC123PYWuBi
</UL>

<P><STRONG><a name="[1f3]"></a>SwitchSrf</STRONG> (Thumb, 246 bytes, Stack size 0 bytes, shurufa.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetString_123TimeInput
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetString_abcABC123PYWuBi
</UL>

<P><STRONG><a name="[1f0]"></a>flightcursor</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, shurufa.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = flightcursor &rArr; reverse_area &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_GetCurrentMs
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverse_area
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetString_123TimeInput
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetString_abcABC123PYWuBi
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRecjectReasonAndInput
</UL>

<P><STRONG><a name="[1f5]"></a>my_abcReadCode</STRONG> (Thumb, 516 bytes, Stack size 112 bytes, shurufa.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = my_abcReadCode &rArr; my_AccordPointInsertEdit &rArr; text_out_to_row_Language2 &rArr; text_out_to_row &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_GetCurrentMs
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PostKey
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventPost
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverse_area
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_AccordPointInsertEdit
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateCursorOffset
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srf_strcat_insert
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRecjectReasonAndInput
</UL>

<P><STRONG><a name="[1f6]"></a>my_ABCReadCode</STRONG> (Thumb, 502 bytes, Stack size 112 bytes, shurufa.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = my_ABCReadCode &rArr; my_AccordPointInsertEdit &rArr; text_out_to_row_Language2 &rArr; text_out_to_row &rArr; kmy_LcdTextOut &rArr; kmy_LcdDrawBitMap &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_GetCurrentMs
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PostKey
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventPost
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverse_area
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_AccordPointInsertEdit
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateCursorOffset
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srf_strcat_insert
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRecjectReasonAndInput
</UL>

<P><STRONG><a name="[1f9]"></a>_PassWordInput_XposStartDisplay</STRONG> (Thumb, 534 bytes, Stack size 80 bytes, shurufa.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = _PassWordInput_XposStartDisplay &rArr; clear_area &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;text_out_to_row_x
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_area
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventPost
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PassWordInput2
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PassWordInput
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PassWordInput_XposStartDisplay
</UL>

<P><STRONG><a name="[1fb]"></a>_PassWordInput_MiddledDisplay</STRONG> (Thumb, 484 bytes, Stack size 64 bytes, shurufa.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = _PassWordInput_MiddledDisplay &rArr; clear_area_to_row &rArr; kmy_LcdDrawRect &rArr; kmy_LcdDrawLine &rArr; AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_area_to_row
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTitle_to_row
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_GetKeyValue
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyIsResponse
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventPost
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PassWordInput_MiddledDisplay
</UL>

<P><STRONG><a name="[202]"></a>HaomaToMassageCode</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, sim900b.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMessage
</UL>

<P><STRONG><a name="[207]"></a>MassageCodeToHaoma</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, sim900b.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveMessageDecode
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveMessageDecode_onlyPhoneNumber
</UL>

<P><STRONG><a name="[203]"></a>OneHexToTwoAsccii</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, sim900b.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMessage
</UL>

<P><STRONG><a name="[1ff]"></a>TwoAscciiToOneHex</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, sim900b.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveMessageDecode
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveMessageDecode_onlyPhoneNumber
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetContext_7bit
</UL>

<P><STRONG><a name="[201]"></a>CheckBuffWhetherAllisAsccii</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, sim900b.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMessage
</UL>

<P><STRONG><a name="[1fd]"></a>PDU7bitEncode</STRONG> (Thumb, 106 bytes, Stack size 536 bytes, sim900b.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMessage
</UL>

<P><STRONG><a name="[205]"></a>AsciiGB2312ToUCS2</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sim900b.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMessage
</UL>

<P><STRONG><a name="[208]"></a>GetContext_UCS2</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sim900b.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveMessageDecode
</UL>

<P><STRONG><a name="[1fe]"></a>GetContext_7bit</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, sim900b.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TwoAscciiToOneHex
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveMessageDecode
</UL>

<P><STRONG><a name="[209]"></a>GetContext_8bit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sim900b.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveMessageDecode
</UL>

<P><STRONG><a name="[20b]"></a>get_ucs2_offset</STRONG> (Thumb, 106 bytes, Stack size 20 bytes, ucs2_to_gb2312.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = get_ucs2_offset
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucs2str_to_gb2312str
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucs2_to_gb2312
</UL>

<P><STRONG><a name="[21c]"></a>kmy_PrinterUseUsart3</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, foodorder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kmy_PrinterUseUsart3
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintOrder
</UL>

<P><STRONG><a name="[21e]"></a>NVIC_SystemReset</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, foodorder.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckOrderFailWarn
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_Thread
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintOrder
</UL>

<P><STRONG><a name="[234]"></a>SetSysClockTo72</STRONG> (Thumb, 192 bytes, Stack size 0 bytes, system_stm32f10x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[233]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_stm32f10x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[25c]"></a>TI4_Config</STRONG> (Thumb, 118 bytes, Stack size 20 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[25a]"></a>TI3_Config</STRONG> (Thumb, 114 bytes, Stack size 20 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[258]"></a>TI2_Config</STRONG> (Thumb, 118 bytes, Stack size 20 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[256]"></a>TI1_Config</STRONG> (Thumb, 106 bytes, Stack size 20 bytes, stm32f10x_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[267]"></a>kmy_USART1SendOne</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, kmy_usart1drv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART1SendString
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART1SendData
</UL>

<P><STRONG><a name="[273]"></a>kmy_USART2SendOne</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, kmy_usart2drv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART2SendString
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART2SendData
</UL>

<P><STRONG><a name="[275]"></a>kmy_USART3SendOne</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, kmy_usart3drv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART3SendData
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART3SendString
</UL>

<P><STRONG><a name="[279]"></a>IIC_Init</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, kmy_eepromdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = IIC_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromInit
</UL>

<P><STRONG><a name="[27a]"></a>IIC_Start</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, kmy_eepromdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = IIC_Start &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usleep
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromWritePage
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromWriteByte
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromReadSequent
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromReadByte
</UL>

<P><STRONG><a name="[27c]"></a>IIC_Stop</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, kmy_eepromdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = IIC_Stop &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usleep
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromWritePage
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromWriteByte
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromReadSequent
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromReadByte
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
</UL>

<P><STRONG><a name="[27d]"></a>IIC_Wait_Ack</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, kmy_eepromdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = IIC_Wait_Ack &rArr; IIC_Stop &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usleep
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromWritePage
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromWriteByte
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromReadSequent
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromReadByte
</UL>

<P><STRONG><a name="[27e]"></a>IIC_Ack</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, kmy_eepromdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = IIC_Ack &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usleep
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromReadSequent
</UL>

<P><STRONG><a name="[27f]"></a>IIC_NAck</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, kmy_eepromdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = IIC_NAck &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usleep
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromReadSequent
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromReadByte
</UL>

<P><STRONG><a name="[280]"></a>IIC_Send_Byte</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, kmy_eepromdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = IIC_Send_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usleep
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromWritePage
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromWriteByte
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromReadSequent
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromReadByte
</UL>

<P><STRONG><a name="[281]"></a>IIC_Read_Byte</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, kmy_eepromdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = IIC_Read_Byte &rArr; usleep &rArr; msleep &rArr; sleep
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usleep
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromReadSequent
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_EepromReadByte
</UL>

<P><STRONG><a name="[2a2]"></a>AccordingLcdRamDisplay</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, kmy_lcddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = AccordingLcdRamDisplay &rArr; LCDSetXY &rArr; write_command &rArr; data_send
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDSetXY
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdDrawRect
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdDrawLine
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdDrawBitMap
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdClear
</UL>

<P><STRONG><a name="[2a6]"></a>byteCombine</STRONG> (Thumb, 104 bytes, Stack size 40 bytes, kmy_lcddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = byteCombine
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdDrawBitMap
</UL>

<P><STRONG><a name="[2a8]"></a>GetChinesePositon</STRONG> (Thumb, 82 bytes, Stack size 12 bytes, kmy_lcddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GetChinesePositon
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdTextOut
</UL>

<P><STRONG><a name="[2a9]"></a>BuffAnyByteBits_Change</STRONG> (Thumb, 82 bytes, Stack size 12 bytes, kmy_lcddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = BuffAnyByteBits_Change
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_LcdDrawRect
</UL>

<P><STRONG><a name="[2aa]"></a>MgGetCls</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, kmy_magcarddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MgGetCls
</UL>
<BR>[Calls]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_MagcardRead
</UL>

<P><STRONG><a name="[2ab]"></a>MgGetRDP2</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, kmy_magcarddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MgGetRDP2
</UL>
<BR>[Calls]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_MagcardRead
</UL>

<P><STRONG><a name="[2ac]"></a>MgGetRCP2</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, kmy_magcarddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MgGetRCP2
</UL>
<BR>[Calls]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_MagcardRead
</UL>

<P><STRONG><a name="[2ad]"></a>MgGetRDP3</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, kmy_magcarddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MgGetRDP3
</UL>
<BR>[Calls]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_MagcardRead
</UL>

<P><STRONG><a name="[2ae]"></a>MgGetRCP3</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, kmy_magcarddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MgGetRCP3
</UL>
<BR>[Calls]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_MagcardRead
</UL>

<P><STRONG><a name="[2b6]"></a>ArrayExchangeEndToEnd</STRONG> (Thumb, 78 bytes, Stack size 20 bytes, kmy_magcarddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ArrayExchangeEndToEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetValidData
</UL>

<P><STRONG><a name="[2b8]"></a>CalcXOR</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, kmy_magcarddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CalcXOR
</UL>
<BR>[Called By]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetValidData
</UL>

<P><STRONG><a name="[2b0]"></a>CalcOddParity</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, kmy_magcarddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CalcOddParity
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckParity
</UL>

<P><STRONG><a name="[2af]"></a>CheckParity</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, kmy_magcarddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CheckParity &rArr; CalcOddParity
</UL>
<BR>[Calls]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcOddParity
</UL>
<BR>[Called By]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetValidData
</UL>

<P><STRONG><a name="[2b2]"></a>ChangeData23</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, kmy_magcarddrv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTrack23
</UL>

<P><STRONG><a name="[2b1]"></a>ShowTrack23</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, kmy_magcarddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ShowTrack23
</UL>
<BR>[Calls]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeData23
</UL>
<BR>[Called By]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetValidData
</UL>

<P><STRONG><a name="[2b4]"></a>ChangeData1</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, kmy_magcarddrv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTrack1
</UL>

<P><STRONG><a name="[2b3]"></a>ShowTrack1</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, kmy_magcarddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ShowTrack1
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeData1
</UL>
<BR>[Called By]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetValidData
</UL>

<P><STRONG><a name="[2b7]"></a>GetStartEnd</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, kmy_magcarddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetStartEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetValidData
</UL>

<P><STRONG><a name="[2b5]"></a>GetValidData</STRONG> (Thumb, 166 bytes, Stack size 40 bytes, kmy_magcarddrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GetValidData &rArr; GetStartEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetStartEnd
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTrack1
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTrack23
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckParity
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcXOR
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ArrayExchangeEndToEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_MagcardRead
</UL>

<P><STRONG><a name="[2c2]"></a>kmy_PrinterUseUsart3</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, kmy_printerdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = kmy_PrinterUseUsart3
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterInit
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterString
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterSetcommand
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterBitmap
</UL>

<P><STRONG><a name="[2c3]"></a>PrinterBaudRateSet</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, kmy_printerdrv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = PrinterBaudRateSet &rArr; kmy_USART3Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;msleep
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART3SendData
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART3ReceiveData
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART3Init
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterSetcommand
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_USART3ReceiveReset
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterString
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_PrinterBitmap
</UL>

<P><STRONG><a name="[2cd]"></a>time2_NVIC_Configuration</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, kmy_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = time2_NVIC_Configuration &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeInit
</UL>

<P><STRONG><a name="[2ce]"></a>time3_NVIC_Configuration</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, kmy_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = time3_NVIC_Configuration &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeInit
</UL>

<P><STRONG><a name="[2d7]"></a>__offtime</STRONG> (Thumb, 586 bytes, Stack size 56 bytes, kmy_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __offtime
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kmy_TimeGetTime
</UL>

<P><STRONG><a name="[302]"></a>_fp_digits</STRONG> (Thumb, 318 bytes, Stack size 56 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[300]"></a>_printf_core</STRONG> (Thumb, 1734 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[305]"></a>_printf_post_padding</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[304]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[41]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0sprintf)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
